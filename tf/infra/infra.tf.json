{
  "resource": {
    "cloudflare_record": {
      "server-0-ams3-c01": {
        "name": "${random_pet.server-0-ams3-c01.id}.node.ams3c01",
        "type": "A",
        "value": "${digitalocean_droplet.server-0-ams3-c01.ipv4_address}",
        "zone_id": "509ed139781f06c94ebb5d6c9d9e85be"
      },
      "server-0-ams3-c01-consul": {
        "name": "consul.service.ams3c01",
        "ttl": 1,
        "type": "A",
        "value": "${digitalocean_droplet.server-0-ams3-c01.ipv4_address}",
        "zone_id": "509ed139781f06c94ebb5d6c9d9e85be"
      },
      "server-0-ams3-c01-nomad": {
        "name": "nomad.service.ams3c01",
        "ttl": 1,
        "type": "A",
        "value": "${digitalocean_droplet.server-0-ams3-c01.ipv4_address}",
        "zone_id": "509ed139781f06c94ebb5d6c9d9e85be"
      },
      "server-0-ams3-c01-star": {
        "name": "*.service.ams3c01",
        "ttl": 120,
        "type": "A",
        "value": "${digitalocean_droplet.server-0-ams3-c01.ipv4_address}",
        "zone_id": "509ed139781f06c94ebb5d6c9d9e85be"
      },
      "server-0-ams3-c01-vault": {
        "name": "vault.service.ams3c01",
        "ttl": 1,
        "type": "A",
        "value": "${digitalocean_droplet.server-0-ams3-c01.ipv4_address}",
        "zone_id": "509ed139781f06c94ebb5d6c9d9e85be"
      },
      "server-0-ams3-c01-wan": {
        "name": "wan",
        "ttl": 120,
        "type": "A",
        "value": "${digitalocean_droplet.server-0-ams3-c01.ipv4_address}",
        "zone_id": "0280c074462b8ec6ff40f9b1790f7af3"
      },
      "server-0-lon1-c01": {
        "name": "${random_pet.server-0-lon1-c01.id}.node.lon1c01",
        "type": "A",
        "value": "${digitalocean_droplet.server-0-lon1-c01.ipv4_address}",
        "zone_id": "509ed139781f06c94ebb5d6c9d9e85be"
      },
      "server-0-lon1-c01-consul": {
        "name": "consul.service.lon1c01",
        "ttl": 1,
        "type": "A",
        "value": "${digitalocean_droplet.server-0-lon1-c01.ipv4_address}",
        "zone_id": "509ed139781f06c94ebb5d6c9d9e85be"
      },
      "server-0-lon1-c01-nomad": {
        "name": "nomad.service.lon1c01",
        "ttl": 1,
        "type": "A",
        "value": "${digitalocean_droplet.server-0-lon1-c01.ipv4_address}",
        "zone_id": "509ed139781f06c94ebb5d6c9d9e85be"
      },
      "server-0-lon1-c01-star": {
        "name": "*.service.lon1c01",
        "ttl": 120,
        "type": "A",
        "value": "${digitalocean_droplet.server-0-lon1-c01.ipv4_address}",
        "zone_id": "509ed139781f06c94ebb5d6c9d9e85be"
      },
      "server-0-lon1-c01-vault": {
        "name": "vault.service.lon1c01",
        "ttl": 1,
        "type": "A",
        "value": "${digitalocean_droplet.server-0-lon1-c01.ipv4_address}",
        "zone_id": "509ed139781f06c94ebb5d6c9d9e85be"
      },
      "server-0-lon1-c01-wan": {
        "name": "wan",
        "ttl": 120,
        "type": "A",
        "value": "${digitalocean_droplet.server-0-lon1-c01.ipv4_address}",
        "zone_id": "0280c074462b8ec6ff40f9b1790f7af3"
      },
      "server-1-ams3-c01": {
        "name": "${random_pet.server-1-ams3-c01.id}.node.ams3c01",
        "type": "A",
        "value": "${digitalocean_droplet.server-1-ams3-c01.ipv4_address}",
        "zone_id": "509ed139781f06c94ebb5d6c9d9e85be"
      },
      "server-1-ams3-c01-consul": {
        "name": "consul.service.ams3c01",
        "ttl": 1,
        "type": "A",
        "value": "${digitalocean_droplet.server-1-ams3-c01.ipv4_address}",
        "zone_id": "509ed139781f06c94ebb5d6c9d9e85be"
      },
      "server-1-ams3-c01-nomad": {
        "name": "nomad.service.ams3c01",
        "ttl": 1,
        "type": "A",
        "value": "${digitalocean_droplet.server-1-ams3-c01.ipv4_address}",
        "zone_id": "509ed139781f06c94ebb5d6c9d9e85be"
      },
      "server-1-ams3-c01-star": {
        "name": "*.service.ams3c01",
        "ttl": 120,
        "type": "A",
        "value": "${digitalocean_droplet.server-1-ams3-c01.ipv4_address}",
        "zone_id": "509ed139781f06c94ebb5d6c9d9e85be"
      },
      "server-1-ams3-c01-vault": {
        "name": "vault.service.ams3c01",
        "ttl": 1,
        "type": "A",
        "value": "${digitalocean_droplet.server-1-ams3-c01.ipv4_address}",
        "zone_id": "509ed139781f06c94ebb5d6c9d9e85be"
      },
      "server-1-ams3-c01-wan": {
        "name": "wan",
        "ttl": 120,
        "type": "A",
        "value": "${digitalocean_droplet.server-1-ams3-c01.ipv4_address}",
        "zone_id": "0280c074462b8ec6ff40f9b1790f7af3"
      },
      "server-1-lon1-c01": {
        "name": "${random_pet.server-1-lon1-c01.id}.node.lon1c01",
        "type": "A",
        "value": "${digitalocean_droplet.server-1-lon1-c01.ipv4_address}",
        "zone_id": "509ed139781f06c94ebb5d6c9d9e85be"
      },
      "server-1-lon1-c01-consul": {
        "name": "consul.service.lon1c01",
        "ttl": 1,
        "type": "A",
        "value": "${digitalocean_droplet.server-1-lon1-c01.ipv4_address}",
        "zone_id": "509ed139781f06c94ebb5d6c9d9e85be"
      },
      "server-1-lon1-c01-nomad": {
        "name": "nomad.service.lon1c01",
        "ttl": 1,
        "type": "A",
        "value": "${digitalocean_droplet.server-1-lon1-c01.ipv4_address}",
        "zone_id": "509ed139781f06c94ebb5d6c9d9e85be"
      },
      "server-1-lon1-c01-star": {
        "name": "*.service.lon1c01",
        "ttl": 120,
        "type": "A",
        "value": "${digitalocean_droplet.server-1-lon1-c01.ipv4_address}",
        "zone_id": "509ed139781f06c94ebb5d6c9d9e85be"
      },
      "server-1-lon1-c01-vault": {
        "name": "vault.service.lon1c01",
        "ttl": 1,
        "type": "A",
        "value": "${digitalocean_droplet.server-1-lon1-c01.ipv4_address}",
        "zone_id": "509ed139781f06c94ebb5d6c9d9e85be"
      },
      "server-1-lon1-c01-wan": {
        "name": "wan",
        "ttl": 120,
        "type": "A",
        "value": "${digitalocean_droplet.server-1-lon1-c01.ipv4_address}",
        "zone_id": "0280c074462b8ec6ff40f9b1790f7af3"
      },
      "server-2-ams3-c01": {
        "name": "${random_pet.server-2-ams3-c01.id}.node.ams3c01",
        "type": "A",
        "value": "${digitalocean_droplet.server-2-ams3-c01.ipv4_address}",
        "zone_id": "509ed139781f06c94ebb5d6c9d9e85be"
      },
      "server-2-ams3-c01-consul": {
        "name": "consul.service.ams3c01",
        "ttl": 1,
        "type": "A",
        "value": "${digitalocean_droplet.server-2-ams3-c01.ipv4_address}",
        "zone_id": "509ed139781f06c94ebb5d6c9d9e85be"
      },
      "server-2-ams3-c01-nomad": {
        "name": "nomad.service.ams3c01",
        "ttl": 1,
        "type": "A",
        "value": "${digitalocean_droplet.server-2-ams3-c01.ipv4_address}",
        "zone_id": "509ed139781f06c94ebb5d6c9d9e85be"
      },
      "server-2-ams3-c01-star": {
        "name": "*.service.ams3c01",
        "ttl": 120,
        "type": "A",
        "value": "${digitalocean_droplet.server-2-ams3-c01.ipv4_address}",
        "zone_id": "509ed139781f06c94ebb5d6c9d9e85be"
      },
      "server-2-ams3-c01-vault": {
        "name": "vault.service.ams3c01",
        "ttl": 1,
        "type": "A",
        "value": "${digitalocean_droplet.server-2-ams3-c01.ipv4_address}",
        "zone_id": "509ed139781f06c94ebb5d6c9d9e85be"
      },
      "server-2-ams3-c01-wan": {
        "name": "wan",
        "ttl": 120,
        "type": "A",
        "value": "${digitalocean_droplet.server-2-ams3-c01.ipv4_address}",
        "zone_id": "0280c074462b8ec6ff40f9b1790f7af3"
      },
      "server-2-lon1-c01": {
        "name": "${random_pet.server-2-lon1-c01.id}.node.lon1c01",
        "type": "A",
        "value": "${digitalocean_droplet.server-2-lon1-c01.ipv4_address}",
        "zone_id": "509ed139781f06c94ebb5d6c9d9e85be"
      },
      "server-2-lon1-c01-consul": {
        "name": "consul.service.lon1c01",
        "ttl": 1,
        "type": "A",
        "value": "${digitalocean_droplet.server-2-lon1-c01.ipv4_address}",
        "zone_id": "509ed139781f06c94ebb5d6c9d9e85be"
      },
      "server-2-lon1-c01-nomad": {
        "name": "nomad.service.lon1c01",
        "ttl": 1,
        "type": "A",
        "value": "${digitalocean_droplet.server-2-lon1-c01.ipv4_address}",
        "zone_id": "509ed139781f06c94ebb5d6c9d9e85be"
      },
      "server-2-lon1-c01-star": {
        "name": "*.service.lon1c01",
        "ttl": 120,
        "type": "A",
        "value": "${digitalocean_droplet.server-2-lon1-c01.ipv4_address}",
        "zone_id": "509ed139781f06c94ebb5d6c9d9e85be"
      },
      "server-2-lon1-c01-vault": {
        "name": "vault.service.lon1c01",
        "ttl": 1,
        "type": "A",
        "value": "${digitalocean_droplet.server-2-lon1-c01.ipv4_address}",
        "zone_id": "509ed139781f06c94ebb5d6c9d9e85be"
      },
      "server-2-lon1-c01-wan": {
        "name": "wan",
        "ttl": 120,
        "type": "A",
        "value": "${digitalocean_droplet.server-2-lon1-c01.ipv4_address}",
        "zone_id": "0280c074462b8ec6ff40f9b1790f7af3"
      }
    },
    "digitalocean_droplet": {
      "server-0-ams3-c01": {
        "image": "ubuntu-18-04-x64",
        "name": "${random_pet.server-0-ams3-c01.id}",
        "private_networking": true,
        "region": "ams3",
        "size": "s-2vcpu-4gb",
        "ssh_keys": [
          "${digitalocean_ssh_key.smintz-0.id}"
        ],
        "tags": [
          "server",
          "c01"
        ],
        "user_data": "#!/bin/bash\napt-get update\napt-get install -y unzip curl jq dnsutils\nuseradd --system --home /etc/consul.d --shell /bin/false consul\nmkdir -p /etc/consul.d\nchown root:root /etc/consul.d\nchmod 0755 /etc/consul.d\nmkdir -p /opt/consul\nchown consul:consul /opt/consul\nchmod 0755 /opt/consul\ncurl -L https://releases.hashicorp.com/consul/1.7.1/consul_1.7.1_linux_amd64.zip -o /tmp/consul-1.7.1.zip\nchown root:root /tmp/consul-1.7.1.zip\nchmod 0644 /tmp/consul-1.7.1.zip\nunzip -x /tmp/consul-1.7.1.zip -d /usr/local/bin\nrm /tmp/consul-1.7.1.zip\nconsul -autocomplete-install\ncomplete -C /usr/local/bin/consul consul\ncat <<FILE_CONTENT | cat | tee /etc/systemd/network/consul0.netdev\n# Creates a \"dummy\" network interface\n# we'll configure this interface with a link-local address\n# See: https://www.freedesktop.org/software/systemd/man/systemd.netdev.html\n##\n\n[NetDev]\nName=consul0\nKind=dummy\n\nFILE_CONTENT\nchown root:root /etc/systemd/network/consul0.netdev\nchmod 0644 /etc/systemd/network/consul0.netdev\ncat <<FILE_CONTENT | cat | tee /etc/systemd/network/consul0.network\n# We \"find\" the dummy0 interface we created and configure it with a link-local address\n# See: https://www.freedesktop.org/software/systemd/man/systemd.network.html\n##\n[Match]\nName=consul0\n\n[Network]\nAddress=169.254.1.1/32\n\n# We want these domains\nDomains= ~protoconf.sh.\n\n# To go to the consul DNS server we'll bind to this address\nDNS=169.254.1.1\n\nFILE_CONTENT\nchown root:root /etc/systemd/network/consul0.network\nchmod 0644 /etc/systemd/network/consul0.network\nsystemctl restart systemd-networkd\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/config.hcl\nui = true\nbind_addr = \"0.0.0.0\"\nadvertise_addr = \"{{GetPublicIP}}\"\ndatacenter = \"ams3c01\"\ndata_dir = \"/opt/consul\"\ndomain = \"protoconf.sh\"\nFILE_CONTENT\nchown consul:consul /etc/consul.d/config.hcl\nchmod 0640 /etc/consul.d/config.hcl\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/server.hcl\nserver = true\nbootstrap_expect = 3\nFILE_CONTENT\nchown consul:consul /etc/consul.d/server.hcl\nchmod 0640 /etc/consul.d/server.hcl\ncat <<FILE_CONTENT | cat | tee /usr/local/share/ca-certificates/protoconf.crt\n${tls_self_signed_cert.root.cert_pem}\nFILE_CONTENT\nchown root:root /usr/local/share/ca-certificates/protoconf.crt\nchmod 0644 /usr/local/share/ca-certificates/protoconf.crt\nupdate-ca-certificates\nmkdir -p /etc/consul.d/tls\nchown root:root /etc/consul.d/tls\nchmod 0755 /etc/consul.d/tls\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/tls/key.pem\n${tls_private_key.server-0-ams3-c01-consul.private_key_pem}\nFILE_CONTENT\nchown consul:consul /etc/consul.d/tls/key.pem\nchmod 600 /etc/consul.d/tls/key.pem\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/tls/cert.pem\n${tls_locally_signed_cert.server-0-ams3-c01-consul.cert_pem}\nFILE_CONTENT\nchown consul:consul /etc/consul.d/tls/cert.pem\nchmod 0644 /etc/consul.d/tls/cert.pem\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/tls.hcl\nkey_file = \"/etc/consul.d/tls/key.pem\"\ncert_file = \"/etc/consul.d/tls/cert.pem\"\nca_file = \"/usr/local/share/ca-certificates/protoconf.crt\"\naddresses {\n    https = \"0.0.0.0\"\n    dns = \"169.254.1.1\"\n}\nports {\n    https = 8501\n    dns = 53\n}\nencrypt = \"${random_id.consul_encrypt.b64_std}\"\nrecursors = [\"127.0.0.53\"]\n\nFILE_CONTENT\nchown root:root /etc/consul.d/tls.hcl\nchmod 0644 /etc/consul.d/tls.hcl\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/join_lan.hcl\nretry_join = [\"provider=digitalocean api_token=${var.digitalocean_token} region=ams3 tag_name=server\"]\nFILE_CONTENT\nchown consul:consul /etc/consul.d/join_lan.hcl\nchmod 0640 /etc/consul.d/join_lan.hcl\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/join_wan.hcl\nretry_join_wan = [\"provider=digitalocean api_token=${var.digitalocean_token} tag_name=server\",\"wan.protoconf.com\"]\nFILE_CONTENT\nchown consul:consul /etc/consul.d/join_wan.hcl\nchmod 0640 /etc/consul.d/join_wan.hcl\ncat <<FILE_CONTENT | cat | tee /etc/systemd/system/consul.service\n[Unit]\nAfter=network-online.target\nDescription=HashiCorp Consul - A service mesh solution\nDocumentation=https://www.consul.io/\nRequires=network-online.target\n[Service]\nAmbientCapabilities=CAP_NET_BIND_SERVICE\nExecReload=/usr/local/bin/consul reload\nExecStart=/usr/local/bin/consul agent -config-dir=/etc/consul.d/\nGroup=consul\nKillMode=process\nLimitNOFILE=65536\nRestart=on-failure\nType=notify\nUser=consul\n[Install]\nWantedBy=multi-user.target\nFILE_CONTENT\nchown root:root /etc/systemd/system/consul.service\nchmod 0644 /etc/systemd/system/consul.service\nsystemctl start consul\nsystemctl enable consul\ncurl -L https://releases.hashicorp.com/vault/1.3.2/vault_1.3.2_linux_amd64.zip -o /tmp/vault-1.3.2.zip\nchown root:root /tmp/vault-1.3.2.zip\nchmod 0644 /tmp/vault-1.3.2.zip\nunzip -x /tmp/vault-1.3.2.zip -d /usr/local/bin\nrm /tmp/vault-1.3.2.zip\nvault -autocomplete-install\nsetcap cap_ipc_lock=+ep /usr/local/bin/vault\nuseradd --system --home /etc/vault.d --shell /bin/false vault\nmkdir -p /etc/vault.d\nchown vault:vault /etc/vault.d\nchmod 0755 /etc/vault.d\nmkdir -p /etc/vault.d/tls\nchown vault:vault /etc/vault.d/tls\nchmod 700 /etc/vault.d/tls\ncat <<FILE_CONTENT | cat | tee /etc/vault.d/tls/key.pem\n${tls_private_key.server-0-ams3-c01-vault.private_key_pem}\nFILE_CONTENT\nchown vault:vault /etc/vault.d/tls/key.pem\nchmod 600 /etc/vault.d/tls/key.pem\ncat <<FILE_CONTENT | cat | tee /etc/vault.d/tls/cert.pem\n${tls_locally_signed_cert.server-0-ams3-c01-vault.cert_pem}\nFILE_CONTENT\nchown vault:vault /etc/vault.d/tls/cert.pem\nchmod 0644 /etc/vault.d/tls/cert.pem\ncat <<FILE_CONTENT | cat | tee /etc/vault.d/tls/consul_encrypt.key\n${tls_private_key.consul-encrypt.private_key_pem}\nFILE_CONTENT\nchown vault:vault /etc/vault.d/tls/consul_encrypt.key\nchmod 0600 /etc/vault.d/tls/consul_encrypt.key\ncat <<FILE_CONTENT | cat | tee /etc/vault.d/vault.hcl\nui = true\nstorage \"consul\" {\n    path = \"vault/\"\n}\nlistener \"tcp\" {\n  address       = \"0.0.0.0:8200\"\n  tls_cert_file = \"/etc/vault.d/tls/cert.pem\"\n  tls_key_file  = \"/etc/vault.d/tls/key.pem\"\n}\n\nFILE_CONTENT\nchown root:root /etc/vault.d/vault.hcl\nchmod 0644 /etc/vault.d/vault.hcl\nmkdir -p /etc/vault.d/scripts\nchown vault:vault /etc/vault.d/scripts\nchmod 0755 /etc/vault.d/scripts\ncat <<FILE_CONTENT | base64 -d | tee /etc/vault.d/scripts/post_start.sh\nIyEvYmluL2Jhc2gKCiMgVGhpcyBzY3JpcHQgd2lsbCBydW4gYWZ0ZXIgZXZlcnkgdGltZSB2YXVsdCBpcyBzdGFydGVkLiBJdCB3aWxsIHRyeSB0bzoKIyAxLiBWYWxpZGF0ZSBpZiB2YXVsdCBpcyBpbml0aWFsaXplZAojIDEuMS4gaW5pdGlhbGl6ZSB2YXVsdCBhbmQgc2F2ZSB0aGUgdW5zZWFsIGtleXMgaW4gL3Jvb3QvdmF1bHRfa2V5cy5qc29uCiMgMS4yLiB3cml0ZSB0aGUgcm9vdCB0b2tlbiBpbnRvIC9yb290Ly52YXVsdC10b2tlbgojIDIuIENoZWNrIGlmIHZhdWx0IGlzIHNlYWxlZAojIDIuMS4gVmFsaWRhdGUgL3Jvb3QvdmF1bHRfa2V5cy5qc29uIGhhcyB1bnNlYWwga2V5cwojIDIuMi4gVW5zZWFsIHZhdWx0CgpleHBvcnQgVkFVTFRfQUREUj1odHRwczovLzEyNy4wLjAuMTo4MjAwCmV4cG9ydCBLRVlTX0ZJTEU9L3RtcC92YXVsdF9rZXlzLmpzb24KCnZhdWx0X2lzX2luaXRpYWxpemVkKCkgewogIGN1cmwgLXMgJFZBVUxUX0FERFIvdjEvc3lzL2luaXQgfCBqcSAtZSAuaW5pdGlhbGl6ZWQgPiAvZGV2L251bGwKICByZXR1cm4gJD8KfQoKdmF1bHRfaXNfc2VhbGVkKCkgewogIGN1cmwgLXMgJFZBVUxUX0FERFIvdjEvc3lzL2hlYWx0aCB8IGpxIC1lIC5zZWFsZWQgPiAvZGV2L251bGwKICByZXR1cm4gJD8KfQoKaW5pdGlhbGl6ZV92YXVsdCgpIHsKICBjdXJsIC1zICRWQVVMVF9BRERSL3YxL3N5cy9pbml0IC1YIFBVVCAtZCAneyJzZWNyZXRfc2hhcmVzIjogMywgInNlY3JldF90aHJlc2hvbGQiOiAzfScgPiAkS0VZU19GSUxFCiAgcmV0dmFsPSQ/CiAgcmV0dXJuICRyZXR2YWwKfQoKdmF1bHRfcm9vdF9sb2dpbigpIHsKICBjYXQgJEtFWVNfRklMRSB8IGpxIC1yIC5yb290X3Rva2VuID4gL3RtcC8udmF1bHQtdG9rZW4KfQoKdW5zZWFsX3ZhdWx0KCkgewogIGlmIGpxIC1lICIoLmtleXMgfCBsZW5ndGgpID4gMCIgJEtFWVNfRklMRTsgdGhlbgogICAgY29uc3VsIGt2IHB1dCB2YXVsdF9pbml0IEA8KG9wZW5zc2wgYWVzLTI1Ni1jYmMgLWEgLXNhbHQgLWluICR7S0VZU19GSUxFfSAta2ZpbGUgL2V0Yy92YXVsdC5kL3Rscy9jb25zdWxfZW5jcnlwdC5rZXkpCiAgZWxzZQogICAgZWNobyAiTWlzc2luZyBrZXlzIGluICRLRVlTX0ZJTEUiCiAgICBjb25zdWwga3YgZ2V0IHZhdWx0X2luaXQgfCBvcGVuc3NsIGFlcy0yNTYtY2JjIC1kIC1hIC1rZmlsZSAvZXRjL3ZhdWx0LmQvdGxzL2NvbnN1bF9lbmNyeXB0LmtleSA+ICR7S0VZU19GSUxFfQogIGZpCiAgQ09VTlRFUj0wCiAgd2hpbGUgdmF1bHRfaXNfc2VhbGVkOyBkbwogICAgX2tleT0kKGNhdCAkS0VZU19GSUxFIHwganEgLXIgIi5rZXlzWyR7Q09VTlRFUn1dIikKICAgIENPVU5URVI9JCgoJHtDT1VOVEVSfSsxKSkKICAgIGN1cmwgLXMgJFZBVUxUX0FERFIvdjEvc3lzL3Vuc2VhbCAtWCBQVVQgLWQgIntcImtleVwiOlwiJHtfa2V5fVwifSIKICBkb25lCn0KCnZhdWx0X2lzX3VwKCkgewogIGN1cmwgLXMgJFZBVUxUX0FERFIvdjEvc3lzL2hlYWx0aCA+IC9kZXYvbnVsbAp9Cgp3YWl0X2Zvcl92YXVsdF9zZXJ2ZXIoKSB7CiAgVElNRU9VVF9TRUNPTkRTPSR7MTotNjB9CiAgVElNRU9VVF9USU1FPSQoKCAke1RJTUVPVVRfU0VDT05EU30gKyAkKGRhdGUgKyVzKSApKQogIHVudGlsIHZhdWx0X2lzX3VwOyBkbwogICAgWyAkKGRhdGUgKyVzKSAtbHQgJHtUSU1FT1VUX1RJTUV9IF0gfHwgZXhpdCAyCiAgICBzbGVlcCAxCiAgZG9uZQp9CgptYWluKCkgewogIHdhaXRfZm9yX3ZhdWx0X3NlcnZlcgogIHZhdWx0X2lzX2luaXRpYWxpemVkIHx8IGluaXRpYWxpemVfdmF1bHQKICB1bnNlYWxfdmF1bHQgfHwgZXhpdCAwCiAgdmF1bHRfcm9vdF9sb2dpbgp9CgptYWluCg==\nFILE_CONTENT\nchown vault:vault /etc/vault.d/scripts/post_start.sh\nchmod 0755 /etc/vault.d/scripts/post_start.sh\ncat <<FILE_CONTENT | cat | tee /etc/systemd/system/vault.service\n[Unit]\nDescription=vault\nDocumentation=http://localhost\n[Service]\nAmbientCapabilities=CAP_IPC_LOCK\nCapabilities=CAP_IPC_LOCK+ep\nCapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK\nExecReload=/bin/kill --signal HUP $MAINPID\nExecStart=/usr/local/bin/vault server -config=/etc/vault.d/vault.hcl\nExecStartPost=/etc/vault.d/scripts/post_start.sh\nGroup=vault\nKillMode=process\nKillSignal=SIGINT\nLimitMEMLOCK=infinity\nLimitNOFILE=65536\nNoNewPrivileges=yes\nPrivateDevices=yes\nPrivateTmp=yes\nProtectHome=read-only\nProtectSystem=full\nRestart=on-failure\nRestartSec=5\nSecureBits=keep-caps\nTimeoutStopSec=30\nUser=vault\n[Install]\nWantedBy=multi-user.target\nFILE_CONTENT\nchown root:root /etc/systemd/system/vault.service\nchmod 0644 /etc/systemd/system/vault.service\nsystemctl start vault\nsystemctl enable vault\napt-get install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo add-apt-repository  \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" \napt-get update\napt-get install -y docker-ce docker-ce-cli containerd.io\nmkdir -p /etc/nomad.d\nchown root:root /etc/nomad.d\nchmod 700 /etc/nomad.d\nmkdir -p /opt/nomad\nchown root:root /opt/nomad\nchmod 0755 /opt/nomad\ncurl -L https://releases.hashicorp.com/nomad/0.10.4/nomad_0.10.4_linux_amd64.zip -o /tmp/nomad-0.10.4.zip\nchown root:root /tmp/nomad-0.10.4.zip\nchmod 0644 /tmp/nomad-0.10.4.zip\nunzip -x /tmp/nomad-0.10.4.zip -d /usr/local/bin\nrm /tmp/nomad-0.10.4.zip\nnomad -autocomplete-install\ncomplete -C /usr/local/bin/nomad nomad\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/nomad.hcl\ndata_dir = \"/opt/nomad\"\nFILE_CONTENT\nchown root:root /etc/nomad.d/nomad.hcl\nchmod 0644 /etc/nomad.d/nomad.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/datacenter.hcl\ndatacenter = \"ams3c01\"\nFILE_CONTENT\nchown root:root /etc/nomad.d/datacenter.hcl\nchmod 0644 /etc/nomad.d/datacenter.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/client.hcl\nclient {\n  enabled = true\n  node_class = \"server\"\n  meta {\n      tier = \"server\"\n  }\n  options {\n      driver.raw_exec.enabled = 1\n      docker.privileged.enabled = true\n  }\n}\n\ntelemetry {\n    publish_allocation_metrics = true\n    publish_node_metrics = true\n    prometheus_metrics = true\n}\n\nconsul {\n    address = \"127.0.0.1:8500\"\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/client.hcl\nchmod 0644 /etc/nomad.d/client.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/vault.hcl\nvault {\n    enabled = true\n    address = \"https://vault.service.protoconf.sh:8200\"\n    create_from_role = \"nomad-cluster\"\n    ca_file = \"/usr/local/share/ca-certificates/protoconf.crt\"\n    cert_file = \"/etc/nomad.d/tls/cert.pem\"\n    key_file = \"/etc/nomad.d/tls/key.pem\"\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/vault.hcl\nchmod 0644 /etc/nomad.d/vault.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/server.hcl\nserver {\n  enabled = true\n  bootstrap_expect = 3\n  encrypt = \"${random_id.nomad_encrypt.b64_std}\"\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/server.hcl\nchmod 0644 /etc/nomad.d/server.hcl\nmkdir -p /etc/nomad.d/files\nchown root:root /etc/nomad.d/files\nchmod 0755 /etc/nomad.d/files\nmkdir -p /etc/nomad.d/scripts\nchown root:root /etc/nomad.d/scripts\nchmod 0755 /etc/nomad.d/scripts\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/files/nomad-server-policy.hcl\n# Allow creating tokens under \"nomad-cluster\" role. The role name should be\n# updated if \"nomad-cluster\" is not used.\npath \"auth/token/create/nomad-cluster\" {\n  capabilities = [\"update\"]\n}\n\n# Allow looking up \"nomad-cluster\" role. The role name should be updated if\n# \"nomad-cluster\" is not used.\npath \"auth/token/roles/nomad-cluster\" {\n  capabilities = [\"read\"]\n}\n\n# Allow looking up the token passed to Nomad to validate the token has the\n# proper capabilities. This is provided by the \"default\" policy.\npath \"auth/token/lookup-self\" {\n  capabilities = [\"read\"]\n}\n\n# Allow looking up incoming tokens to validate they have permissions to access\n# the tokens they are requesting. This is only required if\n# `allow_unauthenticated` is set to false.\npath \"auth/token/lookup\" {\n  capabilities = [\"update\"]\n}\n\n# Allow revoking tokens that should no longer exist. This allows revoking\n# tokens for dead tasks.\npath \"auth/token/revoke-accessor\" {\n  capabilities = [\"update\"]\n}\n\n# Allow checking the capabilities of our own token. This is used to validate the\n# token upon startup.\npath \"sys/capabilities-self\" {\n  capabilities = [\"update\"]\n}\n\n# Allow our own token to be renewed.\npath \"auth/token/renew-self\" {\n  capabilities = [\"update\"]\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/files/nomad-server-policy.hcl\nchmod 0644 /etc/nomad.d/files/nomad-server-policy.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/files/nomad-cluster-role.json\n{\n  \"disallowed_policies\": \"nomad-server\",\n  \"explicit_max_ttl\": 0,\n  \"name\": \"nomad-cluster\",\n  \"orphan\": true,\n  \"period\": 259200,\n  \"renewable\": true\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/files/nomad-cluster-role.json\nchmod 0644 /etc/nomad.d/files/nomad-cluster-role.json\ncat <<FILE_CONTENT | base64 -d | tee /etc/nomad.d/scripts/before_nomad.sh\nIyEvYmluL2Jhc2gKCnNldCAtZQoKIyBUaGlzIHNjcmlwdCB3aWxsOgojIDEuIFZhbGlkYXRlIHZhdWx0IGlzIHJ1bm5pbmcgKGVpdGhlciBsb2NhbGx5IG9yIGdsb2JhbGx5KQojIDIuIFJldHJpdmUgdGhlIHJvb3QgdG9rZW4gZnJvbSBjb25zdWwKIyAzLiBJbnN0YWxsIHJvbGUgYW5kIHBvbGljeSBmb3Igbm9tYWQKIyA0LiBDcmVhdGUgYSBuZXcgdG9rZW4gZm9yIG5vbWFkIHNlcnZlciBhbmQgd2lsbCB3cml0ZSBpdCB0byB0aGUgZW52IGZpbGUKCnZhbGlkYXRlX3ZhdWx0KCl7CiAgICBleHBvcnQgVkFVTFRfQUREUj1odHRwczovLzEyNy4wLjAuMTo4MjAwCiAgICBpZiBjdXJsIC1zICRWQVVMVF9BRERSL3YxL3N5cy9oZWFsdGggPiAvZGV2L251bGw7IHRoZW4KICAgICAgICByZXR1cm4KICAgIGZpCiAgICBleHBvcnQgVkFVTFRfQUREUj1odHRwczovL3ZhdWx0LnNlcnZpY2UucHJvdG9jb25mLnNoOjgyMDAKICAgIGlmIGN1cmwgLXMgJFZBVUxUX0FERFIvdjEvc3lzL2hlYWx0aCA+IC9kZXYvbnVsbDsgdGhlbgogICAgICAgIHJldHVybgogICAgZmkKCiAgICBlY2hvICJWYXVsdCBpcyBub3QgcnVubmluZyBwcm9wZXJseSIKICAgIGV4aXQgMQp9CgpnZXRfcm9vdF90b2tlbigpewogICAgZXhwb3J0IFZBVUxUX1RPS0VOPSQoY29uc3VsIGt2IGdldCB2YXVsdF9pbml0IHwgb3BlbnNzbCBhZXMtMjU2LWNiYyAtZCAtYSAta2ZpbGUgL2V0Yy92YXVsdC5kL3Rscy9jb25zdWxfZW5jcnlwdC5rZXkgfCBqcSAtciAnLnJvb3RfdG9rZW4nKQp9CgppbnN0YWxsX3JvbGVfYW5kX3BvbGljeSgpewogICAgdmF1bHQgcG9saWN5IHdyaXRlIG5vbWFkLXNlcnZlciAvZXRjL25vbWFkLmQvZmlsZXMvbm9tYWQtc2VydmVyLXBvbGljeS5oY2wKICAgIHZhdWx0IHdyaXRlIC9hdXRoL3Rva2VuL3JvbGVzL25vbWFkLWNsdXN0ZXIgQC9ldGMvbm9tYWQuZC9maWxlcy9ub21hZC1jbHVzdGVyLXJvbGUuanNvbgp9Cgp3cml0ZV90b2tlbl90b19lbnZfZmlsZSgpIHsKICAgIG5vbWFkX3Rva2VuPSQodmF1bHQgdG9rZW4gY3JlYXRlIC1wb2xpY3kgbm9tYWQtc2VydmVyICAtb3JwaGFuICAtZm9ybWF0PWpzb258IGpxIC1yICcuYXV0aC5jbGllbnRfdG9rZW4nKQogICAgZWNobyAiVkFVTFRfVE9LRU49JHtub21hZF90b2tlbn0iIHwgdGVlIC9ldGMvbm9tYWQuZC9lbnYKfQoKbWFpbigpewogICAgdmFsaWRhdGVfdmF1bHQKICAgIGdldF9yb290X3Rva2VuCiAgICBpbnN0YWxsX3JvbGVfYW5kX3BvbGljeQogICAgd3JpdGVfdG9rZW5fdG9fZW52X2ZpbGUKfQoKbWFpbgo=\nFILE_CONTENT\nchown root:root /etc/nomad.d/scripts/before_nomad.sh\nchmod 0755 /etc/nomad.d/scripts/before_nomad.sh\n/etc/nomad.d/scripts/before_nomad.sh\nmkdir -p /etc/nomad.d/tls\nchown root:root /etc/nomad.d/tls\nchmod 0755 /etc/nomad.d/tls\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/tls/key.pem\n${tls_private_key.server-0-ams3-c01-nomad.private_key_pem}\nFILE_CONTENT\nchown root:root /etc/nomad.d/tls/key.pem\nchmod 600 /etc/nomad.d/tls/key.pem\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/tls/cert.pem\n${tls_locally_signed_cert.server-0-ams3-c01-nomad.cert_pem}\nFILE_CONTENT\nchown root:root /etc/nomad.d/tls/cert.pem\nchmod 0644 /etc/nomad.d/tls/cert.pem\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/tls.hcl\ntls {\n  http = true\n  rpc  = true\n\n  ca_file   = \"/usr/local/share/ca-certificates/protoconf.crt\"\n  cert_file = \"/etc/nomad.d/tls/cert.pem\"\n  key_file  = \"/etc/nomad.d/tls/key.pem\"\n\n  verify_server_hostname = false\n  verify_https_client    = false\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/tls.hcl\nchmod 0644 /etc/nomad.d/tls.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/99-additional-configs.hcl\nadvertise {\n    http = \"{{GetPublicIP}}\"\n    rpc = \"{{GetPublicIP}}\"\n    serf = \"{{GetPublicIP}}\"\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/99-additional-configs.hcl\nchmod 0644 /etc/nomad.d/99-additional-configs.hcl\ncat <<FILE_CONTENT | cat | tee /etc/systemd/system/nomad.service\n[Unit]\nDescription=nomad\nDocumentation=http://localhost\n[Service]\nEnvironmentFile=/etc/nomad.d/env\nExecReload=/bin/kill -HUP $MAINPID\nExecStart=/usr/local/bin/nomad agent -config /etc/nomad.d\nExecStartPre=/etc/nomad.d/scripts/before_nomad.sh\nKillMode=process\nKillSignal=SIGINT\nLimitNOFILE=infinity\nLimitNPROC=infinity\nRestart=on-failure\nRestartSec=2\nStartLimitBurst=3\nStartLimitIntervalSec=10\nTasksMax=infinity\n[Install]\nWantedBy=multi-user.target\nFILE_CONTENT\nchown root:root /etc/systemd/system/nomad.service\nchmod 0644 /etc/systemd/system/nomad.service\nsystemctl start nomad\nsystemctl enable nomad\ncurl -fsSL https://github.com/protoconf/protoconf/releases/download/0.1.1/protoconf-linux-0.1.1.tar.gz -o /tmp/protoconf-linux-0.1.1.tar.gz\ntar -xvf /tmp/protoconf-linux-0.1.1.tar.gz -C /usr/local/bin"
      },
      "server-0-lon1-c01": {
        "image": "ubuntu-18-04-x64",
        "name": "${random_pet.server-0-lon1-c01.id}",
        "private_networking": true,
        "region": "lon1",
        "size": "s-2vcpu-4gb",
        "ssh_keys": [
          "${digitalocean_ssh_key.smintz-0.id}"
        ],
        "tags": [
          "server",
          "c01"
        ],
        "user_data": "#!/bin/bash\napt-get update\napt-get install -y unzip curl jq dnsutils\nuseradd --system --home /etc/consul.d --shell /bin/false consul\nmkdir -p /etc/consul.d\nchown root:root /etc/consul.d\nchmod 0755 /etc/consul.d\nmkdir -p /opt/consul\nchown consul:consul /opt/consul\nchmod 0755 /opt/consul\ncurl -L https://releases.hashicorp.com/consul/1.7.1/consul_1.7.1_linux_amd64.zip -o /tmp/consul-1.7.1.zip\nchown root:root /tmp/consul-1.7.1.zip\nchmod 0644 /tmp/consul-1.7.1.zip\nunzip -x /tmp/consul-1.7.1.zip -d /usr/local/bin\nrm /tmp/consul-1.7.1.zip\nconsul -autocomplete-install\ncomplete -C /usr/local/bin/consul consul\ncat <<FILE_CONTENT | cat | tee /etc/systemd/network/consul0.netdev\n# Creates a \"dummy\" network interface\n# we'll configure this interface with a link-local address\n# See: https://www.freedesktop.org/software/systemd/man/systemd.netdev.html\n##\n\n[NetDev]\nName=consul0\nKind=dummy\n\nFILE_CONTENT\nchown root:root /etc/systemd/network/consul0.netdev\nchmod 0644 /etc/systemd/network/consul0.netdev\ncat <<FILE_CONTENT | cat | tee /etc/systemd/network/consul0.network\n# We \"find\" the dummy0 interface we created and configure it with a link-local address\n# See: https://www.freedesktop.org/software/systemd/man/systemd.network.html\n##\n[Match]\nName=consul0\n\n[Network]\nAddress=169.254.1.1/32\n\n# We want these domains\nDomains= ~protoconf.sh.\n\n# To go to the consul DNS server we'll bind to this address\nDNS=169.254.1.1\n\nFILE_CONTENT\nchown root:root /etc/systemd/network/consul0.network\nchmod 0644 /etc/systemd/network/consul0.network\nsystemctl restart systemd-networkd\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/config.hcl\nui = true\nbind_addr = \"0.0.0.0\"\nadvertise_addr = \"{{GetPublicIP}}\"\ndatacenter = \"lon1c01\"\ndata_dir = \"/opt/consul\"\ndomain = \"protoconf.sh\"\nFILE_CONTENT\nchown consul:consul /etc/consul.d/config.hcl\nchmod 0640 /etc/consul.d/config.hcl\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/server.hcl\nserver = true\nbootstrap_expect = 3\nFILE_CONTENT\nchown consul:consul /etc/consul.d/server.hcl\nchmod 0640 /etc/consul.d/server.hcl\ncat <<FILE_CONTENT | cat | tee /usr/local/share/ca-certificates/protoconf.crt\n${tls_self_signed_cert.root.cert_pem}\nFILE_CONTENT\nchown root:root /usr/local/share/ca-certificates/protoconf.crt\nchmod 0644 /usr/local/share/ca-certificates/protoconf.crt\nupdate-ca-certificates\nmkdir -p /etc/consul.d/tls\nchown root:root /etc/consul.d/tls\nchmod 0755 /etc/consul.d/tls\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/tls/key.pem\n${tls_private_key.server-0-lon1-c01-consul.private_key_pem}\nFILE_CONTENT\nchown consul:consul /etc/consul.d/tls/key.pem\nchmod 600 /etc/consul.d/tls/key.pem\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/tls/cert.pem\n${tls_locally_signed_cert.server-0-lon1-c01-consul.cert_pem}\nFILE_CONTENT\nchown consul:consul /etc/consul.d/tls/cert.pem\nchmod 0644 /etc/consul.d/tls/cert.pem\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/tls.hcl\nkey_file = \"/etc/consul.d/tls/key.pem\"\ncert_file = \"/etc/consul.d/tls/cert.pem\"\nca_file = \"/usr/local/share/ca-certificates/protoconf.crt\"\naddresses {\n    https = \"0.0.0.0\"\n    dns = \"169.254.1.1\"\n}\nports {\n    https = 8501\n    dns = 53\n}\nencrypt = \"${random_id.consul_encrypt.b64_std}\"\nrecursors = [\"127.0.0.53\"]\n\nFILE_CONTENT\nchown root:root /etc/consul.d/tls.hcl\nchmod 0644 /etc/consul.d/tls.hcl\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/join_lan.hcl\nretry_join = [\"provider=digitalocean api_token=${var.digitalocean_token} region=lon1 tag_name=server\"]\nFILE_CONTENT\nchown consul:consul /etc/consul.d/join_lan.hcl\nchmod 0640 /etc/consul.d/join_lan.hcl\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/join_wan.hcl\nretry_join_wan = [\"provider=digitalocean api_token=${var.digitalocean_token} tag_name=server\",\"wan.protoconf.com\"]\nFILE_CONTENT\nchown consul:consul /etc/consul.d/join_wan.hcl\nchmod 0640 /etc/consul.d/join_wan.hcl\ncat <<FILE_CONTENT | cat | tee /etc/systemd/system/consul.service\n[Unit]\nAfter=network-online.target\nDescription=HashiCorp Consul - A service mesh solution\nDocumentation=https://www.consul.io/\nRequires=network-online.target\n[Service]\nAmbientCapabilities=CAP_NET_BIND_SERVICE\nExecReload=/usr/local/bin/consul reload\nExecStart=/usr/local/bin/consul agent -config-dir=/etc/consul.d/\nGroup=consul\nKillMode=process\nLimitNOFILE=65536\nRestart=on-failure\nType=notify\nUser=consul\n[Install]\nWantedBy=multi-user.target\nFILE_CONTENT\nchown root:root /etc/systemd/system/consul.service\nchmod 0644 /etc/systemd/system/consul.service\nsystemctl start consul\nsystemctl enable consul\ncurl -L https://releases.hashicorp.com/vault/1.3.2/vault_1.3.2_linux_amd64.zip -o /tmp/vault-1.3.2.zip\nchown root:root /tmp/vault-1.3.2.zip\nchmod 0644 /tmp/vault-1.3.2.zip\nunzip -x /tmp/vault-1.3.2.zip -d /usr/local/bin\nrm /tmp/vault-1.3.2.zip\nvault -autocomplete-install\nsetcap cap_ipc_lock=+ep /usr/local/bin/vault\nuseradd --system --home /etc/vault.d --shell /bin/false vault\nmkdir -p /etc/vault.d\nchown vault:vault /etc/vault.d\nchmod 0755 /etc/vault.d\nmkdir -p /etc/vault.d/tls\nchown vault:vault /etc/vault.d/tls\nchmod 700 /etc/vault.d/tls\ncat <<FILE_CONTENT | cat | tee /etc/vault.d/tls/key.pem\n${tls_private_key.server-0-lon1-c01-vault.private_key_pem}\nFILE_CONTENT\nchown vault:vault /etc/vault.d/tls/key.pem\nchmod 600 /etc/vault.d/tls/key.pem\ncat <<FILE_CONTENT | cat | tee /etc/vault.d/tls/cert.pem\n${tls_locally_signed_cert.server-0-lon1-c01-vault.cert_pem}\nFILE_CONTENT\nchown vault:vault /etc/vault.d/tls/cert.pem\nchmod 0644 /etc/vault.d/tls/cert.pem\ncat <<FILE_CONTENT | cat | tee /etc/vault.d/tls/consul_encrypt.key\n${tls_private_key.consul-encrypt.private_key_pem}\nFILE_CONTENT\nchown vault:vault /etc/vault.d/tls/consul_encrypt.key\nchmod 0600 /etc/vault.d/tls/consul_encrypt.key\ncat <<FILE_CONTENT | cat | tee /etc/vault.d/vault.hcl\nui = true\nstorage \"consul\" {\n    path = \"vault/\"\n}\nlistener \"tcp\" {\n  address       = \"0.0.0.0:8200\"\n  tls_cert_file = \"/etc/vault.d/tls/cert.pem\"\n  tls_key_file  = \"/etc/vault.d/tls/key.pem\"\n}\n\nFILE_CONTENT\nchown root:root /etc/vault.d/vault.hcl\nchmod 0644 /etc/vault.d/vault.hcl\nmkdir -p /etc/vault.d/scripts\nchown vault:vault /etc/vault.d/scripts\nchmod 0755 /etc/vault.d/scripts\ncat <<FILE_CONTENT | base64 -d | tee /etc/vault.d/scripts/post_start.sh\nIyEvYmluL2Jhc2gKCiMgVGhpcyBzY3JpcHQgd2lsbCBydW4gYWZ0ZXIgZXZlcnkgdGltZSB2YXVsdCBpcyBzdGFydGVkLiBJdCB3aWxsIHRyeSB0bzoKIyAxLiBWYWxpZGF0ZSBpZiB2YXVsdCBpcyBpbml0aWFsaXplZAojIDEuMS4gaW5pdGlhbGl6ZSB2YXVsdCBhbmQgc2F2ZSB0aGUgdW5zZWFsIGtleXMgaW4gL3Jvb3QvdmF1bHRfa2V5cy5qc29uCiMgMS4yLiB3cml0ZSB0aGUgcm9vdCB0b2tlbiBpbnRvIC9yb290Ly52YXVsdC10b2tlbgojIDIuIENoZWNrIGlmIHZhdWx0IGlzIHNlYWxlZAojIDIuMS4gVmFsaWRhdGUgL3Jvb3QvdmF1bHRfa2V5cy5qc29uIGhhcyB1bnNlYWwga2V5cwojIDIuMi4gVW5zZWFsIHZhdWx0CgpleHBvcnQgVkFVTFRfQUREUj1odHRwczovLzEyNy4wLjAuMTo4MjAwCmV4cG9ydCBLRVlTX0ZJTEU9L3RtcC92YXVsdF9rZXlzLmpzb24KCnZhdWx0X2lzX2luaXRpYWxpemVkKCkgewogIGN1cmwgLXMgJFZBVUxUX0FERFIvdjEvc3lzL2luaXQgfCBqcSAtZSAuaW5pdGlhbGl6ZWQgPiAvZGV2L251bGwKICByZXR1cm4gJD8KfQoKdmF1bHRfaXNfc2VhbGVkKCkgewogIGN1cmwgLXMgJFZBVUxUX0FERFIvdjEvc3lzL2hlYWx0aCB8IGpxIC1lIC5zZWFsZWQgPiAvZGV2L251bGwKICByZXR1cm4gJD8KfQoKaW5pdGlhbGl6ZV92YXVsdCgpIHsKICBjdXJsIC1zICRWQVVMVF9BRERSL3YxL3N5cy9pbml0IC1YIFBVVCAtZCAneyJzZWNyZXRfc2hhcmVzIjogMywgInNlY3JldF90aHJlc2hvbGQiOiAzfScgPiAkS0VZU19GSUxFCiAgcmV0dmFsPSQ/CiAgcmV0dXJuICRyZXR2YWwKfQoKdmF1bHRfcm9vdF9sb2dpbigpIHsKICBjYXQgJEtFWVNfRklMRSB8IGpxIC1yIC5yb290X3Rva2VuID4gL3RtcC8udmF1bHQtdG9rZW4KfQoKdW5zZWFsX3ZhdWx0KCkgewogIGlmIGpxIC1lICIoLmtleXMgfCBsZW5ndGgpID4gMCIgJEtFWVNfRklMRTsgdGhlbgogICAgY29uc3VsIGt2IHB1dCB2YXVsdF9pbml0IEA8KG9wZW5zc2wgYWVzLTI1Ni1jYmMgLWEgLXNhbHQgLWluICR7S0VZU19GSUxFfSAta2ZpbGUgL2V0Yy92YXVsdC5kL3Rscy9jb25zdWxfZW5jcnlwdC5rZXkpCiAgZWxzZQogICAgZWNobyAiTWlzc2luZyBrZXlzIGluICRLRVlTX0ZJTEUiCiAgICBjb25zdWwga3YgZ2V0IHZhdWx0X2luaXQgfCBvcGVuc3NsIGFlcy0yNTYtY2JjIC1kIC1hIC1rZmlsZSAvZXRjL3ZhdWx0LmQvdGxzL2NvbnN1bF9lbmNyeXB0LmtleSA+ICR7S0VZU19GSUxFfQogIGZpCiAgQ09VTlRFUj0wCiAgd2hpbGUgdmF1bHRfaXNfc2VhbGVkOyBkbwogICAgX2tleT0kKGNhdCAkS0VZU19GSUxFIHwganEgLXIgIi5rZXlzWyR7Q09VTlRFUn1dIikKICAgIENPVU5URVI9JCgoJHtDT1VOVEVSfSsxKSkKICAgIGN1cmwgLXMgJFZBVUxUX0FERFIvdjEvc3lzL3Vuc2VhbCAtWCBQVVQgLWQgIntcImtleVwiOlwiJHtfa2V5fVwifSIKICBkb25lCn0KCnZhdWx0X2lzX3VwKCkgewogIGN1cmwgLXMgJFZBVUxUX0FERFIvdjEvc3lzL2hlYWx0aCA+IC9kZXYvbnVsbAp9Cgp3YWl0X2Zvcl92YXVsdF9zZXJ2ZXIoKSB7CiAgVElNRU9VVF9TRUNPTkRTPSR7MTotNjB9CiAgVElNRU9VVF9USU1FPSQoKCAke1RJTUVPVVRfU0VDT05EU30gKyAkKGRhdGUgKyVzKSApKQogIHVudGlsIHZhdWx0X2lzX3VwOyBkbwogICAgWyAkKGRhdGUgKyVzKSAtbHQgJHtUSU1FT1VUX1RJTUV9IF0gfHwgZXhpdCAyCiAgICBzbGVlcCAxCiAgZG9uZQp9CgptYWluKCkgewogIHdhaXRfZm9yX3ZhdWx0X3NlcnZlcgogIHZhdWx0X2lzX2luaXRpYWxpemVkIHx8IGluaXRpYWxpemVfdmF1bHQKICB1bnNlYWxfdmF1bHQgfHwgZXhpdCAwCiAgdmF1bHRfcm9vdF9sb2dpbgp9CgptYWluCg==\nFILE_CONTENT\nchown vault:vault /etc/vault.d/scripts/post_start.sh\nchmod 0755 /etc/vault.d/scripts/post_start.sh\ncat <<FILE_CONTENT | cat | tee /etc/systemd/system/vault.service\n[Unit]\nDescription=vault\nDocumentation=http://localhost\n[Service]\nAmbientCapabilities=CAP_IPC_LOCK\nCapabilities=CAP_IPC_LOCK+ep\nCapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK\nExecReload=/bin/kill --signal HUP $MAINPID\nExecStart=/usr/local/bin/vault server -config=/etc/vault.d/vault.hcl\nExecStartPost=/etc/vault.d/scripts/post_start.sh\nGroup=vault\nKillMode=process\nKillSignal=SIGINT\nLimitMEMLOCK=infinity\nLimitNOFILE=65536\nNoNewPrivileges=yes\nPrivateDevices=yes\nPrivateTmp=yes\nProtectHome=read-only\nProtectSystem=full\nRestart=on-failure\nRestartSec=5\nSecureBits=keep-caps\nTimeoutStopSec=30\nUser=vault\n[Install]\nWantedBy=multi-user.target\nFILE_CONTENT\nchown root:root /etc/systemd/system/vault.service\nchmod 0644 /etc/systemd/system/vault.service\nsystemctl start vault\nsystemctl enable vault\napt-get install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo add-apt-repository  \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" \napt-get update\napt-get install -y docker-ce docker-ce-cli containerd.io\nmkdir -p /etc/nomad.d\nchown root:root /etc/nomad.d\nchmod 700 /etc/nomad.d\nmkdir -p /opt/nomad\nchown root:root /opt/nomad\nchmod 0755 /opt/nomad\ncurl -L https://releases.hashicorp.com/nomad/0.10.4/nomad_0.10.4_linux_amd64.zip -o /tmp/nomad-0.10.4.zip\nchown root:root /tmp/nomad-0.10.4.zip\nchmod 0644 /tmp/nomad-0.10.4.zip\nunzip -x /tmp/nomad-0.10.4.zip -d /usr/local/bin\nrm /tmp/nomad-0.10.4.zip\nnomad -autocomplete-install\ncomplete -C /usr/local/bin/nomad nomad\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/nomad.hcl\ndata_dir = \"/opt/nomad\"\nFILE_CONTENT\nchown root:root /etc/nomad.d/nomad.hcl\nchmod 0644 /etc/nomad.d/nomad.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/datacenter.hcl\ndatacenter = \"lon1c01\"\nFILE_CONTENT\nchown root:root /etc/nomad.d/datacenter.hcl\nchmod 0644 /etc/nomad.d/datacenter.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/client.hcl\nclient {\n  enabled = true\n  node_class = \"server\"\n  meta {\n      tier = \"server\"\n  }\n  options {\n      driver.raw_exec.enabled = 1\n      docker.privileged.enabled = true\n  }\n}\n\ntelemetry {\n    publish_allocation_metrics = true\n    publish_node_metrics = true\n    prometheus_metrics = true\n}\n\nconsul {\n    address = \"127.0.0.1:8500\"\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/client.hcl\nchmod 0644 /etc/nomad.d/client.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/vault.hcl\nvault {\n    enabled = true\n    address = \"https://vault.service.protoconf.sh:8200\"\n    create_from_role = \"nomad-cluster\"\n    ca_file = \"/usr/local/share/ca-certificates/protoconf.crt\"\n    cert_file = \"/etc/nomad.d/tls/cert.pem\"\n    key_file = \"/etc/nomad.d/tls/key.pem\"\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/vault.hcl\nchmod 0644 /etc/nomad.d/vault.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/server.hcl\nserver {\n  enabled = true\n  bootstrap_expect = 3\n  encrypt = \"${random_id.nomad_encrypt.b64_std}\"\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/server.hcl\nchmod 0644 /etc/nomad.d/server.hcl\nmkdir -p /etc/nomad.d/files\nchown root:root /etc/nomad.d/files\nchmod 0755 /etc/nomad.d/files\nmkdir -p /etc/nomad.d/scripts\nchown root:root /etc/nomad.d/scripts\nchmod 0755 /etc/nomad.d/scripts\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/files/nomad-server-policy.hcl\n# Allow creating tokens under \"nomad-cluster\" role. The role name should be\n# updated if \"nomad-cluster\" is not used.\npath \"auth/token/create/nomad-cluster\" {\n  capabilities = [\"update\"]\n}\n\n# Allow looking up \"nomad-cluster\" role. The role name should be updated if\n# \"nomad-cluster\" is not used.\npath \"auth/token/roles/nomad-cluster\" {\n  capabilities = [\"read\"]\n}\n\n# Allow looking up the token passed to Nomad to validate the token has the\n# proper capabilities. This is provided by the \"default\" policy.\npath \"auth/token/lookup-self\" {\n  capabilities = [\"read\"]\n}\n\n# Allow looking up incoming tokens to validate they have permissions to access\n# the tokens they are requesting. This is only required if\n# `allow_unauthenticated` is set to false.\npath \"auth/token/lookup\" {\n  capabilities = [\"update\"]\n}\n\n# Allow revoking tokens that should no longer exist. This allows revoking\n# tokens for dead tasks.\npath \"auth/token/revoke-accessor\" {\n  capabilities = [\"update\"]\n}\n\n# Allow checking the capabilities of our own token. This is used to validate the\n# token upon startup.\npath \"sys/capabilities-self\" {\n  capabilities = [\"update\"]\n}\n\n# Allow our own token to be renewed.\npath \"auth/token/renew-self\" {\n  capabilities = [\"update\"]\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/files/nomad-server-policy.hcl\nchmod 0644 /etc/nomad.d/files/nomad-server-policy.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/files/nomad-cluster-role.json\n{\n  \"disallowed_policies\": \"nomad-server\",\n  \"explicit_max_ttl\": 0,\n  \"name\": \"nomad-cluster\",\n  \"orphan\": true,\n  \"period\": 259200,\n  \"renewable\": true\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/files/nomad-cluster-role.json\nchmod 0644 /etc/nomad.d/files/nomad-cluster-role.json\ncat <<FILE_CONTENT | base64 -d | tee /etc/nomad.d/scripts/before_nomad.sh\nIyEvYmluL2Jhc2gKCnNldCAtZQoKIyBUaGlzIHNjcmlwdCB3aWxsOgojIDEuIFZhbGlkYXRlIHZhdWx0IGlzIHJ1bm5pbmcgKGVpdGhlciBsb2NhbGx5IG9yIGdsb2JhbGx5KQojIDIuIFJldHJpdmUgdGhlIHJvb3QgdG9rZW4gZnJvbSBjb25zdWwKIyAzLiBJbnN0YWxsIHJvbGUgYW5kIHBvbGljeSBmb3Igbm9tYWQKIyA0LiBDcmVhdGUgYSBuZXcgdG9rZW4gZm9yIG5vbWFkIHNlcnZlciBhbmQgd2lsbCB3cml0ZSBpdCB0byB0aGUgZW52IGZpbGUKCnZhbGlkYXRlX3ZhdWx0KCl7CiAgICBleHBvcnQgVkFVTFRfQUREUj1odHRwczovLzEyNy4wLjAuMTo4MjAwCiAgICBpZiBjdXJsIC1zICRWQVVMVF9BRERSL3YxL3N5cy9oZWFsdGggPiAvZGV2L251bGw7IHRoZW4KICAgICAgICByZXR1cm4KICAgIGZpCiAgICBleHBvcnQgVkFVTFRfQUREUj1odHRwczovL3ZhdWx0LnNlcnZpY2UucHJvdG9jb25mLnNoOjgyMDAKICAgIGlmIGN1cmwgLXMgJFZBVUxUX0FERFIvdjEvc3lzL2hlYWx0aCA+IC9kZXYvbnVsbDsgdGhlbgogICAgICAgIHJldHVybgogICAgZmkKCiAgICBlY2hvICJWYXVsdCBpcyBub3QgcnVubmluZyBwcm9wZXJseSIKICAgIGV4aXQgMQp9CgpnZXRfcm9vdF90b2tlbigpewogICAgZXhwb3J0IFZBVUxUX1RPS0VOPSQoY29uc3VsIGt2IGdldCB2YXVsdF9pbml0IHwgb3BlbnNzbCBhZXMtMjU2LWNiYyAtZCAtYSAta2ZpbGUgL2V0Yy92YXVsdC5kL3Rscy9jb25zdWxfZW5jcnlwdC5rZXkgfCBqcSAtciAnLnJvb3RfdG9rZW4nKQp9CgppbnN0YWxsX3JvbGVfYW5kX3BvbGljeSgpewogICAgdmF1bHQgcG9saWN5IHdyaXRlIG5vbWFkLXNlcnZlciAvZXRjL25vbWFkLmQvZmlsZXMvbm9tYWQtc2VydmVyLXBvbGljeS5oY2wKICAgIHZhdWx0IHdyaXRlIC9hdXRoL3Rva2VuL3JvbGVzL25vbWFkLWNsdXN0ZXIgQC9ldGMvbm9tYWQuZC9maWxlcy9ub21hZC1jbHVzdGVyLXJvbGUuanNvbgp9Cgp3cml0ZV90b2tlbl90b19lbnZfZmlsZSgpIHsKICAgIG5vbWFkX3Rva2VuPSQodmF1bHQgdG9rZW4gY3JlYXRlIC1wb2xpY3kgbm9tYWQtc2VydmVyICAtb3JwaGFuICAtZm9ybWF0PWpzb258IGpxIC1yICcuYXV0aC5jbGllbnRfdG9rZW4nKQogICAgZWNobyAiVkFVTFRfVE9LRU49JHtub21hZF90b2tlbn0iIHwgdGVlIC9ldGMvbm9tYWQuZC9lbnYKfQoKbWFpbigpewogICAgdmFsaWRhdGVfdmF1bHQKICAgIGdldF9yb290X3Rva2VuCiAgICBpbnN0YWxsX3JvbGVfYW5kX3BvbGljeQogICAgd3JpdGVfdG9rZW5fdG9fZW52X2ZpbGUKfQoKbWFpbgo=\nFILE_CONTENT\nchown root:root /etc/nomad.d/scripts/before_nomad.sh\nchmod 0755 /etc/nomad.d/scripts/before_nomad.sh\n/etc/nomad.d/scripts/before_nomad.sh\nmkdir -p /etc/nomad.d/tls\nchown root:root /etc/nomad.d/tls\nchmod 0755 /etc/nomad.d/tls\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/tls/key.pem\n${tls_private_key.server-0-lon1-c01-nomad.private_key_pem}\nFILE_CONTENT\nchown root:root /etc/nomad.d/tls/key.pem\nchmod 600 /etc/nomad.d/tls/key.pem\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/tls/cert.pem\n${tls_locally_signed_cert.server-0-lon1-c01-nomad.cert_pem}\nFILE_CONTENT\nchown root:root /etc/nomad.d/tls/cert.pem\nchmod 0644 /etc/nomad.d/tls/cert.pem\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/tls.hcl\ntls {\n  http = true\n  rpc  = true\n\n  ca_file   = \"/usr/local/share/ca-certificates/protoconf.crt\"\n  cert_file = \"/etc/nomad.d/tls/cert.pem\"\n  key_file  = \"/etc/nomad.d/tls/key.pem\"\n\n  verify_server_hostname = false\n  verify_https_client    = false\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/tls.hcl\nchmod 0644 /etc/nomad.d/tls.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/99-additional-configs.hcl\nadvertise {\n    http = \"{{GetPublicIP}}\"\n    rpc = \"{{GetPublicIP}}\"\n    serf = \"{{GetPublicIP}}\"\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/99-additional-configs.hcl\nchmod 0644 /etc/nomad.d/99-additional-configs.hcl\ncat <<FILE_CONTENT | cat | tee /etc/systemd/system/nomad.service\n[Unit]\nDescription=nomad\nDocumentation=http://localhost\n[Service]\nEnvironmentFile=/etc/nomad.d/env\nExecReload=/bin/kill -HUP $MAINPID\nExecStart=/usr/local/bin/nomad agent -config /etc/nomad.d\nExecStartPre=/etc/nomad.d/scripts/before_nomad.sh\nKillMode=process\nKillSignal=SIGINT\nLimitNOFILE=infinity\nLimitNPROC=infinity\nRestart=on-failure\nRestartSec=2\nStartLimitBurst=3\nStartLimitIntervalSec=10\nTasksMax=infinity\n[Install]\nWantedBy=multi-user.target\nFILE_CONTENT\nchown root:root /etc/systemd/system/nomad.service\nchmod 0644 /etc/systemd/system/nomad.service\nsystemctl start nomad\nsystemctl enable nomad\ncurl -fsSL https://github.com/protoconf/protoconf/releases/download/0.1.1/protoconf-linux-0.1.1.tar.gz -o /tmp/protoconf-linux-0.1.1.tar.gz\ntar -xvf /tmp/protoconf-linux-0.1.1.tar.gz -C /usr/local/bin"
      },
      "server-1-ams3-c01": {
        "image": "ubuntu-18-04-x64",
        "name": "${random_pet.server-1-ams3-c01.id}",
        "private_networking": true,
        "region": "ams3",
        "size": "s-2vcpu-4gb",
        "ssh_keys": [
          "${digitalocean_ssh_key.smintz-0.id}"
        ],
        "tags": [
          "server",
          "c01"
        ],
        "user_data": "#!/bin/bash\napt-get update\napt-get install -y unzip curl jq dnsutils\nuseradd --system --home /etc/consul.d --shell /bin/false consul\nmkdir -p /etc/consul.d\nchown root:root /etc/consul.d\nchmod 0755 /etc/consul.d\nmkdir -p /opt/consul\nchown consul:consul /opt/consul\nchmod 0755 /opt/consul\ncurl -L https://releases.hashicorp.com/consul/1.7.1/consul_1.7.1_linux_amd64.zip -o /tmp/consul-1.7.1.zip\nchown root:root /tmp/consul-1.7.1.zip\nchmod 0644 /tmp/consul-1.7.1.zip\nunzip -x /tmp/consul-1.7.1.zip -d /usr/local/bin\nrm /tmp/consul-1.7.1.zip\nconsul -autocomplete-install\ncomplete -C /usr/local/bin/consul consul\ncat <<FILE_CONTENT | cat | tee /etc/systemd/network/consul0.netdev\n# Creates a \"dummy\" network interface\n# we'll configure this interface with a link-local address\n# See: https://www.freedesktop.org/software/systemd/man/systemd.netdev.html\n##\n\n[NetDev]\nName=consul0\nKind=dummy\n\nFILE_CONTENT\nchown root:root /etc/systemd/network/consul0.netdev\nchmod 0644 /etc/systemd/network/consul0.netdev\ncat <<FILE_CONTENT | cat | tee /etc/systemd/network/consul0.network\n# We \"find\" the dummy0 interface we created and configure it with a link-local address\n# See: https://www.freedesktop.org/software/systemd/man/systemd.network.html\n##\n[Match]\nName=consul0\n\n[Network]\nAddress=169.254.1.1/32\n\n# We want these domains\nDomains= ~protoconf.sh.\n\n# To go to the consul DNS server we'll bind to this address\nDNS=169.254.1.1\n\nFILE_CONTENT\nchown root:root /etc/systemd/network/consul0.network\nchmod 0644 /etc/systemd/network/consul0.network\nsystemctl restart systemd-networkd\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/config.hcl\nui = true\nbind_addr = \"0.0.0.0\"\nadvertise_addr = \"{{GetPublicIP}}\"\ndatacenter = \"ams3c01\"\ndata_dir = \"/opt/consul\"\ndomain = \"protoconf.sh\"\nFILE_CONTENT\nchown consul:consul /etc/consul.d/config.hcl\nchmod 0640 /etc/consul.d/config.hcl\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/server.hcl\nserver = true\nbootstrap_expect = 3\nFILE_CONTENT\nchown consul:consul /etc/consul.d/server.hcl\nchmod 0640 /etc/consul.d/server.hcl\ncat <<FILE_CONTENT | cat | tee /usr/local/share/ca-certificates/protoconf.crt\n${tls_self_signed_cert.root.cert_pem}\nFILE_CONTENT\nchown root:root /usr/local/share/ca-certificates/protoconf.crt\nchmod 0644 /usr/local/share/ca-certificates/protoconf.crt\nupdate-ca-certificates\nmkdir -p /etc/consul.d/tls\nchown root:root /etc/consul.d/tls\nchmod 0755 /etc/consul.d/tls\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/tls/key.pem\n${tls_private_key.server-1-ams3-c01-consul.private_key_pem}\nFILE_CONTENT\nchown consul:consul /etc/consul.d/tls/key.pem\nchmod 600 /etc/consul.d/tls/key.pem\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/tls/cert.pem\n${tls_locally_signed_cert.server-1-ams3-c01-consul.cert_pem}\nFILE_CONTENT\nchown consul:consul /etc/consul.d/tls/cert.pem\nchmod 0644 /etc/consul.d/tls/cert.pem\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/tls.hcl\nkey_file = \"/etc/consul.d/tls/key.pem\"\ncert_file = \"/etc/consul.d/tls/cert.pem\"\nca_file = \"/usr/local/share/ca-certificates/protoconf.crt\"\naddresses {\n    https = \"0.0.0.0\"\n    dns = \"169.254.1.1\"\n}\nports {\n    https = 8501\n    dns = 53\n}\nencrypt = \"${random_id.consul_encrypt.b64_std}\"\nrecursors = [\"127.0.0.53\"]\n\nFILE_CONTENT\nchown root:root /etc/consul.d/tls.hcl\nchmod 0644 /etc/consul.d/tls.hcl\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/join_lan.hcl\nretry_join = [\"provider=digitalocean api_token=${var.digitalocean_token} region=ams3 tag_name=server\"]\nFILE_CONTENT\nchown consul:consul /etc/consul.d/join_lan.hcl\nchmod 0640 /etc/consul.d/join_lan.hcl\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/join_wan.hcl\nretry_join_wan = [\"provider=digitalocean api_token=${var.digitalocean_token} tag_name=server\",\"wan.protoconf.com\"]\nFILE_CONTENT\nchown consul:consul /etc/consul.d/join_wan.hcl\nchmod 0640 /etc/consul.d/join_wan.hcl\ncat <<FILE_CONTENT | cat | tee /etc/systemd/system/consul.service\n[Unit]\nAfter=network-online.target\nDescription=HashiCorp Consul - A service mesh solution\nDocumentation=https://www.consul.io/\nRequires=network-online.target\n[Service]\nAmbientCapabilities=CAP_NET_BIND_SERVICE\nExecReload=/usr/local/bin/consul reload\nExecStart=/usr/local/bin/consul agent -config-dir=/etc/consul.d/\nGroup=consul\nKillMode=process\nLimitNOFILE=65536\nRestart=on-failure\nType=notify\nUser=consul\n[Install]\nWantedBy=multi-user.target\nFILE_CONTENT\nchown root:root /etc/systemd/system/consul.service\nchmod 0644 /etc/systemd/system/consul.service\nsystemctl start consul\nsystemctl enable consul\ncurl -L https://releases.hashicorp.com/vault/1.3.2/vault_1.3.2_linux_amd64.zip -o /tmp/vault-1.3.2.zip\nchown root:root /tmp/vault-1.3.2.zip\nchmod 0644 /tmp/vault-1.3.2.zip\nunzip -x /tmp/vault-1.3.2.zip -d /usr/local/bin\nrm /tmp/vault-1.3.2.zip\nvault -autocomplete-install\nsetcap cap_ipc_lock=+ep /usr/local/bin/vault\nuseradd --system --home /etc/vault.d --shell /bin/false vault\nmkdir -p /etc/vault.d\nchown vault:vault /etc/vault.d\nchmod 0755 /etc/vault.d\nmkdir -p /etc/vault.d/tls\nchown vault:vault /etc/vault.d/tls\nchmod 700 /etc/vault.d/tls\ncat <<FILE_CONTENT | cat | tee /etc/vault.d/tls/key.pem\n${tls_private_key.server-1-ams3-c01-vault.private_key_pem}\nFILE_CONTENT\nchown vault:vault /etc/vault.d/tls/key.pem\nchmod 600 /etc/vault.d/tls/key.pem\ncat <<FILE_CONTENT | cat | tee /etc/vault.d/tls/cert.pem\n${tls_locally_signed_cert.server-1-ams3-c01-vault.cert_pem}\nFILE_CONTENT\nchown vault:vault /etc/vault.d/tls/cert.pem\nchmod 0644 /etc/vault.d/tls/cert.pem\ncat <<FILE_CONTENT | cat | tee /etc/vault.d/tls/consul_encrypt.key\n${tls_private_key.consul-encrypt.private_key_pem}\nFILE_CONTENT\nchown vault:vault /etc/vault.d/tls/consul_encrypt.key\nchmod 0600 /etc/vault.d/tls/consul_encrypt.key\ncat <<FILE_CONTENT | cat | tee /etc/vault.d/vault.hcl\nui = true\nstorage \"consul\" {\n    path = \"vault/\"\n}\nlistener \"tcp\" {\n  address       = \"0.0.0.0:8200\"\n  tls_cert_file = \"/etc/vault.d/tls/cert.pem\"\n  tls_key_file  = \"/etc/vault.d/tls/key.pem\"\n}\n\nFILE_CONTENT\nchown root:root /etc/vault.d/vault.hcl\nchmod 0644 /etc/vault.d/vault.hcl\nmkdir -p /etc/vault.d/scripts\nchown vault:vault /etc/vault.d/scripts\nchmod 0755 /etc/vault.d/scripts\ncat <<FILE_CONTENT | base64 -d | tee /etc/vault.d/scripts/post_start.sh\nIyEvYmluL2Jhc2gKCiMgVGhpcyBzY3JpcHQgd2lsbCBydW4gYWZ0ZXIgZXZlcnkgdGltZSB2YXVsdCBpcyBzdGFydGVkLiBJdCB3aWxsIHRyeSB0bzoKIyAxLiBWYWxpZGF0ZSBpZiB2YXVsdCBpcyBpbml0aWFsaXplZAojIDEuMS4gaW5pdGlhbGl6ZSB2YXVsdCBhbmQgc2F2ZSB0aGUgdW5zZWFsIGtleXMgaW4gL3Jvb3QvdmF1bHRfa2V5cy5qc29uCiMgMS4yLiB3cml0ZSB0aGUgcm9vdCB0b2tlbiBpbnRvIC9yb290Ly52YXVsdC10b2tlbgojIDIuIENoZWNrIGlmIHZhdWx0IGlzIHNlYWxlZAojIDIuMS4gVmFsaWRhdGUgL3Jvb3QvdmF1bHRfa2V5cy5qc29uIGhhcyB1bnNlYWwga2V5cwojIDIuMi4gVW5zZWFsIHZhdWx0CgpleHBvcnQgVkFVTFRfQUREUj1odHRwczovLzEyNy4wLjAuMTo4MjAwCmV4cG9ydCBLRVlTX0ZJTEU9L3RtcC92YXVsdF9rZXlzLmpzb24KCnZhdWx0X2lzX2luaXRpYWxpemVkKCkgewogIGN1cmwgLXMgJFZBVUxUX0FERFIvdjEvc3lzL2luaXQgfCBqcSAtZSAuaW5pdGlhbGl6ZWQgPiAvZGV2L251bGwKICByZXR1cm4gJD8KfQoKdmF1bHRfaXNfc2VhbGVkKCkgewogIGN1cmwgLXMgJFZBVUxUX0FERFIvdjEvc3lzL2hlYWx0aCB8IGpxIC1lIC5zZWFsZWQgPiAvZGV2L251bGwKICByZXR1cm4gJD8KfQoKaW5pdGlhbGl6ZV92YXVsdCgpIHsKICBjdXJsIC1zICRWQVVMVF9BRERSL3YxL3N5cy9pbml0IC1YIFBVVCAtZCAneyJzZWNyZXRfc2hhcmVzIjogMywgInNlY3JldF90aHJlc2hvbGQiOiAzfScgPiAkS0VZU19GSUxFCiAgcmV0dmFsPSQ/CiAgcmV0dXJuICRyZXR2YWwKfQoKdmF1bHRfcm9vdF9sb2dpbigpIHsKICBjYXQgJEtFWVNfRklMRSB8IGpxIC1yIC5yb290X3Rva2VuID4gL3RtcC8udmF1bHQtdG9rZW4KfQoKdW5zZWFsX3ZhdWx0KCkgewogIGlmIGpxIC1lICIoLmtleXMgfCBsZW5ndGgpID4gMCIgJEtFWVNfRklMRTsgdGhlbgogICAgY29uc3VsIGt2IHB1dCB2YXVsdF9pbml0IEA8KG9wZW5zc2wgYWVzLTI1Ni1jYmMgLWEgLXNhbHQgLWluICR7S0VZU19GSUxFfSAta2ZpbGUgL2V0Yy92YXVsdC5kL3Rscy9jb25zdWxfZW5jcnlwdC5rZXkpCiAgZWxzZQogICAgZWNobyAiTWlzc2luZyBrZXlzIGluICRLRVlTX0ZJTEUiCiAgICBjb25zdWwga3YgZ2V0IHZhdWx0X2luaXQgfCBvcGVuc3NsIGFlcy0yNTYtY2JjIC1kIC1hIC1rZmlsZSAvZXRjL3ZhdWx0LmQvdGxzL2NvbnN1bF9lbmNyeXB0LmtleSA+ICR7S0VZU19GSUxFfQogIGZpCiAgQ09VTlRFUj0wCiAgd2hpbGUgdmF1bHRfaXNfc2VhbGVkOyBkbwogICAgX2tleT0kKGNhdCAkS0VZU19GSUxFIHwganEgLXIgIi5rZXlzWyR7Q09VTlRFUn1dIikKICAgIENPVU5URVI9JCgoJHtDT1VOVEVSfSsxKSkKICAgIGN1cmwgLXMgJFZBVUxUX0FERFIvdjEvc3lzL3Vuc2VhbCAtWCBQVVQgLWQgIntcImtleVwiOlwiJHtfa2V5fVwifSIKICBkb25lCn0KCnZhdWx0X2lzX3VwKCkgewogIGN1cmwgLXMgJFZBVUxUX0FERFIvdjEvc3lzL2hlYWx0aCA+IC9kZXYvbnVsbAp9Cgp3YWl0X2Zvcl92YXVsdF9zZXJ2ZXIoKSB7CiAgVElNRU9VVF9TRUNPTkRTPSR7MTotNjB9CiAgVElNRU9VVF9USU1FPSQoKCAke1RJTUVPVVRfU0VDT05EU30gKyAkKGRhdGUgKyVzKSApKQogIHVudGlsIHZhdWx0X2lzX3VwOyBkbwogICAgWyAkKGRhdGUgKyVzKSAtbHQgJHtUSU1FT1VUX1RJTUV9IF0gfHwgZXhpdCAyCiAgICBzbGVlcCAxCiAgZG9uZQp9CgptYWluKCkgewogIHdhaXRfZm9yX3ZhdWx0X3NlcnZlcgogIHZhdWx0X2lzX2luaXRpYWxpemVkIHx8IGluaXRpYWxpemVfdmF1bHQKICB1bnNlYWxfdmF1bHQgfHwgZXhpdCAwCiAgdmF1bHRfcm9vdF9sb2dpbgp9CgptYWluCg==\nFILE_CONTENT\nchown vault:vault /etc/vault.d/scripts/post_start.sh\nchmod 0755 /etc/vault.d/scripts/post_start.sh\ncat <<FILE_CONTENT | cat | tee /etc/systemd/system/vault.service\n[Unit]\nDescription=vault\nDocumentation=http://localhost\n[Service]\nAmbientCapabilities=CAP_IPC_LOCK\nCapabilities=CAP_IPC_LOCK+ep\nCapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK\nExecReload=/bin/kill --signal HUP $MAINPID\nExecStart=/usr/local/bin/vault server -config=/etc/vault.d/vault.hcl\nExecStartPost=/etc/vault.d/scripts/post_start.sh\nGroup=vault\nKillMode=process\nKillSignal=SIGINT\nLimitMEMLOCK=infinity\nLimitNOFILE=65536\nNoNewPrivileges=yes\nPrivateDevices=yes\nPrivateTmp=yes\nProtectHome=read-only\nProtectSystem=full\nRestart=on-failure\nRestartSec=5\nSecureBits=keep-caps\nTimeoutStopSec=30\nUser=vault\n[Install]\nWantedBy=multi-user.target\nFILE_CONTENT\nchown root:root /etc/systemd/system/vault.service\nchmod 0644 /etc/systemd/system/vault.service\nsystemctl start vault\nsystemctl enable vault\napt-get install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo add-apt-repository  \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" \napt-get update\napt-get install -y docker-ce docker-ce-cli containerd.io\nmkdir -p /etc/nomad.d\nchown root:root /etc/nomad.d\nchmod 700 /etc/nomad.d\nmkdir -p /opt/nomad\nchown root:root /opt/nomad\nchmod 0755 /opt/nomad\ncurl -L https://releases.hashicorp.com/nomad/0.10.4/nomad_0.10.4_linux_amd64.zip -o /tmp/nomad-0.10.4.zip\nchown root:root /tmp/nomad-0.10.4.zip\nchmod 0644 /tmp/nomad-0.10.4.zip\nunzip -x /tmp/nomad-0.10.4.zip -d /usr/local/bin\nrm /tmp/nomad-0.10.4.zip\nnomad -autocomplete-install\ncomplete -C /usr/local/bin/nomad nomad\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/nomad.hcl\ndata_dir = \"/opt/nomad\"\nFILE_CONTENT\nchown root:root /etc/nomad.d/nomad.hcl\nchmod 0644 /etc/nomad.d/nomad.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/datacenter.hcl\ndatacenter = \"ams3c01\"\nFILE_CONTENT\nchown root:root /etc/nomad.d/datacenter.hcl\nchmod 0644 /etc/nomad.d/datacenter.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/client.hcl\nclient {\n  enabled = true\n  node_class = \"server\"\n  meta {\n      tier = \"server\"\n  }\n  options {\n      driver.raw_exec.enabled = 1\n      docker.privileged.enabled = true\n  }\n}\n\ntelemetry {\n    publish_allocation_metrics = true\n    publish_node_metrics = true\n    prometheus_metrics = true\n}\n\nconsul {\n    address = \"127.0.0.1:8500\"\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/client.hcl\nchmod 0644 /etc/nomad.d/client.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/vault.hcl\nvault {\n    enabled = true\n    address = \"https://vault.service.protoconf.sh:8200\"\n    create_from_role = \"nomad-cluster\"\n    ca_file = \"/usr/local/share/ca-certificates/protoconf.crt\"\n    cert_file = \"/etc/nomad.d/tls/cert.pem\"\n    key_file = \"/etc/nomad.d/tls/key.pem\"\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/vault.hcl\nchmod 0644 /etc/nomad.d/vault.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/server.hcl\nserver {\n  enabled = true\n  bootstrap_expect = 3\n  encrypt = \"${random_id.nomad_encrypt.b64_std}\"\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/server.hcl\nchmod 0644 /etc/nomad.d/server.hcl\nmkdir -p /etc/nomad.d/files\nchown root:root /etc/nomad.d/files\nchmod 0755 /etc/nomad.d/files\nmkdir -p /etc/nomad.d/scripts\nchown root:root /etc/nomad.d/scripts\nchmod 0755 /etc/nomad.d/scripts\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/files/nomad-server-policy.hcl\n# Allow creating tokens under \"nomad-cluster\" role. The role name should be\n# updated if \"nomad-cluster\" is not used.\npath \"auth/token/create/nomad-cluster\" {\n  capabilities = [\"update\"]\n}\n\n# Allow looking up \"nomad-cluster\" role. The role name should be updated if\n# \"nomad-cluster\" is not used.\npath \"auth/token/roles/nomad-cluster\" {\n  capabilities = [\"read\"]\n}\n\n# Allow looking up the token passed to Nomad to validate the token has the\n# proper capabilities. This is provided by the \"default\" policy.\npath \"auth/token/lookup-self\" {\n  capabilities = [\"read\"]\n}\n\n# Allow looking up incoming tokens to validate they have permissions to access\n# the tokens they are requesting. This is only required if\n# `allow_unauthenticated` is set to false.\npath \"auth/token/lookup\" {\n  capabilities = [\"update\"]\n}\n\n# Allow revoking tokens that should no longer exist. This allows revoking\n# tokens for dead tasks.\npath \"auth/token/revoke-accessor\" {\n  capabilities = [\"update\"]\n}\n\n# Allow checking the capabilities of our own token. This is used to validate the\n# token upon startup.\npath \"sys/capabilities-self\" {\n  capabilities = [\"update\"]\n}\n\n# Allow our own token to be renewed.\npath \"auth/token/renew-self\" {\n  capabilities = [\"update\"]\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/files/nomad-server-policy.hcl\nchmod 0644 /etc/nomad.d/files/nomad-server-policy.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/files/nomad-cluster-role.json\n{\n  \"disallowed_policies\": \"nomad-server\",\n  \"explicit_max_ttl\": 0,\n  \"name\": \"nomad-cluster\",\n  \"orphan\": true,\n  \"period\": 259200,\n  \"renewable\": true\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/files/nomad-cluster-role.json\nchmod 0644 /etc/nomad.d/files/nomad-cluster-role.json\ncat <<FILE_CONTENT | base64 -d | tee /etc/nomad.d/scripts/before_nomad.sh\nIyEvYmluL2Jhc2gKCnNldCAtZQoKIyBUaGlzIHNjcmlwdCB3aWxsOgojIDEuIFZhbGlkYXRlIHZhdWx0IGlzIHJ1bm5pbmcgKGVpdGhlciBsb2NhbGx5IG9yIGdsb2JhbGx5KQojIDIuIFJldHJpdmUgdGhlIHJvb3QgdG9rZW4gZnJvbSBjb25zdWwKIyAzLiBJbnN0YWxsIHJvbGUgYW5kIHBvbGljeSBmb3Igbm9tYWQKIyA0LiBDcmVhdGUgYSBuZXcgdG9rZW4gZm9yIG5vbWFkIHNlcnZlciBhbmQgd2lsbCB3cml0ZSBpdCB0byB0aGUgZW52IGZpbGUKCnZhbGlkYXRlX3ZhdWx0KCl7CiAgICBleHBvcnQgVkFVTFRfQUREUj1odHRwczovLzEyNy4wLjAuMTo4MjAwCiAgICBpZiBjdXJsIC1zICRWQVVMVF9BRERSL3YxL3N5cy9oZWFsdGggPiAvZGV2L251bGw7IHRoZW4KICAgICAgICByZXR1cm4KICAgIGZpCiAgICBleHBvcnQgVkFVTFRfQUREUj1odHRwczovL3ZhdWx0LnNlcnZpY2UucHJvdG9jb25mLnNoOjgyMDAKICAgIGlmIGN1cmwgLXMgJFZBVUxUX0FERFIvdjEvc3lzL2hlYWx0aCA+IC9kZXYvbnVsbDsgdGhlbgogICAgICAgIHJldHVybgogICAgZmkKCiAgICBlY2hvICJWYXVsdCBpcyBub3QgcnVubmluZyBwcm9wZXJseSIKICAgIGV4aXQgMQp9CgpnZXRfcm9vdF90b2tlbigpewogICAgZXhwb3J0IFZBVUxUX1RPS0VOPSQoY29uc3VsIGt2IGdldCB2YXVsdF9pbml0IHwgb3BlbnNzbCBhZXMtMjU2LWNiYyAtZCAtYSAta2ZpbGUgL2V0Yy92YXVsdC5kL3Rscy9jb25zdWxfZW5jcnlwdC5rZXkgfCBqcSAtciAnLnJvb3RfdG9rZW4nKQp9CgppbnN0YWxsX3JvbGVfYW5kX3BvbGljeSgpewogICAgdmF1bHQgcG9saWN5IHdyaXRlIG5vbWFkLXNlcnZlciAvZXRjL25vbWFkLmQvZmlsZXMvbm9tYWQtc2VydmVyLXBvbGljeS5oY2wKICAgIHZhdWx0IHdyaXRlIC9hdXRoL3Rva2VuL3JvbGVzL25vbWFkLWNsdXN0ZXIgQC9ldGMvbm9tYWQuZC9maWxlcy9ub21hZC1jbHVzdGVyLXJvbGUuanNvbgp9Cgp3cml0ZV90b2tlbl90b19lbnZfZmlsZSgpIHsKICAgIG5vbWFkX3Rva2VuPSQodmF1bHQgdG9rZW4gY3JlYXRlIC1wb2xpY3kgbm9tYWQtc2VydmVyICAtb3JwaGFuICAtZm9ybWF0PWpzb258IGpxIC1yICcuYXV0aC5jbGllbnRfdG9rZW4nKQogICAgZWNobyAiVkFVTFRfVE9LRU49JHtub21hZF90b2tlbn0iIHwgdGVlIC9ldGMvbm9tYWQuZC9lbnYKfQoKbWFpbigpewogICAgdmFsaWRhdGVfdmF1bHQKICAgIGdldF9yb290X3Rva2VuCiAgICBpbnN0YWxsX3JvbGVfYW5kX3BvbGljeQogICAgd3JpdGVfdG9rZW5fdG9fZW52X2ZpbGUKfQoKbWFpbgo=\nFILE_CONTENT\nchown root:root /etc/nomad.d/scripts/before_nomad.sh\nchmod 0755 /etc/nomad.d/scripts/before_nomad.sh\n/etc/nomad.d/scripts/before_nomad.sh\nmkdir -p /etc/nomad.d/tls\nchown root:root /etc/nomad.d/tls\nchmod 0755 /etc/nomad.d/tls\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/tls/key.pem\n${tls_private_key.server-1-ams3-c01-nomad.private_key_pem}\nFILE_CONTENT\nchown root:root /etc/nomad.d/tls/key.pem\nchmod 600 /etc/nomad.d/tls/key.pem\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/tls/cert.pem\n${tls_locally_signed_cert.server-1-ams3-c01-nomad.cert_pem}\nFILE_CONTENT\nchown root:root /etc/nomad.d/tls/cert.pem\nchmod 0644 /etc/nomad.d/tls/cert.pem\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/tls.hcl\ntls {\n  http = true\n  rpc  = true\n\n  ca_file   = \"/usr/local/share/ca-certificates/protoconf.crt\"\n  cert_file = \"/etc/nomad.d/tls/cert.pem\"\n  key_file  = \"/etc/nomad.d/tls/key.pem\"\n\n  verify_server_hostname = false\n  verify_https_client    = false\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/tls.hcl\nchmod 0644 /etc/nomad.d/tls.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/99-additional-configs.hcl\nadvertise {\n    http = \"{{GetPublicIP}}\"\n    rpc = \"{{GetPublicIP}}\"\n    serf = \"{{GetPublicIP}}\"\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/99-additional-configs.hcl\nchmod 0644 /etc/nomad.d/99-additional-configs.hcl\ncat <<FILE_CONTENT | cat | tee /etc/systemd/system/nomad.service\n[Unit]\nDescription=nomad\nDocumentation=http://localhost\n[Service]\nEnvironmentFile=/etc/nomad.d/env\nExecReload=/bin/kill -HUP $MAINPID\nExecStart=/usr/local/bin/nomad agent -config /etc/nomad.d\nExecStartPre=/etc/nomad.d/scripts/before_nomad.sh\nKillMode=process\nKillSignal=SIGINT\nLimitNOFILE=infinity\nLimitNPROC=infinity\nRestart=on-failure\nRestartSec=2\nStartLimitBurst=3\nStartLimitIntervalSec=10\nTasksMax=infinity\n[Install]\nWantedBy=multi-user.target\nFILE_CONTENT\nchown root:root /etc/systemd/system/nomad.service\nchmod 0644 /etc/systemd/system/nomad.service\nsystemctl start nomad\nsystemctl enable nomad\ncurl -fsSL https://github.com/protoconf/protoconf/releases/download/0.1.1/protoconf-linux-0.1.1.tar.gz -o /tmp/protoconf-linux-0.1.1.tar.gz\ntar -xvf /tmp/protoconf-linux-0.1.1.tar.gz -C /usr/local/bin",
        "lifecycle": {
          "create_before_destroy": true,
          "ignore_changes": [
            "user_data"
          ]
        }
      },
      "server-1-lon1-c01": {
        "image": "ubuntu-18-04-x64",
        "name": "${random_pet.server-1-lon1-c01.id}",
        "private_networking": true,
        "region": "lon1",
        "size": "s-2vcpu-4gb",
        "ssh_keys": [
          "${digitalocean_ssh_key.smintz-0.id}"
        ],
        "tags": [
          "server",
          "c01"
        ],
        "user_data": "#!/bin/bash\napt-get update\napt-get install -y unzip curl jq dnsutils\nuseradd --system --home /etc/consul.d --shell /bin/false consul\nmkdir -p /etc/consul.d\nchown root:root /etc/consul.d\nchmod 0755 /etc/consul.d\nmkdir -p /opt/consul\nchown consul:consul /opt/consul\nchmod 0755 /opt/consul\ncurl -L https://releases.hashicorp.com/consul/1.7.1/consul_1.7.1_linux_amd64.zip -o /tmp/consul-1.7.1.zip\nchown root:root /tmp/consul-1.7.1.zip\nchmod 0644 /tmp/consul-1.7.1.zip\nunzip -x /tmp/consul-1.7.1.zip -d /usr/local/bin\nrm /tmp/consul-1.7.1.zip\nconsul -autocomplete-install\ncomplete -C /usr/local/bin/consul consul\ncat <<FILE_CONTENT | cat | tee /etc/systemd/network/consul0.netdev\n# Creates a \"dummy\" network interface\n# we'll configure this interface with a link-local address\n# See: https://www.freedesktop.org/software/systemd/man/systemd.netdev.html\n##\n\n[NetDev]\nName=consul0\nKind=dummy\n\nFILE_CONTENT\nchown root:root /etc/systemd/network/consul0.netdev\nchmod 0644 /etc/systemd/network/consul0.netdev\ncat <<FILE_CONTENT | cat | tee /etc/systemd/network/consul0.network\n# We \"find\" the dummy0 interface we created and configure it with a link-local address\n# See: https://www.freedesktop.org/software/systemd/man/systemd.network.html\n##\n[Match]\nName=consul0\n\n[Network]\nAddress=169.254.1.1/32\n\n# We want these domains\nDomains= ~protoconf.sh.\n\n# To go to the consul DNS server we'll bind to this address\nDNS=169.254.1.1\n\nFILE_CONTENT\nchown root:root /etc/systemd/network/consul0.network\nchmod 0644 /etc/systemd/network/consul0.network\nsystemctl restart systemd-networkd\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/config.hcl\nui = true\nbind_addr = \"0.0.0.0\"\nadvertise_addr = \"{{GetPublicIP}}\"\ndatacenter = \"lon1c01\"\ndata_dir = \"/opt/consul\"\ndomain = \"protoconf.sh\"\nFILE_CONTENT\nchown consul:consul /etc/consul.d/config.hcl\nchmod 0640 /etc/consul.d/config.hcl\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/server.hcl\nserver = true\nbootstrap_expect = 3\nFILE_CONTENT\nchown consul:consul /etc/consul.d/server.hcl\nchmod 0640 /etc/consul.d/server.hcl\ncat <<FILE_CONTENT | cat | tee /usr/local/share/ca-certificates/protoconf.crt\n${tls_self_signed_cert.root.cert_pem}\nFILE_CONTENT\nchown root:root /usr/local/share/ca-certificates/protoconf.crt\nchmod 0644 /usr/local/share/ca-certificates/protoconf.crt\nupdate-ca-certificates\nmkdir -p /etc/consul.d/tls\nchown root:root /etc/consul.d/tls\nchmod 0755 /etc/consul.d/tls\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/tls/key.pem\n${tls_private_key.server-1-lon1-c01-consul.private_key_pem}\nFILE_CONTENT\nchown consul:consul /etc/consul.d/tls/key.pem\nchmod 600 /etc/consul.d/tls/key.pem\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/tls/cert.pem\n${tls_locally_signed_cert.server-1-lon1-c01-consul.cert_pem}\nFILE_CONTENT\nchown consul:consul /etc/consul.d/tls/cert.pem\nchmod 0644 /etc/consul.d/tls/cert.pem\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/tls.hcl\nkey_file = \"/etc/consul.d/tls/key.pem\"\ncert_file = \"/etc/consul.d/tls/cert.pem\"\nca_file = \"/usr/local/share/ca-certificates/protoconf.crt\"\naddresses {\n    https = \"0.0.0.0\"\n    dns = \"169.254.1.1\"\n}\nports {\n    https = 8501\n    dns = 53\n}\nencrypt = \"${random_id.consul_encrypt.b64_std}\"\nrecursors = [\"127.0.0.53\"]\n\nFILE_CONTENT\nchown root:root /etc/consul.d/tls.hcl\nchmod 0644 /etc/consul.d/tls.hcl\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/join_lan.hcl\nretry_join = [\"provider=digitalocean api_token=${var.digitalocean_token} region=lon1 tag_name=server\"]\nFILE_CONTENT\nchown consul:consul /etc/consul.d/join_lan.hcl\nchmod 0640 /etc/consul.d/join_lan.hcl\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/join_wan.hcl\nretry_join_wan = [\"provider=digitalocean api_token=${var.digitalocean_token} tag_name=server\",\"wan.protoconf.com\"]\nFILE_CONTENT\nchown consul:consul /etc/consul.d/join_wan.hcl\nchmod 0640 /etc/consul.d/join_wan.hcl\ncat <<FILE_CONTENT | cat | tee /etc/systemd/system/consul.service\n[Unit]\nAfter=network-online.target\nDescription=HashiCorp Consul - A service mesh solution\nDocumentation=https://www.consul.io/\nRequires=network-online.target\n[Service]\nAmbientCapabilities=CAP_NET_BIND_SERVICE\nExecReload=/usr/local/bin/consul reload\nExecStart=/usr/local/bin/consul agent -config-dir=/etc/consul.d/\nGroup=consul\nKillMode=process\nLimitNOFILE=65536\nRestart=on-failure\nType=notify\nUser=consul\n[Install]\nWantedBy=multi-user.target\nFILE_CONTENT\nchown root:root /etc/systemd/system/consul.service\nchmod 0644 /etc/systemd/system/consul.service\nsystemctl start consul\nsystemctl enable consul\ncurl -L https://releases.hashicorp.com/vault/1.3.2/vault_1.3.2_linux_amd64.zip -o /tmp/vault-1.3.2.zip\nchown root:root /tmp/vault-1.3.2.zip\nchmod 0644 /tmp/vault-1.3.2.zip\nunzip -x /tmp/vault-1.3.2.zip -d /usr/local/bin\nrm /tmp/vault-1.3.2.zip\nvault -autocomplete-install\nsetcap cap_ipc_lock=+ep /usr/local/bin/vault\nuseradd --system --home /etc/vault.d --shell /bin/false vault\nmkdir -p /etc/vault.d\nchown vault:vault /etc/vault.d\nchmod 0755 /etc/vault.d\nmkdir -p /etc/vault.d/tls\nchown vault:vault /etc/vault.d/tls\nchmod 700 /etc/vault.d/tls\ncat <<FILE_CONTENT | cat | tee /etc/vault.d/tls/key.pem\n${tls_private_key.server-1-lon1-c01-vault.private_key_pem}\nFILE_CONTENT\nchown vault:vault /etc/vault.d/tls/key.pem\nchmod 600 /etc/vault.d/tls/key.pem\ncat <<FILE_CONTENT | cat | tee /etc/vault.d/tls/cert.pem\n${tls_locally_signed_cert.server-1-lon1-c01-vault.cert_pem}\nFILE_CONTENT\nchown vault:vault /etc/vault.d/tls/cert.pem\nchmod 0644 /etc/vault.d/tls/cert.pem\ncat <<FILE_CONTENT | cat | tee /etc/vault.d/tls/consul_encrypt.key\n${tls_private_key.consul-encrypt.private_key_pem}\nFILE_CONTENT\nchown vault:vault /etc/vault.d/tls/consul_encrypt.key\nchmod 0600 /etc/vault.d/tls/consul_encrypt.key\ncat <<FILE_CONTENT | cat | tee /etc/vault.d/vault.hcl\nui = true\nstorage \"consul\" {\n    path = \"vault/\"\n}\nlistener \"tcp\" {\n  address       = \"0.0.0.0:8200\"\n  tls_cert_file = \"/etc/vault.d/tls/cert.pem\"\n  tls_key_file  = \"/etc/vault.d/tls/key.pem\"\n}\n\nFILE_CONTENT\nchown root:root /etc/vault.d/vault.hcl\nchmod 0644 /etc/vault.d/vault.hcl\nmkdir -p /etc/vault.d/scripts\nchown vault:vault /etc/vault.d/scripts\nchmod 0755 /etc/vault.d/scripts\ncat <<FILE_CONTENT | base64 -d | tee /etc/vault.d/scripts/post_start.sh\nIyEvYmluL2Jhc2gKCiMgVGhpcyBzY3JpcHQgd2lsbCBydW4gYWZ0ZXIgZXZlcnkgdGltZSB2YXVsdCBpcyBzdGFydGVkLiBJdCB3aWxsIHRyeSB0bzoKIyAxLiBWYWxpZGF0ZSBpZiB2YXVsdCBpcyBpbml0aWFsaXplZAojIDEuMS4gaW5pdGlhbGl6ZSB2YXVsdCBhbmQgc2F2ZSB0aGUgdW5zZWFsIGtleXMgaW4gL3Jvb3QvdmF1bHRfa2V5cy5qc29uCiMgMS4yLiB3cml0ZSB0aGUgcm9vdCB0b2tlbiBpbnRvIC9yb290Ly52YXVsdC10b2tlbgojIDIuIENoZWNrIGlmIHZhdWx0IGlzIHNlYWxlZAojIDIuMS4gVmFsaWRhdGUgL3Jvb3QvdmF1bHRfa2V5cy5qc29uIGhhcyB1bnNlYWwga2V5cwojIDIuMi4gVW5zZWFsIHZhdWx0CgpleHBvcnQgVkFVTFRfQUREUj1odHRwczovLzEyNy4wLjAuMTo4MjAwCmV4cG9ydCBLRVlTX0ZJTEU9L3RtcC92YXVsdF9rZXlzLmpzb24KCnZhdWx0X2lzX2luaXRpYWxpemVkKCkgewogIGN1cmwgLXMgJFZBVUxUX0FERFIvdjEvc3lzL2luaXQgfCBqcSAtZSAuaW5pdGlhbGl6ZWQgPiAvZGV2L251bGwKICByZXR1cm4gJD8KfQoKdmF1bHRfaXNfc2VhbGVkKCkgewogIGN1cmwgLXMgJFZBVUxUX0FERFIvdjEvc3lzL2hlYWx0aCB8IGpxIC1lIC5zZWFsZWQgPiAvZGV2L251bGwKICByZXR1cm4gJD8KfQoKaW5pdGlhbGl6ZV92YXVsdCgpIHsKICBjdXJsIC1zICRWQVVMVF9BRERSL3YxL3N5cy9pbml0IC1YIFBVVCAtZCAneyJzZWNyZXRfc2hhcmVzIjogMywgInNlY3JldF90aHJlc2hvbGQiOiAzfScgPiAkS0VZU19GSUxFCiAgcmV0dmFsPSQ/CiAgcmV0dXJuICRyZXR2YWwKfQoKdmF1bHRfcm9vdF9sb2dpbigpIHsKICBjYXQgJEtFWVNfRklMRSB8IGpxIC1yIC5yb290X3Rva2VuID4gL3RtcC8udmF1bHQtdG9rZW4KfQoKdW5zZWFsX3ZhdWx0KCkgewogIGlmIGpxIC1lICIoLmtleXMgfCBsZW5ndGgpID4gMCIgJEtFWVNfRklMRTsgdGhlbgogICAgY29uc3VsIGt2IHB1dCB2YXVsdF9pbml0IEA8KG9wZW5zc2wgYWVzLTI1Ni1jYmMgLWEgLXNhbHQgLWluICR7S0VZU19GSUxFfSAta2ZpbGUgL2V0Yy92YXVsdC5kL3Rscy9jb25zdWxfZW5jcnlwdC5rZXkpCiAgZWxzZQogICAgZWNobyAiTWlzc2luZyBrZXlzIGluICRLRVlTX0ZJTEUiCiAgICBjb25zdWwga3YgZ2V0IHZhdWx0X2luaXQgfCBvcGVuc3NsIGFlcy0yNTYtY2JjIC1kIC1hIC1rZmlsZSAvZXRjL3ZhdWx0LmQvdGxzL2NvbnN1bF9lbmNyeXB0LmtleSA+ICR7S0VZU19GSUxFfQogIGZpCiAgQ09VTlRFUj0wCiAgd2hpbGUgdmF1bHRfaXNfc2VhbGVkOyBkbwogICAgX2tleT0kKGNhdCAkS0VZU19GSUxFIHwganEgLXIgIi5rZXlzWyR7Q09VTlRFUn1dIikKICAgIENPVU5URVI9JCgoJHtDT1VOVEVSfSsxKSkKICAgIGN1cmwgLXMgJFZBVUxUX0FERFIvdjEvc3lzL3Vuc2VhbCAtWCBQVVQgLWQgIntcImtleVwiOlwiJHtfa2V5fVwifSIKICBkb25lCn0KCnZhdWx0X2lzX3VwKCkgewogIGN1cmwgLXMgJFZBVUxUX0FERFIvdjEvc3lzL2hlYWx0aCA+IC9kZXYvbnVsbAp9Cgp3YWl0X2Zvcl92YXVsdF9zZXJ2ZXIoKSB7CiAgVElNRU9VVF9TRUNPTkRTPSR7MTotNjB9CiAgVElNRU9VVF9USU1FPSQoKCAke1RJTUVPVVRfU0VDT05EU30gKyAkKGRhdGUgKyVzKSApKQogIHVudGlsIHZhdWx0X2lzX3VwOyBkbwogICAgWyAkKGRhdGUgKyVzKSAtbHQgJHtUSU1FT1VUX1RJTUV9IF0gfHwgZXhpdCAyCiAgICBzbGVlcCAxCiAgZG9uZQp9CgptYWluKCkgewogIHdhaXRfZm9yX3ZhdWx0X3NlcnZlcgogIHZhdWx0X2lzX2luaXRpYWxpemVkIHx8IGluaXRpYWxpemVfdmF1bHQKICB1bnNlYWxfdmF1bHQgfHwgZXhpdCAwCiAgdmF1bHRfcm9vdF9sb2dpbgp9CgptYWluCg==\nFILE_CONTENT\nchown vault:vault /etc/vault.d/scripts/post_start.sh\nchmod 0755 /etc/vault.d/scripts/post_start.sh\ncat <<FILE_CONTENT | cat | tee /etc/systemd/system/vault.service\n[Unit]\nDescription=vault\nDocumentation=http://localhost\n[Service]\nAmbientCapabilities=CAP_IPC_LOCK\nCapabilities=CAP_IPC_LOCK+ep\nCapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK\nExecReload=/bin/kill --signal HUP $MAINPID\nExecStart=/usr/local/bin/vault server -config=/etc/vault.d/vault.hcl\nExecStartPost=/etc/vault.d/scripts/post_start.sh\nGroup=vault\nKillMode=process\nKillSignal=SIGINT\nLimitMEMLOCK=infinity\nLimitNOFILE=65536\nNoNewPrivileges=yes\nPrivateDevices=yes\nPrivateTmp=yes\nProtectHome=read-only\nProtectSystem=full\nRestart=on-failure\nRestartSec=5\nSecureBits=keep-caps\nTimeoutStopSec=30\nUser=vault\n[Install]\nWantedBy=multi-user.target\nFILE_CONTENT\nchown root:root /etc/systemd/system/vault.service\nchmod 0644 /etc/systemd/system/vault.service\nsystemctl start vault\nsystemctl enable vault\napt-get install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo add-apt-repository  \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" \napt-get update\napt-get install -y docker-ce docker-ce-cli containerd.io\nmkdir -p /etc/nomad.d\nchown root:root /etc/nomad.d\nchmod 700 /etc/nomad.d\nmkdir -p /opt/nomad\nchown root:root /opt/nomad\nchmod 0755 /opt/nomad\ncurl -L https://releases.hashicorp.com/nomad/0.10.4/nomad_0.10.4_linux_amd64.zip -o /tmp/nomad-0.10.4.zip\nchown root:root /tmp/nomad-0.10.4.zip\nchmod 0644 /tmp/nomad-0.10.4.zip\nunzip -x /tmp/nomad-0.10.4.zip -d /usr/local/bin\nrm /tmp/nomad-0.10.4.zip\nnomad -autocomplete-install\ncomplete -C /usr/local/bin/nomad nomad\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/nomad.hcl\ndata_dir = \"/opt/nomad\"\nFILE_CONTENT\nchown root:root /etc/nomad.d/nomad.hcl\nchmod 0644 /etc/nomad.d/nomad.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/datacenter.hcl\ndatacenter = \"lon1c01\"\nFILE_CONTENT\nchown root:root /etc/nomad.d/datacenter.hcl\nchmod 0644 /etc/nomad.d/datacenter.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/client.hcl\nclient {\n  enabled = true\n  node_class = \"server\"\n  meta {\n      tier = \"server\"\n  }\n  options {\n      driver.raw_exec.enabled = 1\n      docker.privileged.enabled = true\n  }\n}\n\ntelemetry {\n    publish_allocation_metrics = true\n    publish_node_metrics = true\n    prometheus_metrics = true\n}\n\nconsul {\n    address = \"127.0.0.1:8500\"\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/client.hcl\nchmod 0644 /etc/nomad.d/client.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/vault.hcl\nvault {\n    enabled = true\n    address = \"https://vault.service.protoconf.sh:8200\"\n    create_from_role = \"nomad-cluster\"\n    ca_file = \"/usr/local/share/ca-certificates/protoconf.crt\"\n    cert_file = \"/etc/nomad.d/tls/cert.pem\"\n    key_file = \"/etc/nomad.d/tls/key.pem\"\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/vault.hcl\nchmod 0644 /etc/nomad.d/vault.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/server.hcl\nserver {\n  enabled = true\n  bootstrap_expect = 3\n  encrypt = \"${random_id.nomad_encrypt.b64_std}\"\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/server.hcl\nchmod 0644 /etc/nomad.d/server.hcl\nmkdir -p /etc/nomad.d/files\nchown root:root /etc/nomad.d/files\nchmod 0755 /etc/nomad.d/files\nmkdir -p /etc/nomad.d/scripts\nchown root:root /etc/nomad.d/scripts\nchmod 0755 /etc/nomad.d/scripts\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/files/nomad-server-policy.hcl\n# Allow creating tokens under \"nomad-cluster\" role. The role name should be\n# updated if \"nomad-cluster\" is not used.\npath \"auth/token/create/nomad-cluster\" {\n  capabilities = [\"update\"]\n}\n\n# Allow looking up \"nomad-cluster\" role. The role name should be updated if\n# \"nomad-cluster\" is not used.\npath \"auth/token/roles/nomad-cluster\" {\n  capabilities = [\"read\"]\n}\n\n# Allow looking up the token passed to Nomad to validate the token has the\n# proper capabilities. This is provided by the \"default\" policy.\npath \"auth/token/lookup-self\" {\n  capabilities = [\"read\"]\n}\n\n# Allow looking up incoming tokens to validate they have permissions to access\n# the tokens they are requesting. This is only required if\n# `allow_unauthenticated` is set to false.\npath \"auth/token/lookup\" {\n  capabilities = [\"update\"]\n}\n\n# Allow revoking tokens that should no longer exist. This allows revoking\n# tokens for dead tasks.\npath \"auth/token/revoke-accessor\" {\n  capabilities = [\"update\"]\n}\n\n# Allow checking the capabilities of our own token. This is used to validate the\n# token upon startup.\npath \"sys/capabilities-self\" {\n  capabilities = [\"update\"]\n}\n\n# Allow our own token to be renewed.\npath \"auth/token/renew-self\" {\n  capabilities = [\"update\"]\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/files/nomad-server-policy.hcl\nchmod 0644 /etc/nomad.d/files/nomad-server-policy.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/files/nomad-cluster-role.json\n{\n  \"disallowed_policies\": \"nomad-server\",\n  \"explicit_max_ttl\": 0,\n  \"name\": \"nomad-cluster\",\n  \"orphan\": true,\n  \"period\": 259200,\n  \"renewable\": true\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/files/nomad-cluster-role.json\nchmod 0644 /etc/nomad.d/files/nomad-cluster-role.json\ncat <<FILE_CONTENT | base64 -d | tee /etc/nomad.d/scripts/before_nomad.sh\nIyEvYmluL2Jhc2gKCnNldCAtZQoKIyBUaGlzIHNjcmlwdCB3aWxsOgojIDEuIFZhbGlkYXRlIHZhdWx0IGlzIHJ1bm5pbmcgKGVpdGhlciBsb2NhbGx5IG9yIGdsb2JhbGx5KQojIDIuIFJldHJpdmUgdGhlIHJvb3QgdG9rZW4gZnJvbSBjb25zdWwKIyAzLiBJbnN0YWxsIHJvbGUgYW5kIHBvbGljeSBmb3Igbm9tYWQKIyA0LiBDcmVhdGUgYSBuZXcgdG9rZW4gZm9yIG5vbWFkIHNlcnZlciBhbmQgd2lsbCB3cml0ZSBpdCB0byB0aGUgZW52IGZpbGUKCnZhbGlkYXRlX3ZhdWx0KCl7CiAgICBleHBvcnQgVkFVTFRfQUREUj1odHRwczovLzEyNy4wLjAuMTo4MjAwCiAgICBpZiBjdXJsIC1zICRWQVVMVF9BRERSL3YxL3N5cy9oZWFsdGggPiAvZGV2L251bGw7IHRoZW4KICAgICAgICByZXR1cm4KICAgIGZpCiAgICBleHBvcnQgVkFVTFRfQUREUj1odHRwczovL3ZhdWx0LnNlcnZpY2UucHJvdG9jb25mLnNoOjgyMDAKICAgIGlmIGN1cmwgLXMgJFZBVUxUX0FERFIvdjEvc3lzL2hlYWx0aCA+IC9kZXYvbnVsbDsgdGhlbgogICAgICAgIHJldHVybgogICAgZmkKCiAgICBlY2hvICJWYXVsdCBpcyBub3QgcnVubmluZyBwcm9wZXJseSIKICAgIGV4aXQgMQp9CgpnZXRfcm9vdF90b2tlbigpewogICAgZXhwb3J0IFZBVUxUX1RPS0VOPSQoY29uc3VsIGt2IGdldCB2YXVsdF9pbml0IHwgb3BlbnNzbCBhZXMtMjU2LWNiYyAtZCAtYSAta2ZpbGUgL2V0Yy92YXVsdC5kL3Rscy9jb25zdWxfZW5jcnlwdC5rZXkgfCBqcSAtciAnLnJvb3RfdG9rZW4nKQp9CgppbnN0YWxsX3JvbGVfYW5kX3BvbGljeSgpewogICAgdmF1bHQgcG9saWN5IHdyaXRlIG5vbWFkLXNlcnZlciAvZXRjL25vbWFkLmQvZmlsZXMvbm9tYWQtc2VydmVyLXBvbGljeS5oY2wKICAgIHZhdWx0IHdyaXRlIC9hdXRoL3Rva2VuL3JvbGVzL25vbWFkLWNsdXN0ZXIgQC9ldGMvbm9tYWQuZC9maWxlcy9ub21hZC1jbHVzdGVyLXJvbGUuanNvbgp9Cgp3cml0ZV90b2tlbl90b19lbnZfZmlsZSgpIHsKICAgIG5vbWFkX3Rva2VuPSQodmF1bHQgdG9rZW4gY3JlYXRlIC1wb2xpY3kgbm9tYWQtc2VydmVyICAtb3JwaGFuICAtZm9ybWF0PWpzb258IGpxIC1yICcuYXV0aC5jbGllbnRfdG9rZW4nKQogICAgZWNobyAiVkFVTFRfVE9LRU49JHtub21hZF90b2tlbn0iIHwgdGVlIC9ldGMvbm9tYWQuZC9lbnYKfQoKbWFpbigpewogICAgdmFsaWRhdGVfdmF1bHQKICAgIGdldF9yb290X3Rva2VuCiAgICBpbnN0YWxsX3JvbGVfYW5kX3BvbGljeQogICAgd3JpdGVfdG9rZW5fdG9fZW52X2ZpbGUKfQoKbWFpbgo=\nFILE_CONTENT\nchown root:root /etc/nomad.d/scripts/before_nomad.sh\nchmod 0755 /etc/nomad.d/scripts/before_nomad.sh\n/etc/nomad.d/scripts/before_nomad.sh\nmkdir -p /etc/nomad.d/tls\nchown root:root /etc/nomad.d/tls\nchmod 0755 /etc/nomad.d/tls\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/tls/key.pem\n${tls_private_key.server-1-lon1-c01-nomad.private_key_pem}\nFILE_CONTENT\nchown root:root /etc/nomad.d/tls/key.pem\nchmod 600 /etc/nomad.d/tls/key.pem\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/tls/cert.pem\n${tls_locally_signed_cert.server-1-lon1-c01-nomad.cert_pem}\nFILE_CONTENT\nchown root:root /etc/nomad.d/tls/cert.pem\nchmod 0644 /etc/nomad.d/tls/cert.pem\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/tls.hcl\ntls {\n  http = true\n  rpc  = true\n\n  ca_file   = \"/usr/local/share/ca-certificates/protoconf.crt\"\n  cert_file = \"/etc/nomad.d/tls/cert.pem\"\n  key_file  = \"/etc/nomad.d/tls/key.pem\"\n\n  verify_server_hostname = false\n  verify_https_client    = false\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/tls.hcl\nchmod 0644 /etc/nomad.d/tls.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/99-additional-configs.hcl\nadvertise {\n    http = \"{{GetPublicIP}}\"\n    rpc = \"{{GetPublicIP}}\"\n    serf = \"{{GetPublicIP}}\"\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/99-additional-configs.hcl\nchmod 0644 /etc/nomad.d/99-additional-configs.hcl\ncat <<FILE_CONTENT | cat | tee /etc/systemd/system/nomad.service\n[Unit]\nDescription=nomad\nDocumentation=http://localhost\n[Service]\nEnvironmentFile=/etc/nomad.d/env\nExecReload=/bin/kill -HUP $MAINPID\nExecStart=/usr/local/bin/nomad agent -config /etc/nomad.d\nExecStartPre=/etc/nomad.d/scripts/before_nomad.sh\nKillMode=process\nKillSignal=SIGINT\nLimitNOFILE=infinity\nLimitNPROC=infinity\nRestart=on-failure\nRestartSec=2\nStartLimitBurst=3\nStartLimitIntervalSec=10\nTasksMax=infinity\n[Install]\nWantedBy=multi-user.target\nFILE_CONTENT\nchown root:root /etc/systemd/system/nomad.service\nchmod 0644 /etc/systemd/system/nomad.service\nsystemctl start nomad\nsystemctl enable nomad\ncurl -fsSL https://github.com/protoconf/protoconf/releases/download/0.1.1/protoconf-linux-0.1.1.tar.gz -o /tmp/protoconf-linux-0.1.1.tar.gz\ntar -xvf /tmp/protoconf-linux-0.1.1.tar.gz -C /usr/local/bin",
        "lifecycle": {
          "create_before_destroy": true,
          "ignore_changes": [
            "user_data"
          ]
        }
      },
      "server-2-ams3-c01": {
        "image": "ubuntu-18-04-x64",
        "name": "${random_pet.server-2-ams3-c01.id}",
        "private_networking": true,
        "region": "ams3",
        "size": "s-2vcpu-4gb",
        "ssh_keys": [
          "${digitalocean_ssh_key.smintz-0.id}"
        ],
        "tags": [
          "server",
          "c01"
        ],
        "user_data": "#!/bin/bash\napt-get update\napt-get install -y unzip curl jq dnsutils\nuseradd --system --home /etc/consul.d --shell /bin/false consul\nmkdir -p /etc/consul.d\nchown root:root /etc/consul.d\nchmod 0755 /etc/consul.d\nmkdir -p /opt/consul\nchown consul:consul /opt/consul\nchmod 0755 /opt/consul\ncurl -L https://releases.hashicorp.com/consul/1.7.1/consul_1.7.1_linux_amd64.zip -o /tmp/consul-1.7.1.zip\nchown root:root /tmp/consul-1.7.1.zip\nchmod 0644 /tmp/consul-1.7.1.zip\nunzip -x /tmp/consul-1.7.1.zip -d /usr/local/bin\nrm /tmp/consul-1.7.1.zip\nconsul -autocomplete-install\ncomplete -C /usr/local/bin/consul consul\ncat <<FILE_CONTENT | cat | tee /etc/systemd/network/consul0.netdev\n# Creates a \"dummy\" network interface\n# we'll configure this interface with a link-local address\n# See: https://www.freedesktop.org/software/systemd/man/systemd.netdev.html\n##\n\n[NetDev]\nName=consul0\nKind=dummy\n\nFILE_CONTENT\nchown root:root /etc/systemd/network/consul0.netdev\nchmod 0644 /etc/systemd/network/consul0.netdev\ncat <<FILE_CONTENT | cat | tee /etc/systemd/network/consul0.network\n# We \"find\" the dummy0 interface we created and configure it with a link-local address\n# See: https://www.freedesktop.org/software/systemd/man/systemd.network.html\n##\n[Match]\nName=consul0\n\n[Network]\nAddress=169.254.1.1/32\n\n# We want these domains\nDomains= ~protoconf.sh.\n\n# To go to the consul DNS server we'll bind to this address\nDNS=169.254.1.1\n\nFILE_CONTENT\nchown root:root /etc/systemd/network/consul0.network\nchmod 0644 /etc/systemd/network/consul0.network\nsystemctl restart systemd-networkd\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/config.hcl\nui = true\nbind_addr = \"0.0.0.0\"\nadvertise_addr = \"{{GetPublicIP}}\"\ndatacenter = \"ams3c01\"\ndata_dir = \"/opt/consul\"\ndomain = \"protoconf.sh\"\nFILE_CONTENT\nchown consul:consul /etc/consul.d/config.hcl\nchmod 0640 /etc/consul.d/config.hcl\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/server.hcl\nserver = true\nbootstrap_expect = 3\nFILE_CONTENT\nchown consul:consul /etc/consul.d/server.hcl\nchmod 0640 /etc/consul.d/server.hcl\ncat <<FILE_CONTENT | cat | tee /usr/local/share/ca-certificates/protoconf.crt\n${tls_self_signed_cert.root.cert_pem}\nFILE_CONTENT\nchown root:root /usr/local/share/ca-certificates/protoconf.crt\nchmod 0644 /usr/local/share/ca-certificates/protoconf.crt\nupdate-ca-certificates\nmkdir -p /etc/consul.d/tls\nchown root:root /etc/consul.d/tls\nchmod 0755 /etc/consul.d/tls\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/tls/key.pem\n${tls_private_key.server-2-ams3-c01-consul.private_key_pem}\nFILE_CONTENT\nchown consul:consul /etc/consul.d/tls/key.pem\nchmod 600 /etc/consul.d/tls/key.pem\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/tls/cert.pem\n${tls_locally_signed_cert.server-2-ams3-c01-consul.cert_pem}\nFILE_CONTENT\nchown consul:consul /etc/consul.d/tls/cert.pem\nchmod 0644 /etc/consul.d/tls/cert.pem\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/tls.hcl\nkey_file = \"/etc/consul.d/tls/key.pem\"\ncert_file = \"/etc/consul.d/tls/cert.pem\"\nca_file = \"/usr/local/share/ca-certificates/protoconf.crt\"\naddresses {\n    https = \"0.0.0.0\"\n    dns = \"169.254.1.1\"\n}\nports {\n    https = 8501\n    dns = 53\n}\nencrypt = \"${random_id.consul_encrypt.b64_std}\"\nrecursors = [\"127.0.0.53\"]\n\nFILE_CONTENT\nchown root:root /etc/consul.d/tls.hcl\nchmod 0644 /etc/consul.d/tls.hcl\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/join_lan.hcl\nretry_join = [\"provider=digitalocean api_token=${var.digitalocean_token} region=ams3 tag_name=server\"]\nFILE_CONTENT\nchown consul:consul /etc/consul.d/join_lan.hcl\nchmod 0640 /etc/consul.d/join_lan.hcl\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/join_wan.hcl\nretry_join_wan = [\"provider=digitalocean api_token=${var.digitalocean_token} tag_name=server\",\"wan.protoconf.com\"]\nFILE_CONTENT\nchown consul:consul /etc/consul.d/join_wan.hcl\nchmod 0640 /etc/consul.d/join_wan.hcl\ncat <<FILE_CONTENT | cat | tee /etc/systemd/system/consul.service\n[Unit]\nAfter=network-online.target\nDescription=HashiCorp Consul - A service mesh solution\nDocumentation=https://www.consul.io/\nRequires=network-online.target\n[Service]\nAmbientCapabilities=CAP_NET_BIND_SERVICE\nExecReload=/usr/local/bin/consul reload\nExecStart=/usr/local/bin/consul agent -config-dir=/etc/consul.d/\nGroup=consul\nKillMode=process\nLimitNOFILE=65536\nRestart=on-failure\nType=notify\nUser=consul\n[Install]\nWantedBy=multi-user.target\nFILE_CONTENT\nchown root:root /etc/systemd/system/consul.service\nchmod 0644 /etc/systemd/system/consul.service\nsystemctl start consul\nsystemctl enable consul\ncurl -L https://releases.hashicorp.com/vault/1.3.2/vault_1.3.2_linux_amd64.zip -o /tmp/vault-1.3.2.zip\nchown root:root /tmp/vault-1.3.2.zip\nchmod 0644 /tmp/vault-1.3.2.zip\nunzip -x /tmp/vault-1.3.2.zip -d /usr/local/bin\nrm /tmp/vault-1.3.2.zip\nvault -autocomplete-install\nsetcap cap_ipc_lock=+ep /usr/local/bin/vault\nuseradd --system --home /etc/vault.d --shell /bin/false vault\nmkdir -p /etc/vault.d\nchown vault:vault /etc/vault.d\nchmod 0755 /etc/vault.d\nmkdir -p /etc/vault.d/tls\nchown vault:vault /etc/vault.d/tls\nchmod 700 /etc/vault.d/tls\ncat <<FILE_CONTENT | cat | tee /etc/vault.d/tls/key.pem\n${tls_private_key.server-2-ams3-c01-vault.private_key_pem}\nFILE_CONTENT\nchown vault:vault /etc/vault.d/tls/key.pem\nchmod 600 /etc/vault.d/tls/key.pem\ncat <<FILE_CONTENT | cat | tee /etc/vault.d/tls/cert.pem\n${tls_locally_signed_cert.server-2-ams3-c01-vault.cert_pem}\nFILE_CONTENT\nchown vault:vault /etc/vault.d/tls/cert.pem\nchmod 0644 /etc/vault.d/tls/cert.pem\ncat <<FILE_CONTENT | cat | tee /etc/vault.d/tls/consul_encrypt.key\n${tls_private_key.consul-encrypt.private_key_pem}\nFILE_CONTENT\nchown vault:vault /etc/vault.d/tls/consul_encrypt.key\nchmod 0600 /etc/vault.d/tls/consul_encrypt.key\ncat <<FILE_CONTENT | cat | tee /etc/vault.d/vault.hcl\nui = true\nstorage \"consul\" {\n    path = \"vault/\"\n}\nlistener \"tcp\" {\n  address       = \"0.0.0.0:8200\"\n  tls_cert_file = \"/etc/vault.d/tls/cert.pem\"\n  tls_key_file  = \"/etc/vault.d/tls/key.pem\"\n}\n\nFILE_CONTENT\nchown root:root /etc/vault.d/vault.hcl\nchmod 0644 /etc/vault.d/vault.hcl\nmkdir -p /etc/vault.d/scripts\nchown vault:vault /etc/vault.d/scripts\nchmod 0755 /etc/vault.d/scripts\ncat <<FILE_CONTENT | base64 -d | tee /etc/vault.d/scripts/post_start.sh\nIyEvYmluL2Jhc2gKCiMgVGhpcyBzY3JpcHQgd2lsbCBydW4gYWZ0ZXIgZXZlcnkgdGltZSB2YXVsdCBpcyBzdGFydGVkLiBJdCB3aWxsIHRyeSB0bzoKIyAxLiBWYWxpZGF0ZSBpZiB2YXVsdCBpcyBpbml0aWFsaXplZAojIDEuMS4gaW5pdGlhbGl6ZSB2YXVsdCBhbmQgc2F2ZSB0aGUgdW5zZWFsIGtleXMgaW4gL3Jvb3QvdmF1bHRfa2V5cy5qc29uCiMgMS4yLiB3cml0ZSB0aGUgcm9vdCB0b2tlbiBpbnRvIC9yb290Ly52YXVsdC10b2tlbgojIDIuIENoZWNrIGlmIHZhdWx0IGlzIHNlYWxlZAojIDIuMS4gVmFsaWRhdGUgL3Jvb3QvdmF1bHRfa2V5cy5qc29uIGhhcyB1bnNlYWwga2V5cwojIDIuMi4gVW5zZWFsIHZhdWx0CgpleHBvcnQgVkFVTFRfQUREUj1odHRwczovLzEyNy4wLjAuMTo4MjAwCmV4cG9ydCBLRVlTX0ZJTEU9L3RtcC92YXVsdF9rZXlzLmpzb24KCnZhdWx0X2lzX2luaXRpYWxpemVkKCkgewogIGN1cmwgLXMgJFZBVUxUX0FERFIvdjEvc3lzL2luaXQgfCBqcSAtZSAuaW5pdGlhbGl6ZWQgPiAvZGV2L251bGwKICByZXR1cm4gJD8KfQoKdmF1bHRfaXNfc2VhbGVkKCkgewogIGN1cmwgLXMgJFZBVUxUX0FERFIvdjEvc3lzL2hlYWx0aCB8IGpxIC1lIC5zZWFsZWQgPiAvZGV2L251bGwKICByZXR1cm4gJD8KfQoKaW5pdGlhbGl6ZV92YXVsdCgpIHsKICBjdXJsIC1zICRWQVVMVF9BRERSL3YxL3N5cy9pbml0IC1YIFBVVCAtZCAneyJzZWNyZXRfc2hhcmVzIjogMywgInNlY3JldF90aHJlc2hvbGQiOiAzfScgPiAkS0VZU19GSUxFCiAgcmV0dmFsPSQ/CiAgcmV0dXJuICRyZXR2YWwKfQoKdmF1bHRfcm9vdF9sb2dpbigpIHsKICBjYXQgJEtFWVNfRklMRSB8IGpxIC1yIC5yb290X3Rva2VuID4gL3RtcC8udmF1bHQtdG9rZW4KfQoKdW5zZWFsX3ZhdWx0KCkgewogIGlmIGpxIC1lICIoLmtleXMgfCBsZW5ndGgpID4gMCIgJEtFWVNfRklMRTsgdGhlbgogICAgY29uc3VsIGt2IHB1dCB2YXVsdF9pbml0IEA8KG9wZW5zc2wgYWVzLTI1Ni1jYmMgLWEgLXNhbHQgLWluICR7S0VZU19GSUxFfSAta2ZpbGUgL2V0Yy92YXVsdC5kL3Rscy9jb25zdWxfZW5jcnlwdC5rZXkpCiAgZWxzZQogICAgZWNobyAiTWlzc2luZyBrZXlzIGluICRLRVlTX0ZJTEUiCiAgICBjb25zdWwga3YgZ2V0IHZhdWx0X2luaXQgfCBvcGVuc3NsIGFlcy0yNTYtY2JjIC1kIC1hIC1rZmlsZSAvZXRjL3ZhdWx0LmQvdGxzL2NvbnN1bF9lbmNyeXB0LmtleSA+ICR7S0VZU19GSUxFfQogIGZpCiAgQ09VTlRFUj0wCiAgd2hpbGUgdmF1bHRfaXNfc2VhbGVkOyBkbwogICAgX2tleT0kKGNhdCAkS0VZU19GSUxFIHwganEgLXIgIi5rZXlzWyR7Q09VTlRFUn1dIikKICAgIENPVU5URVI9JCgoJHtDT1VOVEVSfSsxKSkKICAgIGN1cmwgLXMgJFZBVUxUX0FERFIvdjEvc3lzL3Vuc2VhbCAtWCBQVVQgLWQgIntcImtleVwiOlwiJHtfa2V5fVwifSIKICBkb25lCn0KCnZhdWx0X2lzX3VwKCkgewogIGN1cmwgLXMgJFZBVUxUX0FERFIvdjEvc3lzL2hlYWx0aCA+IC9kZXYvbnVsbAp9Cgp3YWl0X2Zvcl92YXVsdF9zZXJ2ZXIoKSB7CiAgVElNRU9VVF9TRUNPTkRTPSR7MTotNjB9CiAgVElNRU9VVF9USU1FPSQoKCAke1RJTUVPVVRfU0VDT05EU30gKyAkKGRhdGUgKyVzKSApKQogIHVudGlsIHZhdWx0X2lzX3VwOyBkbwogICAgWyAkKGRhdGUgKyVzKSAtbHQgJHtUSU1FT1VUX1RJTUV9IF0gfHwgZXhpdCAyCiAgICBzbGVlcCAxCiAgZG9uZQp9CgptYWluKCkgewogIHdhaXRfZm9yX3ZhdWx0X3NlcnZlcgogIHZhdWx0X2lzX2luaXRpYWxpemVkIHx8IGluaXRpYWxpemVfdmF1bHQKICB1bnNlYWxfdmF1bHQgfHwgZXhpdCAwCiAgdmF1bHRfcm9vdF9sb2dpbgp9CgptYWluCg==\nFILE_CONTENT\nchown vault:vault /etc/vault.d/scripts/post_start.sh\nchmod 0755 /etc/vault.d/scripts/post_start.sh\ncat <<FILE_CONTENT | cat | tee /etc/systemd/system/vault.service\n[Unit]\nDescription=vault\nDocumentation=http://localhost\n[Service]\nAmbientCapabilities=CAP_IPC_LOCK\nCapabilities=CAP_IPC_LOCK+ep\nCapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK\nExecReload=/bin/kill --signal HUP $MAINPID\nExecStart=/usr/local/bin/vault server -config=/etc/vault.d/vault.hcl\nExecStartPost=/etc/vault.d/scripts/post_start.sh\nGroup=vault\nKillMode=process\nKillSignal=SIGINT\nLimitMEMLOCK=infinity\nLimitNOFILE=65536\nNoNewPrivileges=yes\nPrivateDevices=yes\nPrivateTmp=yes\nProtectHome=read-only\nProtectSystem=full\nRestart=on-failure\nRestartSec=5\nSecureBits=keep-caps\nTimeoutStopSec=30\nUser=vault\n[Install]\nWantedBy=multi-user.target\nFILE_CONTENT\nchown root:root /etc/systemd/system/vault.service\nchmod 0644 /etc/systemd/system/vault.service\nsystemctl start vault\nsystemctl enable vault\napt-get install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo add-apt-repository  \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" \napt-get update\napt-get install -y docker-ce docker-ce-cli containerd.io\nmkdir -p /etc/nomad.d\nchown root:root /etc/nomad.d\nchmod 700 /etc/nomad.d\nmkdir -p /opt/nomad\nchown root:root /opt/nomad\nchmod 0755 /opt/nomad\ncurl -L https://releases.hashicorp.com/nomad/0.10.4/nomad_0.10.4_linux_amd64.zip -o /tmp/nomad-0.10.4.zip\nchown root:root /tmp/nomad-0.10.4.zip\nchmod 0644 /tmp/nomad-0.10.4.zip\nunzip -x /tmp/nomad-0.10.4.zip -d /usr/local/bin\nrm /tmp/nomad-0.10.4.zip\nnomad -autocomplete-install\ncomplete -C /usr/local/bin/nomad nomad\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/nomad.hcl\ndata_dir = \"/opt/nomad\"\nFILE_CONTENT\nchown root:root /etc/nomad.d/nomad.hcl\nchmod 0644 /etc/nomad.d/nomad.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/datacenter.hcl\ndatacenter = \"ams3c01\"\nFILE_CONTENT\nchown root:root /etc/nomad.d/datacenter.hcl\nchmod 0644 /etc/nomad.d/datacenter.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/client.hcl\nclient {\n  enabled = true\n  node_class = \"server\"\n  meta {\n      tier = \"server\"\n  }\n  options {\n      driver.raw_exec.enabled = 1\n      docker.privileged.enabled = true\n  }\n}\n\ntelemetry {\n    publish_allocation_metrics = true\n    publish_node_metrics = true\n    prometheus_metrics = true\n}\n\nconsul {\n    address = \"127.0.0.1:8500\"\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/client.hcl\nchmod 0644 /etc/nomad.d/client.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/vault.hcl\nvault {\n    enabled = true\n    address = \"https://vault.service.protoconf.sh:8200\"\n    create_from_role = \"nomad-cluster\"\n    ca_file = \"/usr/local/share/ca-certificates/protoconf.crt\"\n    cert_file = \"/etc/nomad.d/tls/cert.pem\"\n    key_file = \"/etc/nomad.d/tls/key.pem\"\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/vault.hcl\nchmod 0644 /etc/nomad.d/vault.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/server.hcl\nserver {\n  enabled = true\n  bootstrap_expect = 3\n  encrypt = \"${random_id.nomad_encrypt.b64_std}\"\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/server.hcl\nchmod 0644 /etc/nomad.d/server.hcl\nmkdir -p /etc/nomad.d/files\nchown root:root /etc/nomad.d/files\nchmod 0755 /etc/nomad.d/files\nmkdir -p /etc/nomad.d/scripts\nchown root:root /etc/nomad.d/scripts\nchmod 0755 /etc/nomad.d/scripts\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/files/nomad-server-policy.hcl\n# Allow creating tokens under \"nomad-cluster\" role. The role name should be\n# updated if \"nomad-cluster\" is not used.\npath \"auth/token/create/nomad-cluster\" {\n  capabilities = [\"update\"]\n}\n\n# Allow looking up \"nomad-cluster\" role. The role name should be updated if\n# \"nomad-cluster\" is not used.\npath \"auth/token/roles/nomad-cluster\" {\n  capabilities = [\"read\"]\n}\n\n# Allow looking up the token passed to Nomad to validate the token has the\n# proper capabilities. This is provided by the \"default\" policy.\npath \"auth/token/lookup-self\" {\n  capabilities = [\"read\"]\n}\n\n# Allow looking up incoming tokens to validate they have permissions to access\n# the tokens they are requesting. This is only required if\n# `allow_unauthenticated` is set to false.\npath \"auth/token/lookup\" {\n  capabilities = [\"update\"]\n}\n\n# Allow revoking tokens that should no longer exist. This allows revoking\n# tokens for dead tasks.\npath \"auth/token/revoke-accessor\" {\n  capabilities = [\"update\"]\n}\n\n# Allow checking the capabilities of our own token. This is used to validate the\n# token upon startup.\npath \"sys/capabilities-self\" {\n  capabilities = [\"update\"]\n}\n\n# Allow our own token to be renewed.\npath \"auth/token/renew-self\" {\n  capabilities = [\"update\"]\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/files/nomad-server-policy.hcl\nchmod 0644 /etc/nomad.d/files/nomad-server-policy.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/files/nomad-cluster-role.json\n{\n  \"disallowed_policies\": \"nomad-server\",\n  \"explicit_max_ttl\": 0,\n  \"name\": \"nomad-cluster\",\n  \"orphan\": true,\n  \"period\": 259200,\n  \"renewable\": true\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/files/nomad-cluster-role.json\nchmod 0644 /etc/nomad.d/files/nomad-cluster-role.json\ncat <<FILE_CONTENT | base64 -d | tee /etc/nomad.d/scripts/before_nomad.sh\nIyEvYmluL2Jhc2gKCnNldCAtZQoKIyBUaGlzIHNjcmlwdCB3aWxsOgojIDEuIFZhbGlkYXRlIHZhdWx0IGlzIHJ1bm5pbmcgKGVpdGhlciBsb2NhbGx5IG9yIGdsb2JhbGx5KQojIDIuIFJldHJpdmUgdGhlIHJvb3QgdG9rZW4gZnJvbSBjb25zdWwKIyAzLiBJbnN0YWxsIHJvbGUgYW5kIHBvbGljeSBmb3Igbm9tYWQKIyA0LiBDcmVhdGUgYSBuZXcgdG9rZW4gZm9yIG5vbWFkIHNlcnZlciBhbmQgd2lsbCB3cml0ZSBpdCB0byB0aGUgZW52IGZpbGUKCnZhbGlkYXRlX3ZhdWx0KCl7CiAgICBleHBvcnQgVkFVTFRfQUREUj1odHRwczovLzEyNy4wLjAuMTo4MjAwCiAgICBpZiBjdXJsIC1zICRWQVVMVF9BRERSL3YxL3N5cy9oZWFsdGggPiAvZGV2L251bGw7IHRoZW4KICAgICAgICByZXR1cm4KICAgIGZpCiAgICBleHBvcnQgVkFVTFRfQUREUj1odHRwczovL3ZhdWx0LnNlcnZpY2UucHJvdG9jb25mLnNoOjgyMDAKICAgIGlmIGN1cmwgLXMgJFZBVUxUX0FERFIvdjEvc3lzL2hlYWx0aCA+IC9kZXYvbnVsbDsgdGhlbgogICAgICAgIHJldHVybgogICAgZmkKCiAgICBlY2hvICJWYXVsdCBpcyBub3QgcnVubmluZyBwcm9wZXJseSIKICAgIGV4aXQgMQp9CgpnZXRfcm9vdF90b2tlbigpewogICAgZXhwb3J0IFZBVUxUX1RPS0VOPSQoY29uc3VsIGt2IGdldCB2YXVsdF9pbml0IHwgb3BlbnNzbCBhZXMtMjU2LWNiYyAtZCAtYSAta2ZpbGUgL2V0Yy92YXVsdC5kL3Rscy9jb25zdWxfZW5jcnlwdC5rZXkgfCBqcSAtciAnLnJvb3RfdG9rZW4nKQp9CgppbnN0YWxsX3JvbGVfYW5kX3BvbGljeSgpewogICAgdmF1bHQgcG9saWN5IHdyaXRlIG5vbWFkLXNlcnZlciAvZXRjL25vbWFkLmQvZmlsZXMvbm9tYWQtc2VydmVyLXBvbGljeS5oY2wKICAgIHZhdWx0IHdyaXRlIC9hdXRoL3Rva2VuL3JvbGVzL25vbWFkLWNsdXN0ZXIgQC9ldGMvbm9tYWQuZC9maWxlcy9ub21hZC1jbHVzdGVyLXJvbGUuanNvbgp9Cgp3cml0ZV90b2tlbl90b19lbnZfZmlsZSgpIHsKICAgIG5vbWFkX3Rva2VuPSQodmF1bHQgdG9rZW4gY3JlYXRlIC1wb2xpY3kgbm9tYWQtc2VydmVyICAtb3JwaGFuICAtZm9ybWF0PWpzb258IGpxIC1yICcuYXV0aC5jbGllbnRfdG9rZW4nKQogICAgZWNobyAiVkFVTFRfVE9LRU49JHtub21hZF90b2tlbn0iIHwgdGVlIC9ldGMvbm9tYWQuZC9lbnYKfQoKbWFpbigpewogICAgdmFsaWRhdGVfdmF1bHQKICAgIGdldF9yb290X3Rva2VuCiAgICBpbnN0YWxsX3JvbGVfYW5kX3BvbGljeQogICAgd3JpdGVfdG9rZW5fdG9fZW52X2ZpbGUKfQoKbWFpbgo=\nFILE_CONTENT\nchown root:root /etc/nomad.d/scripts/before_nomad.sh\nchmod 0755 /etc/nomad.d/scripts/before_nomad.sh\n/etc/nomad.d/scripts/before_nomad.sh\nmkdir -p /etc/nomad.d/tls\nchown root:root /etc/nomad.d/tls\nchmod 0755 /etc/nomad.d/tls\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/tls/key.pem\n${tls_private_key.server-2-ams3-c01-nomad.private_key_pem}\nFILE_CONTENT\nchown root:root /etc/nomad.d/tls/key.pem\nchmod 600 /etc/nomad.d/tls/key.pem\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/tls/cert.pem\n${tls_locally_signed_cert.server-2-ams3-c01-nomad.cert_pem}\nFILE_CONTENT\nchown root:root /etc/nomad.d/tls/cert.pem\nchmod 0644 /etc/nomad.d/tls/cert.pem\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/tls.hcl\ntls {\n  http = true\n  rpc  = true\n\n  ca_file   = \"/usr/local/share/ca-certificates/protoconf.crt\"\n  cert_file = \"/etc/nomad.d/tls/cert.pem\"\n  key_file  = \"/etc/nomad.d/tls/key.pem\"\n\n  verify_server_hostname = false\n  verify_https_client    = false\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/tls.hcl\nchmod 0644 /etc/nomad.d/tls.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/99-additional-configs.hcl\nadvertise {\n    http = \"{{GetPublicIP}}\"\n    rpc = \"{{GetPublicIP}}\"\n    serf = \"{{GetPublicIP}}\"\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/99-additional-configs.hcl\nchmod 0644 /etc/nomad.d/99-additional-configs.hcl\ncat <<FILE_CONTENT | cat | tee /etc/systemd/system/nomad.service\n[Unit]\nDescription=nomad\nDocumentation=http://localhost\n[Service]\nEnvironmentFile=/etc/nomad.d/env\nExecReload=/bin/kill -HUP $MAINPID\nExecStart=/usr/local/bin/nomad agent -config /etc/nomad.d\nExecStartPre=/etc/nomad.d/scripts/before_nomad.sh\nKillMode=process\nKillSignal=SIGINT\nLimitNOFILE=infinity\nLimitNPROC=infinity\nRestart=on-failure\nRestartSec=2\nStartLimitBurst=3\nStartLimitIntervalSec=10\nTasksMax=infinity\n[Install]\nWantedBy=multi-user.target\nFILE_CONTENT\nchown root:root /etc/systemd/system/nomad.service\nchmod 0644 /etc/systemd/system/nomad.service\nsystemctl start nomad\nsystemctl enable nomad\ncurl -fsSL https://github.com/protoconf/protoconf/releases/download/0.1.1/protoconf-linux-0.1.1.tar.gz -o /tmp/protoconf-linux-0.1.1.tar.gz\ntar -xvf /tmp/protoconf-linux-0.1.1.tar.gz -C /usr/local/bin",
        "lifecycle": {
          "create_before_destroy": true,
          "ignore_changes": [
            "user_data"
          ]
        }
      },
      "server-2-lon1-c01": {
        "image": "ubuntu-18-04-x64",
        "name": "${random_pet.server-2-lon1-c01.id}",
        "private_networking": true,
        "region": "lon1",
        "size": "s-2vcpu-4gb",
        "ssh_keys": [
          "${digitalocean_ssh_key.smintz-0.id}"
        ],
        "tags": [
          "server",
          "c01"
        ],
        "user_data": "#!/bin/bash\napt-get update\napt-get install -y unzip curl jq dnsutils\nuseradd --system --home /etc/consul.d --shell /bin/false consul\nmkdir -p /etc/consul.d\nchown root:root /etc/consul.d\nchmod 0755 /etc/consul.d\nmkdir -p /opt/consul\nchown consul:consul /opt/consul\nchmod 0755 /opt/consul\ncurl -L https://releases.hashicorp.com/consul/1.7.1/consul_1.7.1_linux_amd64.zip -o /tmp/consul-1.7.1.zip\nchown root:root /tmp/consul-1.7.1.zip\nchmod 0644 /tmp/consul-1.7.1.zip\nunzip -x /tmp/consul-1.7.1.zip -d /usr/local/bin\nrm /tmp/consul-1.7.1.zip\nconsul -autocomplete-install\ncomplete -C /usr/local/bin/consul consul\ncat <<FILE_CONTENT | cat | tee /etc/systemd/network/consul0.netdev\n# Creates a \"dummy\" network interface\n# we'll configure this interface with a link-local address\n# See: https://www.freedesktop.org/software/systemd/man/systemd.netdev.html\n##\n\n[NetDev]\nName=consul0\nKind=dummy\n\nFILE_CONTENT\nchown root:root /etc/systemd/network/consul0.netdev\nchmod 0644 /etc/systemd/network/consul0.netdev\ncat <<FILE_CONTENT | cat | tee /etc/systemd/network/consul0.network\n# We \"find\" the dummy0 interface we created and configure it with a link-local address\n# See: https://www.freedesktop.org/software/systemd/man/systemd.network.html\n##\n[Match]\nName=consul0\n\n[Network]\nAddress=169.254.1.1/32\n\n# We want these domains\nDomains= ~protoconf.sh.\n\n# To go to the consul DNS server we'll bind to this address\nDNS=169.254.1.1\n\nFILE_CONTENT\nchown root:root /etc/systemd/network/consul0.network\nchmod 0644 /etc/systemd/network/consul0.network\nsystemctl restart systemd-networkd\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/config.hcl\nui = true\nbind_addr = \"0.0.0.0\"\nadvertise_addr = \"{{GetPublicIP}}\"\ndatacenter = \"lon1c01\"\ndata_dir = \"/opt/consul\"\ndomain = \"protoconf.sh\"\nFILE_CONTENT\nchown consul:consul /etc/consul.d/config.hcl\nchmod 0640 /etc/consul.d/config.hcl\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/server.hcl\nserver = true\nbootstrap_expect = 3\nFILE_CONTENT\nchown consul:consul /etc/consul.d/server.hcl\nchmod 0640 /etc/consul.d/server.hcl\ncat <<FILE_CONTENT | cat | tee /usr/local/share/ca-certificates/protoconf.crt\n${tls_self_signed_cert.root.cert_pem}\nFILE_CONTENT\nchown root:root /usr/local/share/ca-certificates/protoconf.crt\nchmod 0644 /usr/local/share/ca-certificates/protoconf.crt\nupdate-ca-certificates\nmkdir -p /etc/consul.d/tls\nchown root:root /etc/consul.d/tls\nchmod 0755 /etc/consul.d/tls\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/tls/key.pem\n${tls_private_key.server-2-lon1-c01-consul.private_key_pem}\nFILE_CONTENT\nchown consul:consul /etc/consul.d/tls/key.pem\nchmod 600 /etc/consul.d/tls/key.pem\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/tls/cert.pem\n${tls_locally_signed_cert.server-2-lon1-c01-consul.cert_pem}\nFILE_CONTENT\nchown consul:consul /etc/consul.d/tls/cert.pem\nchmod 0644 /etc/consul.d/tls/cert.pem\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/tls.hcl\nkey_file = \"/etc/consul.d/tls/key.pem\"\ncert_file = \"/etc/consul.d/tls/cert.pem\"\nca_file = \"/usr/local/share/ca-certificates/protoconf.crt\"\naddresses {\n    https = \"0.0.0.0\"\n    dns = \"169.254.1.1\"\n}\nports {\n    https = 8501\n    dns = 53\n}\nencrypt = \"${random_id.consul_encrypt.b64_std}\"\nrecursors = [\"127.0.0.53\"]\n\nFILE_CONTENT\nchown root:root /etc/consul.d/tls.hcl\nchmod 0644 /etc/consul.d/tls.hcl\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/join_lan.hcl\nretry_join = [\"provider=digitalocean api_token=${var.digitalocean_token} region=lon1 tag_name=server\"]\nFILE_CONTENT\nchown consul:consul /etc/consul.d/join_lan.hcl\nchmod 0640 /etc/consul.d/join_lan.hcl\ncat <<FILE_CONTENT | cat | tee /etc/consul.d/join_wan.hcl\nretry_join_wan = [\"provider=digitalocean api_token=${var.digitalocean_token} tag_name=server\",\"wan.protoconf.com\"]\nFILE_CONTENT\nchown consul:consul /etc/consul.d/join_wan.hcl\nchmod 0640 /etc/consul.d/join_wan.hcl\ncat <<FILE_CONTENT | cat | tee /etc/systemd/system/consul.service\n[Unit]\nAfter=network-online.target\nDescription=HashiCorp Consul - A service mesh solution\nDocumentation=https://www.consul.io/\nRequires=network-online.target\n[Service]\nAmbientCapabilities=CAP_NET_BIND_SERVICE\nExecReload=/usr/local/bin/consul reload\nExecStart=/usr/local/bin/consul agent -config-dir=/etc/consul.d/\nGroup=consul\nKillMode=process\nLimitNOFILE=65536\nRestart=on-failure\nType=notify\nUser=consul\n[Install]\nWantedBy=multi-user.target\nFILE_CONTENT\nchown root:root /etc/systemd/system/consul.service\nchmod 0644 /etc/systemd/system/consul.service\nsystemctl start consul\nsystemctl enable consul\ncurl -L https://releases.hashicorp.com/vault/1.3.2/vault_1.3.2_linux_amd64.zip -o /tmp/vault-1.3.2.zip\nchown root:root /tmp/vault-1.3.2.zip\nchmod 0644 /tmp/vault-1.3.2.zip\nunzip -x /tmp/vault-1.3.2.zip -d /usr/local/bin\nrm /tmp/vault-1.3.2.zip\nvault -autocomplete-install\nsetcap cap_ipc_lock=+ep /usr/local/bin/vault\nuseradd --system --home /etc/vault.d --shell /bin/false vault\nmkdir -p /etc/vault.d\nchown vault:vault /etc/vault.d\nchmod 0755 /etc/vault.d\nmkdir -p /etc/vault.d/tls\nchown vault:vault /etc/vault.d/tls\nchmod 700 /etc/vault.d/tls\ncat <<FILE_CONTENT | cat | tee /etc/vault.d/tls/key.pem\n${tls_private_key.server-2-lon1-c01-vault.private_key_pem}\nFILE_CONTENT\nchown vault:vault /etc/vault.d/tls/key.pem\nchmod 600 /etc/vault.d/tls/key.pem\ncat <<FILE_CONTENT | cat | tee /etc/vault.d/tls/cert.pem\n${tls_locally_signed_cert.server-2-lon1-c01-vault.cert_pem}\nFILE_CONTENT\nchown vault:vault /etc/vault.d/tls/cert.pem\nchmod 0644 /etc/vault.d/tls/cert.pem\ncat <<FILE_CONTENT | cat | tee /etc/vault.d/tls/consul_encrypt.key\n${tls_private_key.consul-encrypt.private_key_pem}\nFILE_CONTENT\nchown vault:vault /etc/vault.d/tls/consul_encrypt.key\nchmod 0600 /etc/vault.d/tls/consul_encrypt.key\ncat <<FILE_CONTENT | cat | tee /etc/vault.d/vault.hcl\nui = true\nstorage \"consul\" {\n    path = \"vault/\"\n}\nlistener \"tcp\" {\n  address       = \"0.0.0.0:8200\"\n  tls_cert_file = \"/etc/vault.d/tls/cert.pem\"\n  tls_key_file  = \"/etc/vault.d/tls/key.pem\"\n}\n\nFILE_CONTENT\nchown root:root /etc/vault.d/vault.hcl\nchmod 0644 /etc/vault.d/vault.hcl\nmkdir -p /etc/vault.d/scripts\nchown vault:vault /etc/vault.d/scripts\nchmod 0755 /etc/vault.d/scripts\ncat <<FILE_CONTENT | base64 -d | tee /etc/vault.d/scripts/post_start.sh\nIyEvYmluL2Jhc2gKCiMgVGhpcyBzY3JpcHQgd2lsbCBydW4gYWZ0ZXIgZXZlcnkgdGltZSB2YXVsdCBpcyBzdGFydGVkLiBJdCB3aWxsIHRyeSB0bzoKIyAxLiBWYWxpZGF0ZSBpZiB2YXVsdCBpcyBpbml0aWFsaXplZAojIDEuMS4gaW5pdGlhbGl6ZSB2YXVsdCBhbmQgc2F2ZSB0aGUgdW5zZWFsIGtleXMgaW4gL3Jvb3QvdmF1bHRfa2V5cy5qc29uCiMgMS4yLiB3cml0ZSB0aGUgcm9vdCB0b2tlbiBpbnRvIC9yb290Ly52YXVsdC10b2tlbgojIDIuIENoZWNrIGlmIHZhdWx0IGlzIHNlYWxlZAojIDIuMS4gVmFsaWRhdGUgL3Jvb3QvdmF1bHRfa2V5cy5qc29uIGhhcyB1bnNlYWwga2V5cwojIDIuMi4gVW5zZWFsIHZhdWx0CgpleHBvcnQgVkFVTFRfQUREUj1odHRwczovLzEyNy4wLjAuMTo4MjAwCmV4cG9ydCBLRVlTX0ZJTEU9L3RtcC92YXVsdF9rZXlzLmpzb24KCnZhdWx0X2lzX2luaXRpYWxpemVkKCkgewogIGN1cmwgLXMgJFZBVUxUX0FERFIvdjEvc3lzL2luaXQgfCBqcSAtZSAuaW5pdGlhbGl6ZWQgPiAvZGV2L251bGwKICByZXR1cm4gJD8KfQoKdmF1bHRfaXNfc2VhbGVkKCkgewogIGN1cmwgLXMgJFZBVUxUX0FERFIvdjEvc3lzL2hlYWx0aCB8IGpxIC1lIC5zZWFsZWQgPiAvZGV2L251bGwKICByZXR1cm4gJD8KfQoKaW5pdGlhbGl6ZV92YXVsdCgpIHsKICBjdXJsIC1zICRWQVVMVF9BRERSL3YxL3N5cy9pbml0IC1YIFBVVCAtZCAneyJzZWNyZXRfc2hhcmVzIjogMywgInNlY3JldF90aHJlc2hvbGQiOiAzfScgPiAkS0VZU19GSUxFCiAgcmV0dmFsPSQ/CiAgcmV0dXJuICRyZXR2YWwKfQoKdmF1bHRfcm9vdF9sb2dpbigpIHsKICBjYXQgJEtFWVNfRklMRSB8IGpxIC1yIC5yb290X3Rva2VuID4gL3RtcC8udmF1bHQtdG9rZW4KfQoKdW5zZWFsX3ZhdWx0KCkgewogIGlmIGpxIC1lICIoLmtleXMgfCBsZW5ndGgpID4gMCIgJEtFWVNfRklMRTsgdGhlbgogICAgY29uc3VsIGt2IHB1dCB2YXVsdF9pbml0IEA8KG9wZW5zc2wgYWVzLTI1Ni1jYmMgLWEgLXNhbHQgLWluICR7S0VZU19GSUxFfSAta2ZpbGUgL2V0Yy92YXVsdC5kL3Rscy9jb25zdWxfZW5jcnlwdC5rZXkpCiAgZWxzZQogICAgZWNobyAiTWlzc2luZyBrZXlzIGluICRLRVlTX0ZJTEUiCiAgICBjb25zdWwga3YgZ2V0IHZhdWx0X2luaXQgfCBvcGVuc3NsIGFlcy0yNTYtY2JjIC1kIC1hIC1rZmlsZSAvZXRjL3ZhdWx0LmQvdGxzL2NvbnN1bF9lbmNyeXB0LmtleSA+ICR7S0VZU19GSUxFfQogIGZpCiAgQ09VTlRFUj0wCiAgd2hpbGUgdmF1bHRfaXNfc2VhbGVkOyBkbwogICAgX2tleT0kKGNhdCAkS0VZU19GSUxFIHwganEgLXIgIi5rZXlzWyR7Q09VTlRFUn1dIikKICAgIENPVU5URVI9JCgoJHtDT1VOVEVSfSsxKSkKICAgIGN1cmwgLXMgJFZBVUxUX0FERFIvdjEvc3lzL3Vuc2VhbCAtWCBQVVQgLWQgIntcImtleVwiOlwiJHtfa2V5fVwifSIKICBkb25lCn0KCnZhdWx0X2lzX3VwKCkgewogIGN1cmwgLXMgJFZBVUxUX0FERFIvdjEvc3lzL2hlYWx0aCA+IC9kZXYvbnVsbAp9Cgp3YWl0X2Zvcl92YXVsdF9zZXJ2ZXIoKSB7CiAgVElNRU9VVF9TRUNPTkRTPSR7MTotNjB9CiAgVElNRU9VVF9USU1FPSQoKCAke1RJTUVPVVRfU0VDT05EU30gKyAkKGRhdGUgKyVzKSApKQogIHVudGlsIHZhdWx0X2lzX3VwOyBkbwogICAgWyAkKGRhdGUgKyVzKSAtbHQgJHtUSU1FT1VUX1RJTUV9IF0gfHwgZXhpdCAyCiAgICBzbGVlcCAxCiAgZG9uZQp9CgptYWluKCkgewogIHdhaXRfZm9yX3ZhdWx0X3NlcnZlcgogIHZhdWx0X2lzX2luaXRpYWxpemVkIHx8IGluaXRpYWxpemVfdmF1bHQKICB1bnNlYWxfdmF1bHQgfHwgZXhpdCAwCiAgdmF1bHRfcm9vdF9sb2dpbgp9CgptYWluCg==\nFILE_CONTENT\nchown vault:vault /etc/vault.d/scripts/post_start.sh\nchmod 0755 /etc/vault.d/scripts/post_start.sh\ncat <<FILE_CONTENT | cat | tee /etc/systemd/system/vault.service\n[Unit]\nDescription=vault\nDocumentation=http://localhost\n[Service]\nAmbientCapabilities=CAP_IPC_LOCK\nCapabilities=CAP_IPC_LOCK+ep\nCapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK\nExecReload=/bin/kill --signal HUP $MAINPID\nExecStart=/usr/local/bin/vault server -config=/etc/vault.d/vault.hcl\nExecStartPost=/etc/vault.d/scripts/post_start.sh\nGroup=vault\nKillMode=process\nKillSignal=SIGINT\nLimitMEMLOCK=infinity\nLimitNOFILE=65536\nNoNewPrivileges=yes\nPrivateDevices=yes\nPrivateTmp=yes\nProtectHome=read-only\nProtectSystem=full\nRestart=on-failure\nRestartSec=5\nSecureBits=keep-caps\nTimeoutStopSec=30\nUser=vault\n[Install]\nWantedBy=multi-user.target\nFILE_CONTENT\nchown root:root /etc/systemd/system/vault.service\nchmod 0644 /etc/systemd/system/vault.service\nsystemctl start vault\nsystemctl enable vault\napt-get install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo add-apt-repository  \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" \napt-get update\napt-get install -y docker-ce docker-ce-cli containerd.io\nmkdir -p /etc/nomad.d\nchown root:root /etc/nomad.d\nchmod 700 /etc/nomad.d\nmkdir -p /opt/nomad\nchown root:root /opt/nomad\nchmod 0755 /opt/nomad\ncurl -L https://releases.hashicorp.com/nomad/0.10.4/nomad_0.10.4_linux_amd64.zip -o /tmp/nomad-0.10.4.zip\nchown root:root /tmp/nomad-0.10.4.zip\nchmod 0644 /tmp/nomad-0.10.4.zip\nunzip -x /tmp/nomad-0.10.4.zip -d /usr/local/bin\nrm /tmp/nomad-0.10.4.zip\nnomad -autocomplete-install\ncomplete -C /usr/local/bin/nomad nomad\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/nomad.hcl\ndata_dir = \"/opt/nomad\"\nFILE_CONTENT\nchown root:root /etc/nomad.d/nomad.hcl\nchmod 0644 /etc/nomad.d/nomad.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/datacenter.hcl\ndatacenter = \"lon1c01\"\nFILE_CONTENT\nchown root:root /etc/nomad.d/datacenter.hcl\nchmod 0644 /etc/nomad.d/datacenter.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/client.hcl\nclient {\n  enabled = true\n  node_class = \"server\"\n  meta {\n      tier = \"server\"\n  }\n  options {\n      driver.raw_exec.enabled = 1\n      docker.privileged.enabled = true\n  }\n}\n\ntelemetry {\n    publish_allocation_metrics = true\n    publish_node_metrics = true\n    prometheus_metrics = true\n}\n\nconsul {\n    address = \"127.0.0.1:8500\"\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/client.hcl\nchmod 0644 /etc/nomad.d/client.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/vault.hcl\nvault {\n    enabled = true\n    address = \"https://vault.service.protoconf.sh:8200\"\n    create_from_role = \"nomad-cluster\"\n    ca_file = \"/usr/local/share/ca-certificates/protoconf.crt\"\n    cert_file = \"/etc/nomad.d/tls/cert.pem\"\n    key_file = \"/etc/nomad.d/tls/key.pem\"\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/vault.hcl\nchmod 0644 /etc/nomad.d/vault.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/server.hcl\nserver {\n  enabled = true\n  bootstrap_expect = 3\n  encrypt = \"${random_id.nomad_encrypt.b64_std}\"\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/server.hcl\nchmod 0644 /etc/nomad.d/server.hcl\nmkdir -p /etc/nomad.d/files\nchown root:root /etc/nomad.d/files\nchmod 0755 /etc/nomad.d/files\nmkdir -p /etc/nomad.d/scripts\nchown root:root /etc/nomad.d/scripts\nchmod 0755 /etc/nomad.d/scripts\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/files/nomad-server-policy.hcl\n# Allow creating tokens under \"nomad-cluster\" role. The role name should be\n# updated if \"nomad-cluster\" is not used.\npath \"auth/token/create/nomad-cluster\" {\n  capabilities = [\"update\"]\n}\n\n# Allow looking up \"nomad-cluster\" role. The role name should be updated if\n# \"nomad-cluster\" is not used.\npath \"auth/token/roles/nomad-cluster\" {\n  capabilities = [\"read\"]\n}\n\n# Allow looking up the token passed to Nomad to validate the token has the\n# proper capabilities. This is provided by the \"default\" policy.\npath \"auth/token/lookup-self\" {\n  capabilities = [\"read\"]\n}\n\n# Allow looking up incoming tokens to validate they have permissions to access\n# the tokens they are requesting. This is only required if\n# `allow_unauthenticated` is set to false.\npath \"auth/token/lookup\" {\n  capabilities = [\"update\"]\n}\n\n# Allow revoking tokens that should no longer exist. This allows revoking\n# tokens for dead tasks.\npath \"auth/token/revoke-accessor\" {\n  capabilities = [\"update\"]\n}\n\n# Allow checking the capabilities of our own token. This is used to validate the\n# token upon startup.\npath \"sys/capabilities-self\" {\n  capabilities = [\"update\"]\n}\n\n# Allow our own token to be renewed.\npath \"auth/token/renew-self\" {\n  capabilities = [\"update\"]\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/files/nomad-server-policy.hcl\nchmod 0644 /etc/nomad.d/files/nomad-server-policy.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/files/nomad-cluster-role.json\n{\n  \"disallowed_policies\": \"nomad-server\",\n  \"explicit_max_ttl\": 0,\n  \"name\": \"nomad-cluster\",\n  \"orphan\": true,\n  \"period\": 259200,\n  \"renewable\": true\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/files/nomad-cluster-role.json\nchmod 0644 /etc/nomad.d/files/nomad-cluster-role.json\ncat <<FILE_CONTENT | base64 -d | tee /etc/nomad.d/scripts/before_nomad.sh\nIyEvYmluL2Jhc2gKCnNldCAtZQoKIyBUaGlzIHNjcmlwdCB3aWxsOgojIDEuIFZhbGlkYXRlIHZhdWx0IGlzIHJ1bm5pbmcgKGVpdGhlciBsb2NhbGx5IG9yIGdsb2JhbGx5KQojIDIuIFJldHJpdmUgdGhlIHJvb3QgdG9rZW4gZnJvbSBjb25zdWwKIyAzLiBJbnN0YWxsIHJvbGUgYW5kIHBvbGljeSBmb3Igbm9tYWQKIyA0LiBDcmVhdGUgYSBuZXcgdG9rZW4gZm9yIG5vbWFkIHNlcnZlciBhbmQgd2lsbCB3cml0ZSBpdCB0byB0aGUgZW52IGZpbGUKCnZhbGlkYXRlX3ZhdWx0KCl7CiAgICBleHBvcnQgVkFVTFRfQUREUj1odHRwczovLzEyNy4wLjAuMTo4MjAwCiAgICBpZiBjdXJsIC1zICRWQVVMVF9BRERSL3YxL3N5cy9oZWFsdGggPiAvZGV2L251bGw7IHRoZW4KICAgICAgICByZXR1cm4KICAgIGZpCiAgICBleHBvcnQgVkFVTFRfQUREUj1odHRwczovL3ZhdWx0LnNlcnZpY2UucHJvdG9jb25mLnNoOjgyMDAKICAgIGlmIGN1cmwgLXMgJFZBVUxUX0FERFIvdjEvc3lzL2hlYWx0aCA+IC9kZXYvbnVsbDsgdGhlbgogICAgICAgIHJldHVybgogICAgZmkKCiAgICBlY2hvICJWYXVsdCBpcyBub3QgcnVubmluZyBwcm9wZXJseSIKICAgIGV4aXQgMQp9CgpnZXRfcm9vdF90b2tlbigpewogICAgZXhwb3J0IFZBVUxUX1RPS0VOPSQoY29uc3VsIGt2IGdldCB2YXVsdF9pbml0IHwgb3BlbnNzbCBhZXMtMjU2LWNiYyAtZCAtYSAta2ZpbGUgL2V0Yy92YXVsdC5kL3Rscy9jb25zdWxfZW5jcnlwdC5rZXkgfCBqcSAtciAnLnJvb3RfdG9rZW4nKQp9CgppbnN0YWxsX3JvbGVfYW5kX3BvbGljeSgpewogICAgdmF1bHQgcG9saWN5IHdyaXRlIG5vbWFkLXNlcnZlciAvZXRjL25vbWFkLmQvZmlsZXMvbm9tYWQtc2VydmVyLXBvbGljeS5oY2wKICAgIHZhdWx0IHdyaXRlIC9hdXRoL3Rva2VuL3JvbGVzL25vbWFkLWNsdXN0ZXIgQC9ldGMvbm9tYWQuZC9maWxlcy9ub21hZC1jbHVzdGVyLXJvbGUuanNvbgp9Cgp3cml0ZV90b2tlbl90b19lbnZfZmlsZSgpIHsKICAgIG5vbWFkX3Rva2VuPSQodmF1bHQgdG9rZW4gY3JlYXRlIC1wb2xpY3kgbm9tYWQtc2VydmVyICAtb3JwaGFuICAtZm9ybWF0PWpzb258IGpxIC1yICcuYXV0aC5jbGllbnRfdG9rZW4nKQogICAgZWNobyAiVkFVTFRfVE9LRU49JHtub21hZF90b2tlbn0iIHwgdGVlIC9ldGMvbm9tYWQuZC9lbnYKfQoKbWFpbigpewogICAgdmFsaWRhdGVfdmF1bHQKICAgIGdldF9yb290X3Rva2VuCiAgICBpbnN0YWxsX3JvbGVfYW5kX3BvbGljeQogICAgd3JpdGVfdG9rZW5fdG9fZW52X2ZpbGUKfQoKbWFpbgo=\nFILE_CONTENT\nchown root:root /etc/nomad.d/scripts/before_nomad.sh\nchmod 0755 /etc/nomad.d/scripts/before_nomad.sh\n/etc/nomad.d/scripts/before_nomad.sh\nmkdir -p /etc/nomad.d/tls\nchown root:root /etc/nomad.d/tls\nchmod 0755 /etc/nomad.d/tls\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/tls/key.pem\n${tls_private_key.server-2-lon1-c01-nomad.private_key_pem}\nFILE_CONTENT\nchown root:root /etc/nomad.d/tls/key.pem\nchmod 600 /etc/nomad.d/tls/key.pem\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/tls/cert.pem\n${tls_locally_signed_cert.server-2-lon1-c01-nomad.cert_pem}\nFILE_CONTENT\nchown root:root /etc/nomad.d/tls/cert.pem\nchmod 0644 /etc/nomad.d/tls/cert.pem\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/tls.hcl\ntls {\n  http = true\n  rpc  = true\n\n  ca_file   = \"/usr/local/share/ca-certificates/protoconf.crt\"\n  cert_file = \"/etc/nomad.d/tls/cert.pem\"\n  key_file  = \"/etc/nomad.d/tls/key.pem\"\n\n  verify_server_hostname = false\n  verify_https_client    = false\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/tls.hcl\nchmod 0644 /etc/nomad.d/tls.hcl\ncat <<FILE_CONTENT | cat | tee /etc/nomad.d/99-additional-configs.hcl\nadvertise {\n    http = \"{{GetPublicIP}}\"\n    rpc = \"{{GetPublicIP}}\"\n    serf = \"{{GetPublicIP}}\"\n}\n\nFILE_CONTENT\nchown root:root /etc/nomad.d/99-additional-configs.hcl\nchmod 0644 /etc/nomad.d/99-additional-configs.hcl\ncat <<FILE_CONTENT | cat | tee /etc/systemd/system/nomad.service\n[Unit]\nDescription=nomad\nDocumentation=http://localhost\n[Service]\nEnvironmentFile=/etc/nomad.d/env\nExecReload=/bin/kill -HUP $MAINPID\nExecStart=/usr/local/bin/nomad agent -config /etc/nomad.d\nExecStartPre=/etc/nomad.d/scripts/before_nomad.sh\nKillMode=process\nKillSignal=SIGINT\nLimitNOFILE=infinity\nLimitNPROC=infinity\nRestart=on-failure\nRestartSec=2\nStartLimitBurst=3\nStartLimitIntervalSec=10\nTasksMax=infinity\n[Install]\nWantedBy=multi-user.target\nFILE_CONTENT\nchown root:root /etc/systemd/system/nomad.service\nchmod 0644 /etc/systemd/system/nomad.service\nsystemctl start nomad\nsystemctl enable nomad\ncurl -fsSL https://github.com/protoconf/protoconf/releases/download/0.1.1/protoconf-linux-0.1.1.tar.gz -o /tmp/protoconf-linux-0.1.1.tar.gz\ntar -xvf /tmp/protoconf-linux-0.1.1.tar.gz -C /usr/local/bin",
        "lifecycle": {
          "create_before_destroy": true,
          "ignore_changes": [
            "user_data"
          ]
        }
      }
    },
    "digitalocean_ssh_key": {
      "smintz-0": {
        "name": "smintz-0",
        "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCk4ST4XhbBmZ3AKej/HWBBvodS/GBs3T6w6pP3WS2463QSOPnY42SVeH4AJZP3nVvvljeH7cYdFShastYOA6pkCxIVw7HSkE2xPLc+09n8bzaU3L8kHmjtfyZEQRxKmYTJA9dv0o3QYiJZgPWvUfGoLSYG4fqgD7KBZZrO+kygoAVby23mK3uPY67Z3mwQ8tB2JL3Fj00zbe+dTagHzXbudlUk28DvWBN59F8xLRZ0zI263MkkS0/1DuzmLlwj9XDfKaSxfSBOLBlAVF3CJ63dHLZ72JQ3ca5utFHkyK+WWymZskN+g3ahlvzb/cN/mMbSusVjvYg7+SDvPiN0waFP smintz@onavo"
      }
    },
    "random_id": {
      "consul_encrypt": {
        "byte_length": 16
      },
      "nomad_encrypt": {
        "byte_length": 16
      }
    },
    "random_pet": {
      "server-0-ams3-c01": {},
      "server-0-lon1-c01": {},
      "server-1-ams3-c01": {},
      "server-1-lon1-c01": {},
      "server-2-ams3-c01": {},
      "server-2-lon1-c01": {}
    },
    "tls_cert_request": {
      "consul-encrypt": {
        "key_algorithm": "${tls_private_key.consul-encrypt.algorithm}",
        "private_key_pem": "${tls_private_key.consul-encrypt.private_key_pem}",
        "subject": {
          "common_name": "consul-encrypt"
        }
      },
      "server-0-ams3-c01-consul": {
        "dns_names": [
          "${random_pet.server-0-ams3-c01.id}",
          "${random_pet.server-0-ams3-c01.id}.node.ams3c01.protoconf.sh",
          "consul.service.protoconf.sh",
          "consul.service.ams3c01.protoconf.sh",
          "localhost"
        ],
        "ip_addresses": [
          "127.0.0.1"
        ],
        "key_algorithm": "${tls_private_key.server-0-ams3-c01-consul.algorithm}",
        "private_key_pem": "${tls_private_key.server-0-ams3-c01-consul.private_key_pem}",
        "subject": {
          "common_name": "${random_pet.server-0-ams3-c01.id}.node.ams3c01.protoconf.sh"
        }
      },
      "server-0-ams3-c01-nomad": {
        "dns_names": [
          "${random_pet.server-0-ams3-c01.id}",
          "${random_pet.server-0-ams3-c01.id}.node.ams3c01.protoconf.sh",
          "nomad.service.protoconf.sh",
          "nomad.service.ams3c01.protoconf.sh",
          "server.global.nomad",
          "localhost"
        ],
        "ip_addresses": [
          "127.0.0.1"
        ],
        "key_algorithm": "${tls_private_key.server-0-ams3-c01-nomad.algorithm}",
        "private_key_pem": "${tls_private_key.server-0-ams3-c01-nomad.private_key_pem}",
        "subject": {
          "common_name": "${random_pet.server-0-ams3-c01.id}.node.ams3c01.protoconf.sh"
        }
      },
      "server-0-ams3-c01-vault": {
        "dns_names": [
          "${random_pet.server-0-ams3-c01.id}",
          "${random_pet.server-0-ams3-c01.id}.node.ams3c01.protoconf.sh",
          "vault.service.protoconf.sh",
          "vault.service.ams3c01.protoconf.sh",
          "localhost"
        ],
        "ip_addresses": [
          "127.0.0.1"
        ],
        "key_algorithm": "${tls_private_key.server-0-ams3-c01-vault.algorithm}",
        "private_key_pem": "${tls_private_key.server-0-ams3-c01-vault.private_key_pem}",
        "subject": {
          "common_name": "${random_pet.server-0-ams3-c01.id}.node.ams3c01.protoconf.sh"
        }
      },
      "server-0-lon1-c01-consul": {
        "dns_names": [
          "${random_pet.server-0-lon1-c01.id}",
          "${random_pet.server-0-lon1-c01.id}.node.lon1c01.protoconf.sh",
          "consul.service.protoconf.sh",
          "consul.service.lon1c01.protoconf.sh",
          "localhost"
        ],
        "ip_addresses": [
          "127.0.0.1"
        ],
        "key_algorithm": "${tls_private_key.server-0-lon1-c01-consul.algorithm}",
        "private_key_pem": "${tls_private_key.server-0-lon1-c01-consul.private_key_pem}",
        "subject": {
          "common_name": "${random_pet.server-0-lon1-c01.id}.node.lon1c01.protoconf.sh"
        }
      },
      "server-0-lon1-c01-nomad": {
        "dns_names": [
          "${random_pet.server-0-lon1-c01.id}",
          "${random_pet.server-0-lon1-c01.id}.node.lon1c01.protoconf.sh",
          "nomad.service.protoconf.sh",
          "nomad.service.lon1c01.protoconf.sh",
          "server.global.nomad",
          "localhost"
        ],
        "ip_addresses": [
          "127.0.0.1"
        ],
        "key_algorithm": "${tls_private_key.server-0-lon1-c01-nomad.algorithm}",
        "private_key_pem": "${tls_private_key.server-0-lon1-c01-nomad.private_key_pem}",
        "subject": {
          "common_name": "${random_pet.server-0-lon1-c01.id}.node.lon1c01.protoconf.sh"
        }
      },
      "server-0-lon1-c01-vault": {
        "dns_names": [
          "${random_pet.server-0-lon1-c01.id}",
          "${random_pet.server-0-lon1-c01.id}.node.lon1c01.protoconf.sh",
          "vault.service.protoconf.sh",
          "vault.service.lon1c01.protoconf.sh",
          "localhost"
        ],
        "ip_addresses": [
          "127.0.0.1"
        ],
        "key_algorithm": "${tls_private_key.server-0-lon1-c01-vault.algorithm}",
        "private_key_pem": "${tls_private_key.server-0-lon1-c01-vault.private_key_pem}",
        "subject": {
          "common_name": "${random_pet.server-0-lon1-c01.id}.node.lon1c01.protoconf.sh"
        }
      },
      "server-1-ams3-c01-consul": {
        "dns_names": [
          "${random_pet.server-1-ams3-c01.id}",
          "${random_pet.server-1-ams3-c01.id}.node.ams3c01.protoconf.sh",
          "consul.service.protoconf.sh",
          "consul.service.ams3c01.protoconf.sh",
          "localhost"
        ],
        "ip_addresses": [
          "127.0.0.1"
        ],
        "key_algorithm": "${tls_private_key.server-1-ams3-c01-consul.algorithm}",
        "private_key_pem": "${tls_private_key.server-1-ams3-c01-consul.private_key_pem}",
        "subject": {
          "common_name": "${random_pet.server-1-ams3-c01.id}.node.ams3c01.protoconf.sh"
        }
      },
      "server-1-ams3-c01-nomad": {
        "dns_names": [
          "${random_pet.server-1-ams3-c01.id}",
          "${random_pet.server-1-ams3-c01.id}.node.ams3c01.protoconf.sh",
          "nomad.service.protoconf.sh",
          "nomad.service.ams3c01.protoconf.sh",
          "server.global.nomad",
          "localhost"
        ],
        "ip_addresses": [
          "127.0.0.1"
        ],
        "key_algorithm": "${tls_private_key.server-1-ams3-c01-nomad.algorithm}",
        "private_key_pem": "${tls_private_key.server-1-ams3-c01-nomad.private_key_pem}",
        "subject": {
          "common_name": "${random_pet.server-1-ams3-c01.id}.node.ams3c01.protoconf.sh"
        }
      },
      "server-1-ams3-c01-vault": {
        "dns_names": [
          "${random_pet.server-1-ams3-c01.id}",
          "${random_pet.server-1-ams3-c01.id}.node.ams3c01.protoconf.sh",
          "vault.service.protoconf.sh",
          "vault.service.ams3c01.protoconf.sh",
          "localhost"
        ],
        "ip_addresses": [
          "127.0.0.1"
        ],
        "key_algorithm": "${tls_private_key.server-1-ams3-c01-vault.algorithm}",
        "private_key_pem": "${tls_private_key.server-1-ams3-c01-vault.private_key_pem}",
        "subject": {
          "common_name": "${random_pet.server-1-ams3-c01.id}.node.ams3c01.protoconf.sh"
        }
      },
      "server-1-lon1-c01-consul": {
        "dns_names": [
          "${random_pet.server-1-lon1-c01.id}",
          "${random_pet.server-1-lon1-c01.id}.node.lon1c01.protoconf.sh",
          "consul.service.protoconf.sh",
          "consul.service.lon1c01.protoconf.sh",
          "localhost"
        ],
        "ip_addresses": [
          "127.0.0.1"
        ],
        "key_algorithm": "${tls_private_key.server-1-lon1-c01-consul.algorithm}",
        "private_key_pem": "${tls_private_key.server-1-lon1-c01-consul.private_key_pem}",
        "subject": {
          "common_name": "${random_pet.server-1-lon1-c01.id}.node.lon1c01.protoconf.sh"
        }
      },
      "server-1-lon1-c01-nomad": {
        "dns_names": [
          "${random_pet.server-1-lon1-c01.id}",
          "${random_pet.server-1-lon1-c01.id}.node.lon1c01.protoconf.sh",
          "nomad.service.protoconf.sh",
          "nomad.service.lon1c01.protoconf.sh",
          "server.global.nomad",
          "localhost"
        ],
        "ip_addresses": [
          "127.0.0.1"
        ],
        "key_algorithm": "${tls_private_key.server-1-lon1-c01-nomad.algorithm}",
        "private_key_pem": "${tls_private_key.server-1-lon1-c01-nomad.private_key_pem}",
        "subject": {
          "common_name": "${random_pet.server-1-lon1-c01.id}.node.lon1c01.protoconf.sh"
        }
      },
      "server-1-lon1-c01-vault": {
        "dns_names": [
          "${random_pet.server-1-lon1-c01.id}",
          "${random_pet.server-1-lon1-c01.id}.node.lon1c01.protoconf.sh",
          "vault.service.protoconf.sh",
          "vault.service.lon1c01.protoconf.sh",
          "localhost"
        ],
        "ip_addresses": [
          "127.0.0.1"
        ],
        "key_algorithm": "${tls_private_key.server-1-lon1-c01-vault.algorithm}",
        "private_key_pem": "${tls_private_key.server-1-lon1-c01-vault.private_key_pem}",
        "subject": {
          "common_name": "${random_pet.server-1-lon1-c01.id}.node.lon1c01.protoconf.sh"
        }
      },
      "server-2-ams3-c01-consul": {
        "dns_names": [
          "${random_pet.server-2-ams3-c01.id}",
          "${random_pet.server-2-ams3-c01.id}.node.ams3c01.protoconf.sh",
          "consul.service.protoconf.sh",
          "consul.service.ams3c01.protoconf.sh",
          "localhost"
        ],
        "ip_addresses": [
          "127.0.0.1"
        ],
        "key_algorithm": "${tls_private_key.server-2-ams3-c01-consul.algorithm}",
        "private_key_pem": "${tls_private_key.server-2-ams3-c01-consul.private_key_pem}",
        "subject": {
          "common_name": "${random_pet.server-2-ams3-c01.id}.node.ams3c01.protoconf.sh"
        }
      },
      "server-2-ams3-c01-nomad": {
        "dns_names": [
          "${random_pet.server-2-ams3-c01.id}",
          "${random_pet.server-2-ams3-c01.id}.node.ams3c01.protoconf.sh",
          "nomad.service.protoconf.sh",
          "nomad.service.ams3c01.protoconf.sh",
          "server.global.nomad",
          "localhost"
        ],
        "ip_addresses": [
          "127.0.0.1"
        ],
        "key_algorithm": "${tls_private_key.server-2-ams3-c01-nomad.algorithm}",
        "private_key_pem": "${tls_private_key.server-2-ams3-c01-nomad.private_key_pem}",
        "subject": {
          "common_name": "${random_pet.server-2-ams3-c01.id}.node.ams3c01.protoconf.sh"
        }
      },
      "server-2-ams3-c01-vault": {
        "dns_names": [
          "${random_pet.server-2-ams3-c01.id}",
          "${random_pet.server-2-ams3-c01.id}.node.ams3c01.protoconf.sh",
          "vault.service.protoconf.sh",
          "vault.service.ams3c01.protoconf.sh",
          "localhost"
        ],
        "ip_addresses": [
          "127.0.0.1"
        ],
        "key_algorithm": "${tls_private_key.server-2-ams3-c01-vault.algorithm}",
        "private_key_pem": "${tls_private_key.server-2-ams3-c01-vault.private_key_pem}",
        "subject": {
          "common_name": "${random_pet.server-2-ams3-c01.id}.node.ams3c01.protoconf.sh"
        }
      },
      "server-2-lon1-c01-consul": {
        "dns_names": [
          "${random_pet.server-2-lon1-c01.id}",
          "${random_pet.server-2-lon1-c01.id}.node.lon1c01.protoconf.sh",
          "consul.service.protoconf.sh",
          "consul.service.lon1c01.protoconf.sh",
          "localhost"
        ],
        "ip_addresses": [
          "127.0.0.1"
        ],
        "key_algorithm": "${tls_private_key.server-2-lon1-c01-consul.algorithm}",
        "private_key_pem": "${tls_private_key.server-2-lon1-c01-consul.private_key_pem}",
        "subject": {
          "common_name": "${random_pet.server-2-lon1-c01.id}.node.lon1c01.protoconf.sh"
        }
      },
      "server-2-lon1-c01-nomad": {
        "dns_names": [
          "${random_pet.server-2-lon1-c01.id}",
          "${random_pet.server-2-lon1-c01.id}.node.lon1c01.protoconf.sh",
          "nomad.service.protoconf.sh",
          "nomad.service.lon1c01.protoconf.sh",
          "server.global.nomad",
          "localhost"
        ],
        "ip_addresses": [
          "127.0.0.1"
        ],
        "key_algorithm": "${tls_private_key.server-2-lon1-c01-nomad.algorithm}",
        "private_key_pem": "${tls_private_key.server-2-lon1-c01-nomad.private_key_pem}",
        "subject": {
          "common_name": "${random_pet.server-2-lon1-c01.id}.node.lon1c01.protoconf.sh"
        }
      },
      "server-2-lon1-c01-vault": {
        "dns_names": [
          "${random_pet.server-2-lon1-c01.id}",
          "${random_pet.server-2-lon1-c01.id}.node.lon1c01.protoconf.sh",
          "vault.service.protoconf.sh",
          "vault.service.lon1c01.protoconf.sh",
          "localhost"
        ],
        "ip_addresses": [
          "127.0.0.1"
        ],
        "key_algorithm": "${tls_private_key.server-2-lon1-c01-vault.algorithm}",
        "private_key_pem": "${tls_private_key.server-2-lon1-c01-vault.private_key_pem}",
        "subject": {
          "common_name": "${random_pet.server-2-lon1-c01.id}.node.lon1c01.protoconf.sh"
        }
      }
    },
    "tls_locally_signed_cert": {
      "consul-encrypt": {
        "allowed_uses": [
          "key_encipherment",
          "digital_signature",
          "server_auth",
          "client_auth"
        ],
        "ca_cert_pem": "${tls_self_signed_cert.root.cert_pem}",
        "ca_key_algorithm": "${tls_private_key.root.algorithm}",
        "ca_private_key_pem": "${tls_private_key.root.private_key_pem}",
        "cert_request_pem": "${tls_cert_request.consul-encrypt.cert_request_pem}",
        "early_renewal_hours": 720,
        "validity_period_hours": 2160
      },
      "server-0-ams3-c01-consul": {
        "allowed_uses": [
          "key_encipherment",
          "digital_signature",
          "server_auth",
          "client_auth"
        ],
        "ca_cert_pem": "${tls_self_signed_cert.root.cert_pem}",
        "ca_key_algorithm": "${tls_private_key.root.algorithm}",
        "ca_private_key_pem": "${tls_private_key.root.private_key_pem}",
        "cert_request_pem": "${tls_cert_request.server-0-ams3-c01-consul.cert_request_pem}",
        "early_renewal_hours": 720,
        "validity_period_hours": 2160
      },
      "server-0-ams3-c01-nomad": {
        "allowed_uses": [
          "key_encipherment",
          "digital_signature",
          "server_auth",
          "client_auth"
        ],
        "ca_cert_pem": "${tls_self_signed_cert.root.cert_pem}",
        "ca_key_algorithm": "${tls_private_key.root.algorithm}",
        "ca_private_key_pem": "${tls_private_key.root.private_key_pem}",
        "cert_request_pem": "${tls_cert_request.server-0-ams3-c01-nomad.cert_request_pem}",
        "early_renewal_hours": 720,
        "validity_period_hours": 2160
      },
      "server-0-ams3-c01-vault": {
        "allowed_uses": [
          "key_encipherment",
          "digital_signature",
          "server_auth",
          "client_auth"
        ],
        "ca_cert_pem": "${tls_self_signed_cert.root.cert_pem}",
        "ca_key_algorithm": "${tls_private_key.root.algorithm}",
        "ca_private_key_pem": "${tls_private_key.root.private_key_pem}",
        "cert_request_pem": "${tls_cert_request.server-0-ams3-c01-vault.cert_request_pem}",
        "early_renewal_hours": 720,
        "validity_period_hours": 2160
      },
      "server-0-lon1-c01-consul": {
        "allowed_uses": [
          "key_encipherment",
          "digital_signature",
          "server_auth",
          "client_auth"
        ],
        "ca_cert_pem": "${tls_self_signed_cert.root.cert_pem}",
        "ca_key_algorithm": "${tls_private_key.root.algorithm}",
        "ca_private_key_pem": "${tls_private_key.root.private_key_pem}",
        "cert_request_pem": "${tls_cert_request.server-0-lon1-c01-consul.cert_request_pem}",
        "early_renewal_hours": 720,
        "validity_period_hours": 2160
      },
      "server-0-lon1-c01-nomad": {
        "allowed_uses": [
          "key_encipherment",
          "digital_signature",
          "server_auth",
          "client_auth"
        ],
        "ca_cert_pem": "${tls_self_signed_cert.root.cert_pem}",
        "ca_key_algorithm": "${tls_private_key.root.algorithm}",
        "ca_private_key_pem": "${tls_private_key.root.private_key_pem}",
        "cert_request_pem": "${tls_cert_request.server-0-lon1-c01-nomad.cert_request_pem}",
        "early_renewal_hours": 720,
        "validity_period_hours": 2160
      },
      "server-0-lon1-c01-vault": {
        "allowed_uses": [
          "key_encipherment",
          "digital_signature",
          "server_auth",
          "client_auth"
        ],
        "ca_cert_pem": "${tls_self_signed_cert.root.cert_pem}",
        "ca_key_algorithm": "${tls_private_key.root.algorithm}",
        "ca_private_key_pem": "${tls_private_key.root.private_key_pem}",
        "cert_request_pem": "${tls_cert_request.server-0-lon1-c01-vault.cert_request_pem}",
        "early_renewal_hours": 720,
        "validity_period_hours": 2160
      },
      "server-1-ams3-c01-consul": {
        "allowed_uses": [
          "key_encipherment",
          "digital_signature",
          "server_auth",
          "client_auth"
        ],
        "ca_cert_pem": "${tls_self_signed_cert.root.cert_pem}",
        "ca_key_algorithm": "${tls_private_key.root.algorithm}",
        "ca_private_key_pem": "${tls_private_key.root.private_key_pem}",
        "cert_request_pem": "${tls_cert_request.server-1-ams3-c01-consul.cert_request_pem}",
        "early_renewal_hours": 720,
        "validity_period_hours": 2160
      },
      "server-1-ams3-c01-nomad": {
        "allowed_uses": [
          "key_encipherment",
          "digital_signature",
          "server_auth",
          "client_auth"
        ],
        "ca_cert_pem": "${tls_self_signed_cert.root.cert_pem}",
        "ca_key_algorithm": "${tls_private_key.root.algorithm}",
        "ca_private_key_pem": "${tls_private_key.root.private_key_pem}",
        "cert_request_pem": "${tls_cert_request.server-1-ams3-c01-nomad.cert_request_pem}",
        "early_renewal_hours": 720,
        "validity_period_hours": 2160
      },
      "server-1-ams3-c01-vault": {
        "allowed_uses": [
          "key_encipherment",
          "digital_signature",
          "server_auth",
          "client_auth"
        ],
        "ca_cert_pem": "${tls_self_signed_cert.root.cert_pem}",
        "ca_key_algorithm": "${tls_private_key.root.algorithm}",
        "ca_private_key_pem": "${tls_private_key.root.private_key_pem}",
        "cert_request_pem": "${tls_cert_request.server-1-ams3-c01-vault.cert_request_pem}",
        "early_renewal_hours": 720,
        "validity_period_hours": 2160
      },
      "server-1-lon1-c01-consul": {
        "allowed_uses": [
          "key_encipherment",
          "digital_signature",
          "server_auth",
          "client_auth"
        ],
        "ca_cert_pem": "${tls_self_signed_cert.root.cert_pem}",
        "ca_key_algorithm": "${tls_private_key.root.algorithm}",
        "ca_private_key_pem": "${tls_private_key.root.private_key_pem}",
        "cert_request_pem": "${tls_cert_request.server-1-lon1-c01-consul.cert_request_pem}",
        "early_renewal_hours": 720,
        "validity_period_hours": 2160
      },
      "server-1-lon1-c01-nomad": {
        "allowed_uses": [
          "key_encipherment",
          "digital_signature",
          "server_auth",
          "client_auth"
        ],
        "ca_cert_pem": "${tls_self_signed_cert.root.cert_pem}",
        "ca_key_algorithm": "${tls_private_key.root.algorithm}",
        "ca_private_key_pem": "${tls_private_key.root.private_key_pem}",
        "cert_request_pem": "${tls_cert_request.server-1-lon1-c01-nomad.cert_request_pem}",
        "early_renewal_hours": 720,
        "validity_period_hours": 2160
      },
      "server-1-lon1-c01-vault": {
        "allowed_uses": [
          "key_encipherment",
          "digital_signature",
          "server_auth",
          "client_auth"
        ],
        "ca_cert_pem": "${tls_self_signed_cert.root.cert_pem}",
        "ca_key_algorithm": "${tls_private_key.root.algorithm}",
        "ca_private_key_pem": "${tls_private_key.root.private_key_pem}",
        "cert_request_pem": "${tls_cert_request.server-1-lon1-c01-vault.cert_request_pem}",
        "early_renewal_hours": 720,
        "validity_period_hours": 2160
      },
      "server-2-ams3-c01-consul": {
        "allowed_uses": [
          "key_encipherment",
          "digital_signature",
          "server_auth",
          "client_auth"
        ],
        "ca_cert_pem": "${tls_self_signed_cert.root.cert_pem}",
        "ca_key_algorithm": "${tls_private_key.root.algorithm}",
        "ca_private_key_pem": "${tls_private_key.root.private_key_pem}",
        "cert_request_pem": "${tls_cert_request.server-2-ams3-c01-consul.cert_request_pem}",
        "early_renewal_hours": 720,
        "validity_period_hours": 2160
      },
      "server-2-ams3-c01-nomad": {
        "allowed_uses": [
          "key_encipherment",
          "digital_signature",
          "server_auth",
          "client_auth"
        ],
        "ca_cert_pem": "${tls_self_signed_cert.root.cert_pem}",
        "ca_key_algorithm": "${tls_private_key.root.algorithm}",
        "ca_private_key_pem": "${tls_private_key.root.private_key_pem}",
        "cert_request_pem": "${tls_cert_request.server-2-ams3-c01-nomad.cert_request_pem}",
        "early_renewal_hours": 720,
        "validity_period_hours": 2160
      },
      "server-2-ams3-c01-vault": {
        "allowed_uses": [
          "key_encipherment",
          "digital_signature",
          "server_auth",
          "client_auth"
        ],
        "ca_cert_pem": "${tls_self_signed_cert.root.cert_pem}",
        "ca_key_algorithm": "${tls_private_key.root.algorithm}",
        "ca_private_key_pem": "${tls_private_key.root.private_key_pem}",
        "cert_request_pem": "${tls_cert_request.server-2-ams3-c01-vault.cert_request_pem}",
        "early_renewal_hours": 720,
        "validity_period_hours": 2160
      },
      "server-2-lon1-c01-consul": {
        "allowed_uses": [
          "key_encipherment",
          "digital_signature",
          "server_auth",
          "client_auth"
        ],
        "ca_cert_pem": "${tls_self_signed_cert.root.cert_pem}",
        "ca_key_algorithm": "${tls_private_key.root.algorithm}",
        "ca_private_key_pem": "${tls_private_key.root.private_key_pem}",
        "cert_request_pem": "${tls_cert_request.server-2-lon1-c01-consul.cert_request_pem}",
        "early_renewal_hours": 720,
        "validity_period_hours": 2160
      },
      "server-2-lon1-c01-nomad": {
        "allowed_uses": [
          "key_encipherment",
          "digital_signature",
          "server_auth",
          "client_auth"
        ],
        "ca_cert_pem": "${tls_self_signed_cert.root.cert_pem}",
        "ca_key_algorithm": "${tls_private_key.root.algorithm}",
        "ca_private_key_pem": "${tls_private_key.root.private_key_pem}",
        "cert_request_pem": "${tls_cert_request.server-2-lon1-c01-nomad.cert_request_pem}",
        "early_renewal_hours": 720,
        "validity_period_hours": 2160
      },
      "server-2-lon1-c01-vault": {
        "allowed_uses": [
          "key_encipherment",
          "digital_signature",
          "server_auth",
          "client_auth"
        ],
        "ca_cert_pem": "${tls_self_signed_cert.root.cert_pem}",
        "ca_key_algorithm": "${tls_private_key.root.algorithm}",
        "ca_private_key_pem": "${tls_private_key.root.private_key_pem}",
        "cert_request_pem": "${tls_cert_request.server-2-lon1-c01-vault.cert_request_pem}",
        "early_renewal_hours": 720,
        "validity_period_hours": 2160
      }
    },
    "tls_private_key": {
      "consul-encrypt": {
        "algorithm": "ECDSA",
        "ecdsa_curve": "P384",
        "rsa_bits": 4096
      },
      "root": {
        "algorithm": "ECDSA",
        "ecdsa_curve": "P384"
      },
      "server-0-ams3-c01-consul": {
        "algorithm": "ECDSA",
        "ecdsa_curve": "P384",
        "rsa_bits": 4096
      },
      "server-0-ams3-c01-nomad": {
        "algorithm": "ECDSA",
        "ecdsa_curve": "P384",
        "rsa_bits": 4096
      },
      "server-0-ams3-c01-vault": {
        "algorithm": "ECDSA",
        "ecdsa_curve": "P384",
        "rsa_bits": 4096
      },
      "server-0-lon1-c01-consul": {
        "algorithm": "ECDSA",
        "ecdsa_curve": "P384",
        "rsa_bits": 4096
      },
      "server-0-lon1-c01-nomad": {
        "algorithm": "ECDSA",
        "ecdsa_curve": "P384",
        "rsa_bits": 4096
      },
      "server-0-lon1-c01-vault": {
        "algorithm": "ECDSA",
        "ecdsa_curve": "P384",
        "rsa_bits": 4096
      },
      "server-1-ams3-c01-consul": {
        "algorithm": "ECDSA",
        "ecdsa_curve": "P384",
        "rsa_bits": 4096
      },
      "server-1-ams3-c01-nomad": {
        "algorithm": "ECDSA",
        "ecdsa_curve": "P384",
        "rsa_bits": 4096
      },
      "server-1-ams3-c01-vault": {
        "algorithm": "ECDSA",
        "ecdsa_curve": "P384",
        "rsa_bits": 4096
      },
      "server-1-lon1-c01-consul": {
        "algorithm": "ECDSA",
        "ecdsa_curve": "P384",
        "rsa_bits": 4096
      },
      "server-1-lon1-c01-nomad": {
        "algorithm": "ECDSA",
        "ecdsa_curve": "P384",
        "rsa_bits": 4096
      },
      "server-1-lon1-c01-vault": {
        "algorithm": "ECDSA",
        "ecdsa_curve": "P384",
        "rsa_bits": 4096
      },
      "server-2-ams3-c01-consul": {
        "algorithm": "ECDSA",
        "ecdsa_curve": "P384",
        "rsa_bits": 4096
      },
      "server-2-ams3-c01-nomad": {
        "algorithm": "ECDSA",
        "ecdsa_curve": "P384",
        "rsa_bits": 4096
      },
      "server-2-ams3-c01-vault": {
        "algorithm": "ECDSA",
        "ecdsa_curve": "P384",
        "rsa_bits": 4096
      },
      "server-2-lon1-c01-consul": {
        "algorithm": "ECDSA",
        "ecdsa_curve": "P384",
        "rsa_bits": 4096
      },
      "server-2-lon1-c01-nomad": {
        "algorithm": "ECDSA",
        "ecdsa_curve": "P384",
        "rsa_bits": 4096
      },
      "server-2-lon1-c01-vault": {
        "algorithm": "ECDSA",
        "ecdsa_curve": "P384",
        "rsa_bits": 4096
      }
    },
    "tls_self_signed_cert": {
      "root": {
        "allowed_uses": [
          "cert_signing",
          "key_encipherment",
          "digital_signature",
          "server_auth",
          "client_auth"
        ],
        "dns_names": [
          "protoconf.com"
        ],
        "early_renewal_hours": 43800,
        "is_ca_certificate": true,
        "key_algorithm": "${tls_private_key.root.algorithm}",
        "private_key_pem": "${tls_private_key.root.private_key_pem}",
        "validity_period_hours": 87600,
        "subject": {
          "organization": "protoconf",
          "common_name": "protoconf.com",
          "organizational_unit": "protocorp"
        }
      }
    }
  }
}
