{
  "protoFile": "nomad/v0.11.1/api.proto",
  "value": {
    "@type": "type.googleapis.com/api.RegisterJobRequest",
    "Job": {
      "Region": "global",
      "ID": "frontend",
      "Name": "frontend",
      "Type": "service",
      "Priority": 75,
      "Datacenters": [
        "ams3c01"
      ],
      "TaskGroups": [
        {
          "Name": "prod",
          "Count": 3,
          "Tasks": [
            {
              "Name": "server",
              "Driver": "docker",
              "Config": {
                "dns_options": [
                  "169.254.1.1"
                ],
                "image": "smintz/frontend:v0.1.4-31-gc4d8670",
                "port_map": [
                  {
                    "server": 18080
                  }
                ]
              },
              "Env": {
                "AD_SERVICE_ADDR": "adservice",
                "CART_SERVICE_ADDR": "cartservice",
                "CHECKOUT_SERVICE_ADDR": "checkoutservice",
                "CURRENCY_SERVICE_ADDR": "currencyservice",
                "LISTEN_ADDR": "0.0.0.0",
                "PORT": "18080",
                "PRODUCT_CATALOG_SERVICE_ADDR": "productcatalogservice",
                "RECOMMENDATION_SERVICE_ADDR": "recommendationservice",
                "SHIPPING_SERVICE_ADDR": "shippingservice",
                "http_proxy": "${NOMAD_ADDR_envoy_forwarder}"
              },
              "Resources": {
                "CPU": 100,
                "MemoryMB": 128,
                "Networks": [
                  {
                    "Mode": "bridge",
                    "DynamicPorts": [
                      {
                        "Label": "server",
                        "To": 18080
                      }
                    ]
                  }
                ]
              },
              "Leader": true
            },
            {
              "Name": "envoy",
              "Driver": "docker",
              "Config": {
                "args": [
                  "-c /alloc/data/Frontend.json",
                  "--config-yaml",
                  "static_resources:\n  listeners:\n  - name: ingress\n    address:\n      socket_address:\n        address: 0.0.0.0\n        port_value: 10000\n    filter_chains:\n    - filters:\n      - name: envoy.filters.network.http_connection_manager\n        typed_config:\n          \"@type\": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager\n          codec_type: auto\n          stat_prefix: ingress_http\n          access_log:\n          - name: envoy.access_loggers.file\n            typed_config:\n              \"@type\": type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog\n              path: \"/dev/stdout\"\n          route_config:\n            name: local_route\n            virtual_hosts:\n            - name: backend\n              domains:\n              - \"*\"\n              routes:\n              - match:\n                  prefix: \"/\"\n                route:\n                  cluster: local\n          http_filters:\n          - name: envoy.filters.http.router\n            typed_config: {}\n  clusters:\n  - name: local\n    connect_timeout: 0.250s\n    type: strict_dns\n    lb_policy: round_robin\n    load_assignment:\n      cluster_name: local\n      endpoints:\n      - lb_endpoints:\n        - endpoint:\n            address:\n              socket_address:\n                address: \"${NOMAD_IP_server_server}\"\n                port_value: ${NOMAD_PORT_server_server}\nnode:\n  cluster: \"${NOMAD_DC}\"\n  id: \"${NOMAD_JOB_NAME}\"\nadmin:\n  access_log_path: \"/tmp/admin_access.log\"\n  address:\n    socket_address:\n      address: 0.0.0.0\n      port_value: 8881\n"
                ],
                "dns_options": [
                  "169.254.1.1"
                ],
                "image": "envoyproxy/envoy-alpine:v1.15.0",
                "port_map": [
                  {
                    "envoyadmin": 8881
                  },
                  {
                    "ingress": 10000
                  },
                  {
                    "forwarder": 11000
                  }
                ]
              },
              "Services": [
                {
                  "Name": "frontend-envoy",
                  "Tags": [
                    "httpprefix-frontend-envoy.service.ams3c01.pco.nf/",
                    "envoy-admin"
                  ],
                  "PortLabel": "envoyadmin",
                  "Checks": [
                    {
                      "Type": "http",
                      "Path": "/ready",
                      "Interval": "10000000000",
                      "Timeout": "2000000000",
                      "CheckRestart": {
                        "Limit": 5
                      }
                    }
                  ],
                  "Connect": {
                    "SidecarService": {
                      "Tags": [
                        "connect"
                      ]
                    },
                    "SidecarTask": {
                      "Env": {
                        "HELLO": "world"
                      }
                    }
                  }
                },
                {
                  "Name": "frontend",
                  "Tags": [
                    "httpprefix-frontend.service.ams3c01.pco.nf/",
                    "prod",
                    "v0.1.4-31-gc4d8670"
                  ],
                  "PortLabel": "ingress",
                  "Checks": [
                    {
                      "Type": "tcp",
                      "Interval": "10000000000",
                      "Timeout": "2000000000",
                      "CheckRestart": {
                        "Limit": 5
                      }
                    }
                  ],
                  "Connect": {
                    "SidecarService": {
                      "Tags": [
                        "connect"
                      ]
                    },
                    "SidecarTask": {
                      "Env": {
                        "HELLO": "world"
                      }
                    }
                  }
                }
              ],
              "Resources": {
                "CPU": 100,
                "MemoryMB": 64,
                "Networks": [
                  {
                    "Mode": "bridge",
                    "DynamicPorts": [
                      {
                        "Label": "envoyadmin",
                        "To": 8881
                      },
                      {
                        "Label": "ingress",
                        "To": 10000
                      },
                      {
                        "Label": "forwarder",
                        "To": 11000
                      }
                    ]
                  }
                ]
              }
            },
            {
              "Name": "protoconf-exec",
              "Driver": "docker",
              "Config": {
                "args": [
                  "exec",
                  "-config=services/routes/exec/Frontend",
                  "-proto_dir=/local"
                ],
                "dns_options": [
                  "169.254.1.1"
                ],
                "image": "protoconf/protoconf:0.1.2-rc1.0-",
                "network_mode": "host",
                "volumes": [
                  "/etc/ssl:/etc/ssl"
                ]
              },
              "Resources": {
                "CPU": 1000,
                "MemoryMB": 64,
                "Networks": [
                  {
                    "Mode": "bridge"
                  }
                ]
              },
              "Artifacts": [
                {
                  "GetterSource": "git::https://github.com/protoconf/microservices-demo//src",
                  "GetterOptions": {
                    "depth": "1"
                  },
                  "RelativeDest": "/local"
                }
              ]
            }
          ]
        }
      ]
    }
  }
}
