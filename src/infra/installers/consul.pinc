"""
This file contains constants and functions to assist with instance installations.
"""
# vi:filetype=python syntax=python
load("/infra/installers/systemd.pinc", "systemd")
load("/pc4os/pc4os.pinc", "compile")
load("/pc4os/component.pinc", "Component")
load("/pc4os/file.pinc", "File", "Directory")
load("/pc4os/command.pinc", "Command")
load("/pc4os/systemd.pinc", "Systemd")
load("/pc4os/systemd.proto", "Service")


def ConsulInstall(version):
    downloaded_file = "/tmp/consul-{}.zip".format(version)
    install = [
        Directory("/etc/consul.d"),
        Directory("/opt/consul/data"),
        File(
            downloaded_file,
            download="https://releases.hashicorp.com/consul/{0}/consul_{0}_linux_amd64.zip".format(
                version
            ),
        ),
        Command("unzip", "-x", downloaded_file, "-d", "/usr/local/bin/consul"),
    ]

    def render():
        return install

    return Component("ConsulInstall", render)


def Consul(role="server", dc="dc1", additional_args="", config=""):
    """
    Defines the installation of consul

    Args:
        role: either `server` or `client`
        dc: Name of the datacenter
        additional_args: Additional command line arguments to pass to the consul agent
        config: Content to put as a config for consul
    Returns:
        Installation and configuration script for the consul agent.
    """
    agent_args = []
    if role == "server":
        agent_args.append("-server -bootstrap-expect=3")

    agent_args.append("""-ui -client 0.0.0.0 -advertise '{{GetPublicIP}}'""")
    agent_args.append("-datacenter=" + dc)
    agent_args.append("-data-dir=/opt/consul/data")
    agent_args.append(additional_args)

    def render():
        return [
            ConsulInstall("1.7.0"),
            File("/etc/consul.d/config.hcl", content=config),
            Systemd(
                "consul",
                Service(
                    Type="notify",
                    # User="consul",
                    # Group="consul",
                    ExecStart=" ".join(
                        ["/usr/local/bin/consul", "agent", " ".join(agent_args)]
                    ),
                    ExecReload="/usr/local/bin/consul reload",
                    # KillMode="process",
                    Restart="on-failure",
                    # LimitNOFILE=65536,
                ),
            ),
        ]

    return Component("Consul", render)
