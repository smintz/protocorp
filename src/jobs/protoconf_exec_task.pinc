"""
ProtoconfExecTask
"""
load("helpers/task.pinc", "NewTask")
load("consts.pinc", PROTOCONF_VERSION="PROTOCONF_V_VERSION")
load("/nomad/v0.11.1/api.proto", "Template")


def ProtoconfExecTask(config, templates={}):
    """
    ProtoconfExecTask returns a task to be used with `protoconf exec`

    Args:
        config: path of the protoconf config to watch
        templates: dict contains the pathname of the protofile and its content
    Returns:
        a task
    """
    task = NewTask("protoconf-exec")
    task.SetImage("protoconf/protoconf:" + PROTOCONF_VERSION)
    task.task.Templates = [
        Template(EmbeddedTmpl=templates[key], DestPath="local/" + key)
        for key in templates.keys()
    ]
    task.SetConfig("network_mode", "host")
    task.SetConfig("volumes", ["/etc/ssl:/etc/ssl"])
    task.SetConfig("args", ["exec", "-config=" + config, "-proto_dir=/local"])
    task.SetCPU(1000)
    return task.task
