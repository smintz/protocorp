syntax = "proto3";

package terraform.aws.resources;

import "terraform/meta.proto";

//AwsAccessanalyzerAnalyzer version is 0
message AwsAccessanalyzerAnalyzer {
  string analyzer_name = 1 [json_name = "analyzer_name"];

  string arn = 2;

  string id = 3;

  map<string, string> tags = 4;

  string type = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsAcmCertificate version is 0
message AwsAcmCertificate {
  string arn = 1;

  string certificate_authority_arn = 2 [json_name = "certificate_authority_arn"];

  string certificate_body = 3 [json_name = "certificate_body"];

  string certificate_chain = 4 [json_name = "certificate_chain"];

  string domain_name = 5 [json_name = "domain_name"];

  repeated DomainValidationOptions domain_validation_options = 6 [json_name = "domain_validation_options"];

  string id = 7;

  string private_key = 8 [json_name = "private_key"];

  repeated string subject_alternative_names = 9 [json_name = "subject_alternative_names"];

  map<string, string> tags = 10;

  repeated string validation_emails = 11 [json_name = "validation_emails"];

  string validation_method = 12 [json_name = "validation_method"];

  Options options = 13;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 14;

  int32 count = 15;

  terraform.meta.MetaFields.ForEachEntry for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;

  message DomainValidationOptions {
    //domain_name: string
    string domain_name = 1 [json_name = "domain_name"];

    //resource_record_name: string
    string resource_record_name = 2 [json_name = "resource_record_name"];

    //resource_record_type: string
    string resource_record_type = 3 [json_name = "resource_record_type"];

    //resource_record_value: string
    string resource_record_value = 4 [json_name = "resource_record_value"];
  }

  message Options {
    string certificate_transparency_logging_preference = 1 [json_name = "certificate_transparency_logging_preference"];
  }
}

//AwsAcmCertificateValidation version is 0
message AwsAcmCertificateValidation {
  string certificate_arn = 1 [json_name = "certificate_arn"];

  string id = 2;

  repeated string validation_record_fqdns = 3 [json_name = "validation_record_fqdns"];

  Timeouts timeouts = 4;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message Timeouts {
    string create = 1;
  }
}

//AwsAcmpcaCertificateAuthority version is 1
message AwsAcmpcaCertificateAuthority {
  string arn = 1;

  string certificate = 2;

  string certificate_chain = 3 [json_name = "certificate_chain"];

  string certificate_signing_request = 4 [json_name = "certificate_signing_request"];

  bool enabled = 5;

  string id = 6;

  string not_after = 7 [json_name = "not_after"];

  string not_before = 8 [json_name = "not_before"];

  int64 permanent_deletion_time_in_days = 9 [json_name = "permanent_deletion_time_in_days"];

  string serial = 10;

  string status = 11;

  map<string, string> tags = 12;

  string type = 13;

  CertificateAuthorityConfiguration certificate_authority_configuration = 14 [json_name = "certificate_authority_configuration"];

  RevocationConfiguration revocation_configuration = 15 [json_name = "revocation_configuration"];

  Timeouts timeouts = 16;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 17;

  int32 count = 18;

  terraform.meta.MetaFields.ForEachEntry for_each = 19;

  string provider = 20;

  terraform.meta.Lifecycle lifecycle = 21;

  message CertificateAuthorityConfiguration {
    string key_algorithm = 1 [json_name = "key_algorithm"];

    string signing_algorithm = 2 [json_name = "signing_algorithm"];

    Subject subject = 3;

    message Subject {
      string common_name = 1 [json_name = "common_name"];

      string country = 2;

      string distinguished_name_qualifier = 3 [json_name = "distinguished_name_qualifier"];

      string generation_qualifier = 4 [json_name = "generation_qualifier"];

      string given_name = 5 [json_name = "given_name"];

      string initials = 6;

      string locality = 7;

      string organization = 8;

      string organizational_unit = 9 [json_name = "organizational_unit"];

      string pseudonym = 10;

      string state = 11;

      string surname = 12;

      string title = 13;
    }
  }

  message RevocationConfiguration {
    CrlConfiguration crl_configuration = 1 [json_name = "crl_configuration"];

    message CrlConfiguration {
      string custom_cname = 1 [json_name = "custom_cname"];

      bool enabled = 2;

      int64 expiration_in_days = 3 [json_name = "expiration_in_days"];

      string s3_bucket_name = 4 [json_name = "s3_bucket_name"];
    }
  }

  message Timeouts {
    string create = 1;
  }
}

//AwsAlb version is 0
message AwsAlb {
  string arn = 1;

  string arn_suffix = 2 [json_name = "arn_suffix"];

  string dns_name = 3 [json_name = "dns_name"];

  bool drop_invalid_header_fields = 4 [json_name = "drop_invalid_header_fields"];

  bool enable_cross_zone_load_balancing = 5 [json_name = "enable_cross_zone_load_balancing"];

  bool enable_deletion_protection = 6 [json_name = "enable_deletion_protection"];

  bool enable_http2 = 7 [json_name = "enable_http2"];

  string id = 8;

  int64 idle_timeout = 9 [json_name = "idle_timeout"];

  bool internal = 10;

  string ip_address_type = 11 [json_name = "ip_address_type"];

  string load_balancer_type = 12 [json_name = "load_balancer_type"];

  string name = 13;

  string name_prefix = 14 [json_name = "name_prefix"];

  repeated string security_groups = 15 [json_name = "security_groups"];

  repeated string subnets = 16;

  map<string, string> tags = 17;

  string vpc_id = 18 [json_name = "vpc_id"];

  string zone_id = 19 [json_name = "zone_id"];

  AccessLogs access_logs = 20 [json_name = "access_logs"];

  SubnetMapping subnet_mapping = 21 [json_name = "subnet_mapping"];

  Timeouts timeouts = 22;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 23;

  int32 count = 24;

  terraform.meta.MetaFields.ForEachEntry for_each = 25;

  string provider = 26;

  terraform.meta.Lifecycle lifecycle = 27;

  message AccessLogs {
    string bucket = 1;

    bool enabled = 2;

    string prefix = 3;
  }

  message SubnetMapping {
    string allocation_id = 1 [json_name = "allocation_id"];

    string subnet_id = 2 [json_name = "subnet_id"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsAlbListener version is 0
message AwsAlbListener {
  string arn = 1;

  string certificate_arn = 2 [json_name = "certificate_arn"];

  string id = 3;

  string load_balancer_arn = 4 [json_name = "load_balancer_arn"];

  int64 port = 5;

  string protocol = 6;

  string ssl_policy = 7 [json_name = "ssl_policy"];

  DefaultAction default_action = 8 [json_name = "default_action"];

  Timeouts timeouts = 9;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 10;

  int32 count = 11;

  terraform.meta.MetaFields.ForEachEntry for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message DefaultAction {
    int64 order = 1;

    string target_group_arn = 2 [json_name = "target_group_arn"];

    string type = 3;

    Redirect redirect = 4;

    AuthenticateCognito authenticate_cognito = 5 [json_name = "authenticate_cognito"];

    AuthenticateOidc authenticate_oidc = 6 [json_name = "authenticate_oidc"];

    FixedResponse fixed_response = 7 [json_name = "fixed_response"];

    message Redirect {
      string host = 1;

      string path = 2;

      string port = 3;

      string protocol = 4;

      string query = 5;

      string status_code = 6 [json_name = "status_code"];
    }

    message AuthenticateCognito {
      map<string, string> authentication_request_extra_params = 1;

      string on_unauthenticated_request = 2 [json_name = "on_unauthenticated_request"];

      string scope = 3;

      string session_cookie_name = 4 [json_name = "session_cookie_name"];

      int64 session_timeout = 5 [json_name = "session_timeout"];

      string user_pool_arn = 6 [json_name = "user_pool_arn"];

      string user_pool_client_id = 7 [json_name = "user_pool_client_id"];

      string user_pool_domain = 8 [json_name = "user_pool_domain"];
    }

    message AuthenticateOidc {
      map<string, string> authentication_request_extra_params = 1;

      string authorization_endpoint = 2 [json_name = "authorization_endpoint"];

      string client_id = 3 [json_name = "client_id"];

      string client_secret = 4 [json_name = "client_secret"];

      string issuer = 5;

      string on_unauthenticated_request = 6 [json_name = "on_unauthenticated_request"];

      string scope = 7;

      string session_cookie_name = 8 [json_name = "session_cookie_name"];

      int64 session_timeout = 9 [json_name = "session_timeout"];

      string token_endpoint = 10 [json_name = "token_endpoint"];

      string user_info_endpoint = 11 [json_name = "user_info_endpoint"];
    }

    message FixedResponse {
      string content_type = 1 [json_name = "content_type"];

      string message_body = 2 [json_name = "message_body"];

      string status_code = 3 [json_name = "status_code"];
    }
  }

  message Timeouts {
    string read = 1;
  }
}

//AwsAlbListenerCertificate version is 0
message AwsAlbListenerCertificate {
  string certificate_arn = 1 [json_name = "certificate_arn"];

  string id = 2;

  string listener_arn = 3 [json_name = "listener_arn"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsAlbListenerRule version is 0
message AwsAlbListenerRule {
  string arn = 1;

  string id = 2;

  string listener_arn = 3 [json_name = "listener_arn"];

  int64 priority = 4;

  Action action = 5;

  Condition condition = 6;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message Action {
    int64 order = 1;

    string target_group_arn = 2 [json_name = "target_group_arn"];

    string type = 3;

    Redirect redirect = 4;

    AuthenticateCognito authenticate_cognito = 5 [json_name = "authenticate_cognito"];

    AuthenticateOidc authenticate_oidc = 6 [json_name = "authenticate_oidc"];

    FixedResponse fixed_response = 7 [json_name = "fixed_response"];

    message Redirect {
      string host = 1;

      string path = 2;

      string port = 3;

      string protocol = 4;

      string query = 5;

      string status_code = 6 [json_name = "status_code"];
    }

    message AuthenticateCognito {
      map<string, string> authentication_request_extra_params = 1;

      string on_unauthenticated_request = 2 [json_name = "on_unauthenticated_request"];

      string scope = 3;

      string session_cookie_name = 4 [json_name = "session_cookie_name"];

      int64 session_timeout = 5 [json_name = "session_timeout"];

      string user_pool_arn = 6 [json_name = "user_pool_arn"];

      string user_pool_client_id = 7 [json_name = "user_pool_client_id"];

      string user_pool_domain = 8 [json_name = "user_pool_domain"];
    }

    message AuthenticateOidc {
      map<string, string> authentication_request_extra_params = 1;

      string authorization_endpoint = 2 [json_name = "authorization_endpoint"];

      string client_id = 3 [json_name = "client_id"];

      string client_secret = 4 [json_name = "client_secret"];

      string issuer = 5;

      string on_unauthenticated_request = 6 [json_name = "on_unauthenticated_request"];

      string scope = 7;

      string session_cookie_name = 8 [json_name = "session_cookie_name"];

      int64 session_timeout = 9 [json_name = "session_timeout"];

      string token_endpoint = 10 [json_name = "token_endpoint"];

      string user_info_endpoint = 11 [json_name = "user_info_endpoint"];
    }

    message FixedResponse {
      string content_type = 1 [json_name = "content_type"];

      string message_body = 2 [json_name = "message_body"];

      string status_code = 3 [json_name = "status_code"];
    }
  }

  message Condition {
    string field = 1;

    repeated string values = 2;

    HttpRequestMethod http_request_method = 3 [json_name = "http_request_method"];

    PathPattern path_pattern = 4 [json_name = "path_pattern"];

    QueryString query_string = 5 [json_name = "query_string"];

    SourceIp source_ip = 6 [json_name = "source_ip"];

    HostHeader host_header = 7 [json_name = "host_header"];

    HttpHeader http_header = 8 [json_name = "http_header"];

    message HttpRequestMethod {
      repeated string values = 1;
    }

    message PathPattern {
      repeated string values = 1;
    }

    message QueryString {
      string key = 1;

      string value = 2;
    }

    message SourceIp {
      repeated string values = 1;
    }

    message HostHeader {
      repeated string values = 1;
    }

    message HttpHeader {
      string http_header_name = 1 [json_name = "http_header_name"];

      repeated string values = 2;
    }
  }
}

//AwsAlbTargetGroup version is 0
message AwsAlbTargetGroup {
  string arn = 1;

  string arn_suffix = 2 [json_name = "arn_suffix"];

  int64 deregistration_delay = 3 [json_name = "deregistration_delay"];

  string id = 4;

  bool lambda_multi_value_headers_enabled = 5 [json_name = "lambda_multi_value_headers_enabled"];

  string load_balancing_algorithm_type = 6 [json_name = "load_balancing_algorithm_type"];

  string name = 7;

  string name_prefix = 8 [json_name = "name_prefix"];

  int64 port = 9;

  string protocol = 10;

  bool proxy_protocol_v2 = 11 [json_name = "proxy_protocol_v2"];

  int64 slow_start = 12 [json_name = "slow_start"];

  map<string, string> tags = 13;

  string target_type = 14 [json_name = "target_type"];

  string vpc_id = 15 [json_name = "vpc_id"];

  HealthCheck health_check = 16 [json_name = "health_check"];

  Stickiness stickiness = 17;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 18;

  int32 count = 19;

  terraform.meta.MetaFields.ForEachEntry for_each = 20;

  string provider = 21;

  terraform.meta.Lifecycle lifecycle = 22;

  message HealthCheck {
    bool enabled = 1;

    int64 healthy_threshold = 2 [json_name = "healthy_threshold"];

    int64 interval = 3;

    string matcher = 4;

    string path = 5;

    string port = 6;

    string protocol = 7;

    int64 timeout = 8;

    int64 unhealthy_threshold = 9 [json_name = "unhealthy_threshold"];
  }

  message Stickiness {
    int64 cookie_duration = 1 [json_name = "cookie_duration"];

    bool enabled = 2;

    string type = 3;
  }
}

//AwsAlbTargetGroupAttachment version is 0
message AwsAlbTargetGroupAttachment {
  string availability_zone = 1 [json_name = "availability_zone"];

  string id = 2;

  int64 port = 3;

  string target_group_arn = 4 [json_name = "target_group_arn"];

  string target_id = 5 [json_name = "target_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsAmi version is 0
message AwsAmi {
  string architecture = 1;

  string description = 2;

  bool ena_support = 3 [json_name = "ena_support"];

  string id = 4;

  string image_location = 5 [json_name = "image_location"];

  string kernel_id = 6 [json_name = "kernel_id"];

  bool manage_ebs_snapshots = 7 [json_name = "manage_ebs_snapshots"];

  string name = 8;

  string ramdisk_id = 9 [json_name = "ramdisk_id"];

  string root_device_name = 10 [json_name = "root_device_name"];

  string root_snapshot_id = 11 [json_name = "root_snapshot_id"];

  string sriov_net_support = 12 [json_name = "sriov_net_support"];

  map<string, string> tags = 13;

  string virtualization_type = 14 [json_name = "virtualization_type"];

  Timeouts timeouts = 15;

  EbsBlockDevice ebs_block_device = 16 [json_name = "ebs_block_device"];

  EphemeralBlockDevice ephemeral_block_device = 17 [json_name = "ephemeral_block_device"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 18;

  int32 count = 19;

  terraform.meta.MetaFields.ForEachEntry for_each = 20;

  string provider = 21;

  terraform.meta.Lifecycle lifecycle = 22;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }

  message EbsBlockDevice {
    bool delete_on_termination = 1 [json_name = "delete_on_termination"];

    string device_name = 2 [json_name = "device_name"];

    bool encrypted = 3;

    int64 iops = 4;

    string snapshot_id = 5 [json_name = "snapshot_id"];

    int64 volume_size = 6 [json_name = "volume_size"];

    string volume_type = 7 [json_name = "volume_type"];
  }

  message EphemeralBlockDevice {
    string device_name = 1 [json_name = "device_name"];

    string virtual_name = 2 [json_name = "virtual_name"];
  }
}

//AwsAmiCopy version is 0
message AwsAmiCopy {
  string architecture = 1;

  string description = 2;

  bool ena_support = 3 [json_name = "ena_support"];

  bool encrypted = 4;

  string id = 5;

  string image_location = 6 [json_name = "image_location"];

  string kernel_id = 7 [json_name = "kernel_id"];

  string kms_key_id = 8 [json_name = "kms_key_id"];

  bool manage_ebs_snapshots = 9 [json_name = "manage_ebs_snapshots"];

  string name = 10;

  string ramdisk_id = 11 [json_name = "ramdisk_id"];

  string root_device_name = 12 [json_name = "root_device_name"];

  string root_snapshot_id = 13 [json_name = "root_snapshot_id"];

  string source_ami_id = 14 [json_name = "source_ami_id"];

  string source_ami_region = 15 [json_name = "source_ami_region"];

  string sriov_net_support = 16 [json_name = "sriov_net_support"];

  map<string, string> tags = 17;

  string virtualization_type = 18 [json_name = "virtualization_type"];

  EbsBlockDevice ebs_block_device = 19 [json_name = "ebs_block_device"];

  EphemeralBlockDevice ephemeral_block_device = 20 [json_name = "ephemeral_block_device"];

  Timeouts timeouts = 21;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 22;

  int32 count = 23;

  terraform.meta.MetaFields.ForEachEntry for_each = 24;

  string provider = 25;

  terraform.meta.Lifecycle lifecycle = 26;

  message EbsBlockDevice {
    bool delete_on_termination = 1 [json_name = "delete_on_termination"];

    string device_name = 2 [json_name = "device_name"];

    bool encrypted = 3;

    int64 iops = 4;

    string snapshot_id = 5 [json_name = "snapshot_id"];

    int64 volume_size = 6 [json_name = "volume_size"];

    string volume_type = 7 [json_name = "volume_type"];
  }

  message EphemeralBlockDevice {
    string device_name = 1 [json_name = "device_name"];

    string virtual_name = 2 [json_name = "virtual_name"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsAmiFromInstance version is 0
message AwsAmiFromInstance {
  string architecture = 1;

  string description = 2;

  bool ena_support = 3 [json_name = "ena_support"];

  string id = 4;

  string image_location = 5 [json_name = "image_location"];

  string kernel_id = 6 [json_name = "kernel_id"];

  bool manage_ebs_snapshots = 7 [json_name = "manage_ebs_snapshots"];

  string name = 8;

  string ramdisk_id = 9 [json_name = "ramdisk_id"];

  string root_device_name = 10 [json_name = "root_device_name"];

  string root_snapshot_id = 11 [json_name = "root_snapshot_id"];

  bool snapshot_without_reboot = 12 [json_name = "snapshot_without_reboot"];

  string source_instance_id = 13 [json_name = "source_instance_id"];

  string sriov_net_support = 14 [json_name = "sriov_net_support"];

  map<string, string> tags = 15;

  string virtualization_type = 16 [json_name = "virtualization_type"];

  EbsBlockDevice ebs_block_device = 17 [json_name = "ebs_block_device"];

  EphemeralBlockDevice ephemeral_block_device = 18 [json_name = "ephemeral_block_device"];

  Timeouts timeouts = 19;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 20;

  int32 count = 21;

  terraform.meta.MetaFields.ForEachEntry for_each = 22;

  string provider = 23;

  terraform.meta.Lifecycle lifecycle = 24;

  message EbsBlockDevice {
    bool delete_on_termination = 1 [json_name = "delete_on_termination"];

    string device_name = 2 [json_name = "device_name"];

    bool encrypted = 3;

    int64 iops = 4;

    string snapshot_id = 5 [json_name = "snapshot_id"];

    int64 volume_size = 6 [json_name = "volume_size"];

    string volume_type = 7 [json_name = "volume_type"];
  }

  message EphemeralBlockDevice {
    string device_name = 1 [json_name = "device_name"];

    string virtual_name = 2 [json_name = "virtual_name"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsAmiLaunchPermission version is 0
message AwsAmiLaunchPermission {
  string account_id = 1 [json_name = "account_id"];

  string id = 2;

  string image_id = 3 [json_name = "image_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsApiGatewayAccount version is 0
message AwsApiGatewayAccount {
  string cloudwatch_role_arn = 1 [json_name = "cloudwatch_role_arn"];

  string id = 2;

  repeated ThrottleSettings throttle_settings = 3 [json_name = "throttle_settings"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message ThrottleSettings {
    //burst_limit: number
    int64 burst_limit = 1 [json_name = "burst_limit"];

    //rate_limit: number
    int64 rate_limit = 2 [json_name = "rate_limit"];
  }
}

//AwsApiGatewayApiKey version is 0
message AwsApiGatewayApiKey {
  string arn = 1;

  string created_date = 2 [json_name = "created_date"];

  string description = 3;

  bool enabled = 4;

  string id = 5;

  string last_updated_date = 6 [json_name = "last_updated_date"];

  string name = 7;

  map<string, string> tags = 8;

  string value = 9;

  StageKey stage_key = 10 [json_name = "stage_key"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 11;

  int32 count = 12;

  terraform.meta.MetaFields.ForEachEntry for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message StageKey {
    string rest_api_id = 1 [json_name = "rest_api_id"];

    string stage_name = 2 [json_name = "stage_name"];
  }
}

//AwsApiGatewayAuthorizer version is 0
message AwsApiGatewayAuthorizer {
  string authorizer_credentials = 1 [json_name = "authorizer_credentials"];

  int64 authorizer_result_ttl_in_seconds = 2 [json_name = "authorizer_result_ttl_in_seconds"];

  string authorizer_uri = 3 [json_name = "authorizer_uri"];

  string id = 4;

  string identity_source = 5 [json_name = "identity_source"];

  string identity_validation_expression = 6 [json_name = "identity_validation_expression"];

  string name = 7;

  repeated string provider_arns = 8 [json_name = "provider_arns"];

  string rest_api_id = 9 [json_name = "rest_api_id"];

  string type = 10;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 11;

  int32 count = 12;

  terraform.meta.MetaFields.ForEachEntry for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsApiGatewayBasePathMapping version is 0
message AwsApiGatewayBasePathMapping {
  string api_id = 1 [json_name = "api_id"];

  string base_path = 2 [json_name = "base_path"];

  string domain_name = 3 [json_name = "domain_name"];

  string id = 4;

  string stage_name = 5 [json_name = "stage_name"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsApiGatewayClientCertificate version is 0
message AwsApiGatewayClientCertificate {
  string arn = 1;

  string created_date = 2 [json_name = "created_date"];

  string description = 3;

  string expiration_date = 4 [json_name = "expiration_date"];

  string id = 5;

  string pem_encoded_certificate = 6 [json_name = "pem_encoded_certificate"];

  map<string, string> tags = 7;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsApiGatewayDeployment version is 0
message AwsApiGatewayDeployment {
  string created_date = 1 [json_name = "created_date"];

  string description = 2;

  string execution_arn = 3 [json_name = "execution_arn"];

  string id = 4;

  string invoke_url = 5 [json_name = "invoke_url"];

  string rest_api_id = 6 [json_name = "rest_api_id"];

  string stage_description = 7 [json_name = "stage_description"];

  string stage_name = 8 [json_name = "stage_name"];

  map<string, string> variables = 9;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 10;

  int32 count = 11;

  terraform.meta.MetaFields.ForEachEntry for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;
}

//AwsApiGatewayDocumentationPart version is 0
message AwsApiGatewayDocumentationPart {
  string id = 1;

  string properties = 2;

  string rest_api_id = 3 [json_name = "rest_api_id"];

  Location location = 4;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message Location {
    string method = 1;

    string name = 2;

    string path = 3;

    string status_code = 4 [json_name = "status_code"];

    string type = 5;
  }
}

//AwsApiGatewayDocumentationVersion version is 0
message AwsApiGatewayDocumentationVersion {
  string description = 1;

  string id = 2;

  string rest_api_id = 3 [json_name = "rest_api_id"];

  string version = 4;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsApiGatewayDomainName version is 0
message AwsApiGatewayDomainName {
  string arn = 1;

  string certificate_arn = 2 [json_name = "certificate_arn"];

  string certificate_body = 3 [json_name = "certificate_body"];

  string certificate_chain = 4 [json_name = "certificate_chain"];

  string certificate_name = 5 [json_name = "certificate_name"];

  string certificate_private_key = 6 [json_name = "certificate_private_key"];

  string certificate_upload_date = 7 [json_name = "certificate_upload_date"];

  string cloudfront_domain_name = 8 [json_name = "cloudfront_domain_name"];

  string cloudfront_zone_id = 9 [json_name = "cloudfront_zone_id"];

  string domain_name = 10 [json_name = "domain_name"];

  string id = 11;

  string regional_certificate_arn = 12 [json_name = "regional_certificate_arn"];

  string regional_certificate_name = 13 [json_name = "regional_certificate_name"];

  string regional_domain_name = 14 [json_name = "regional_domain_name"];

  string regional_zone_id = 15 [json_name = "regional_zone_id"];

  string security_policy = 16 [json_name = "security_policy"];

  map<string, string> tags = 17;

  EndpointConfiguration endpoint_configuration = 18 [json_name = "endpoint_configuration"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 19;

  int32 count = 20;

  terraform.meta.MetaFields.ForEachEntry for_each = 21;

  string provider = 22;

  terraform.meta.Lifecycle lifecycle = 23;

  message EndpointConfiguration {
    repeated string types = 1;
  }
}

//AwsApiGatewayGatewayResponse version is 0
message AwsApiGatewayGatewayResponse {
  string id = 1;

  map<string, string> response_parameters = 2;

  map<string, string> response_templates = 3;

  string response_type = 4 [json_name = "response_type"];

  string rest_api_id = 5 [json_name = "rest_api_id"];

  string status_code = 6 [json_name = "status_code"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsApiGatewayIntegration version is 0
message AwsApiGatewayIntegration {
  repeated string cache_key_parameters = 1 [json_name = "cache_key_parameters"];

  string cache_namespace = 2 [json_name = "cache_namespace"];

  string connection_id = 3 [json_name = "connection_id"];

  string connection_type = 4 [json_name = "connection_type"];

  string content_handling = 5 [json_name = "content_handling"];

  string credentials = 6;

  string http_method = 7 [json_name = "http_method"];

  string id = 8;

  string integration_http_method = 9 [json_name = "integration_http_method"];

  string passthrough_behavior = 10 [json_name = "passthrough_behavior"];

  map<string, string> request_parameters = 11;

  string request_parameters_in_json = 12 [json_name = "request_parameters_in_json"];

  map<string, string> request_templates = 13;

  string resource_id = 14 [json_name = "resource_id"];

  string rest_api_id = 15 [json_name = "rest_api_id"];

  int64 timeout_milliseconds = 16 [json_name = "timeout_milliseconds"];

  string type = 17;

  string uri = 18;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 19;

  int32 count = 20;

  terraform.meta.MetaFields.ForEachEntry for_each = 21;

  string provider = 22;

  terraform.meta.Lifecycle lifecycle = 23;
}

//AwsApiGatewayIntegrationResponse version is 0
message AwsApiGatewayIntegrationResponse {
  string content_handling = 1 [json_name = "content_handling"];

  string http_method = 2 [json_name = "http_method"];

  string id = 3;

  string resource_id = 4 [json_name = "resource_id"];

  map<string, string> response_parameters = 5;

  string response_parameters_in_json = 6 [json_name = "response_parameters_in_json"];

  map<string, string> response_templates = 7;

  string rest_api_id = 8 [json_name = "rest_api_id"];

  string selection_pattern = 9 [json_name = "selection_pattern"];

  string status_code = 10 [json_name = "status_code"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 11;

  int32 count = 12;

  terraform.meta.MetaFields.ForEachEntry for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsApiGatewayMethod version is 0
message AwsApiGatewayMethod {
  bool api_key_required = 1 [json_name = "api_key_required"];

  string authorization = 2;

  repeated string authorization_scopes = 3 [json_name = "authorization_scopes"];

  string authorizer_id = 4 [json_name = "authorizer_id"];

  string http_method = 5 [json_name = "http_method"];

  string id = 6;

  map<string, string> request_models = 7;

  map<string, string> request_parameters = 8;

  string request_parameters_in_json = 9 [json_name = "request_parameters_in_json"];

  string request_validator_id = 10 [json_name = "request_validator_id"];

  string resource_id = 11 [json_name = "resource_id"];

  string rest_api_id = 12 [json_name = "rest_api_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 13;

  int32 count = 14;

  terraform.meta.MetaFields.ForEachEntry for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;
}

//AwsApiGatewayMethodResponse version is 0
message AwsApiGatewayMethodResponse {
  string http_method = 1 [json_name = "http_method"];

  string id = 2;

  string resource_id = 3 [json_name = "resource_id"];

  map<string, string> response_models = 4;

  map<string, string> response_parameters = 5;

  string response_parameters_in_json = 6 [json_name = "response_parameters_in_json"];

  string rest_api_id = 7 [json_name = "rest_api_id"];

  string status_code = 8 [json_name = "status_code"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsApiGatewayMethodSettings version is 0
message AwsApiGatewayMethodSettings {
  string id = 1;

  string method_path = 2 [json_name = "method_path"];

  string rest_api_id = 3 [json_name = "rest_api_id"];

  string stage_name = 4 [json_name = "stage_name"];

  Settings settings = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message Settings {
    bool cache_data_encrypted = 1 [json_name = "cache_data_encrypted"];

    int64 cache_ttl_in_seconds = 2 [json_name = "cache_ttl_in_seconds"];

    bool caching_enabled = 3 [json_name = "caching_enabled"];

    bool data_trace_enabled = 4 [json_name = "data_trace_enabled"];

    string logging_level = 5 [json_name = "logging_level"];

    bool metrics_enabled = 6 [json_name = "metrics_enabled"];

    bool require_authorization_for_cache_control = 7 [json_name = "require_authorization_for_cache_control"];

    int64 throttling_burst_limit = 8 [json_name = "throttling_burst_limit"];

    int64 throttling_rate_limit = 9 [json_name = "throttling_rate_limit"];

    string unauthorized_cache_control_header_strategy = 10 [json_name = "unauthorized_cache_control_header_strategy"];
  }
}

//AwsApiGatewayModel version is 0
message AwsApiGatewayModel {
  string content_type = 1 [json_name = "content_type"];

  string description = 2;

  string id = 3;

  string name = 4;

  string rest_api_id = 5 [json_name = "rest_api_id"];

  string schema = 6;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsApiGatewayRequestValidator version is 0
message AwsApiGatewayRequestValidator {
  string id = 1;

  string name = 2;

  string rest_api_id = 3 [json_name = "rest_api_id"];

  bool validate_request_body = 4 [json_name = "validate_request_body"];

  bool validate_request_parameters = 5 [json_name = "validate_request_parameters"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsApiGatewayResource version is 0
message AwsApiGatewayResource {
  string id = 1;

  string parent_id = 2 [json_name = "parent_id"];

  string path = 3;

  string path_part = 4 [json_name = "path_part"];

  string rest_api_id = 5 [json_name = "rest_api_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsApiGatewayRestApi version is 0
message AwsApiGatewayRestApi {
  string api_key_source = 1 [json_name = "api_key_source"];

  string arn = 2;

  repeated string binary_media_types = 3 [json_name = "binary_media_types"];

  string body = 4;

  string created_date = 5 [json_name = "created_date"];

  string description = 6;

  string execution_arn = 7 [json_name = "execution_arn"];

  string id = 8;

  int64 minimum_compression_size = 9 [json_name = "minimum_compression_size"];

  string name = 10;

  string policy = 11;

  string root_resource_id = 12 [json_name = "root_resource_id"];

  map<string, string> tags = 13;

  EndpointConfiguration endpoint_configuration = 14 [json_name = "endpoint_configuration"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 15;

  int32 count = 16;

  terraform.meta.MetaFields.ForEachEntry for_each = 17;

  string provider = 18;

  terraform.meta.Lifecycle lifecycle = 19;

  message EndpointConfiguration {
    repeated string types = 1;

    repeated string vpc_endpoint_ids = 2 [json_name = "vpc_endpoint_ids"];
  }
}

//AwsApiGatewayStage version is 0
message AwsApiGatewayStage {
  string arn = 1;

  bool cache_cluster_enabled = 2 [json_name = "cache_cluster_enabled"];

  string cache_cluster_size = 3 [json_name = "cache_cluster_size"];

  string client_certificate_id = 4 [json_name = "client_certificate_id"];

  string deployment_id = 5 [json_name = "deployment_id"];

  string description = 6;

  string documentation_version = 7 [json_name = "documentation_version"];

  string execution_arn = 8 [json_name = "execution_arn"];

  string id = 9;

  string invoke_url = 10 [json_name = "invoke_url"];

  string rest_api_id = 11 [json_name = "rest_api_id"];

  string stage_name = 12 [json_name = "stage_name"];

  map<string, string> tags = 13;

  map<string, string> variables = 14;

  bool xray_tracing_enabled = 15 [json_name = "xray_tracing_enabled"];

  AccessLogSettings access_log_settings = 16 [json_name = "access_log_settings"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 17;

  int32 count = 18;

  terraform.meta.MetaFields.ForEachEntry for_each = 19;

  string provider = 20;

  terraform.meta.Lifecycle lifecycle = 21;

  message AccessLogSettings {
    string destination_arn = 1 [json_name = "destination_arn"];

    string format = 2;
  }
}

//AwsApiGatewayUsagePlan version is 0
message AwsApiGatewayUsagePlan {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  string product_code = 5 [json_name = "product_code"];

  map<string, string> tags = 6;

  ThrottleSettings throttle_settings = 7 [json_name = "throttle_settings"];

  ApiStages api_stages = 8 [json_name = "api_stages"];

  QuotaSettings quota_settings = 9 [json_name = "quota_settings"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 10;

  int32 count = 11;

  terraform.meta.MetaFields.ForEachEntry for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message ThrottleSettings {
    int64 burst_limit = 1 [json_name = "burst_limit"];

    int64 rate_limit = 2 [json_name = "rate_limit"];
  }

  message ApiStages {
    string api_id = 1 [json_name = "api_id"];

    string stage = 2;
  }

  message QuotaSettings {
    int64 limit = 1;

    int64 offset = 2;

    string period = 3;
  }
}

//AwsApiGatewayUsagePlanKey version is 0
message AwsApiGatewayUsagePlanKey {
  string id = 1;

  string key_id = 2 [json_name = "key_id"];

  string key_type = 3 [json_name = "key_type"];

  string name = 4;

  string usage_plan_id = 5 [json_name = "usage_plan_id"];

  string value = 6;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsApiGatewayVpcLink version is 0
message AwsApiGatewayVpcLink {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  map<string, string> tags = 5;

  repeated string target_arns = 6 [json_name = "target_arns"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsApigatewayv2Api version is 0
message AwsApigatewayv2Api {
  string api_endpoint = 1 [json_name = "api_endpoint"];

  string api_key_selection_expression = 2 [json_name = "api_key_selection_expression"];

  string arn = 3;

  string description = 4;

  string execution_arn = 5 [json_name = "execution_arn"];

  string id = 6;

  string name = 7;

  string protocol_type = 8 [json_name = "protocol_type"];

  string route_selection_expression = 9 [json_name = "route_selection_expression"];

  map<string, string> tags = 10;

  string version = 11;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 12;

  int32 count = 13;

  terraform.meta.MetaFields.ForEachEntry for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;
}

//AwsApigatewayv2Authorizer version is 0
message AwsApigatewayv2Authorizer {
  string api_id = 1 [json_name = "api_id"];

  string authorizer_credentials_arn = 2 [json_name = "authorizer_credentials_arn"];

  string authorizer_type = 3 [json_name = "authorizer_type"];

  string authorizer_uri = 4 [json_name = "authorizer_uri"];

  string id = 5;

  repeated string identity_sources = 6 [json_name = "identity_sources"];

  string name = 7;

  JwtConfiguration jwt_configuration = 8 [json_name = "jwt_configuration"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message JwtConfiguration {
    repeated string audience = 1;

    string issuer = 2;
  }
}

//AwsApigatewayv2Deployment version is 0
message AwsApigatewayv2Deployment {
  string api_id = 1 [json_name = "api_id"];

  bool auto_deployed = 2 [json_name = "auto_deployed"];

  string description = 3;

  string id = 4;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsApigatewayv2DomainName version is 0
message AwsApigatewayv2DomainName {
  string api_mapping_selection_expression = 1 [json_name = "api_mapping_selection_expression"];

  string arn = 2;

  string domain_name = 3 [json_name = "domain_name"];

  string id = 4;

  map<string, string> tags = 5;

  Timeouts timeouts = 6;

  DomainNameConfiguration domain_name_configuration = 7 [json_name = "domain_name_configuration"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message Timeouts {
    string update = 1;
  }

  message DomainNameConfiguration {
    string certificate_arn = 1 [json_name = "certificate_arn"];

    string endpoint_type = 2 [json_name = "endpoint_type"];

    string hosted_zone_id = 3 [json_name = "hosted_zone_id"];

    string security_policy = 4 [json_name = "security_policy"];

    string target_domain_name = 5 [json_name = "target_domain_name"];
  }
}

//AwsApigatewayv2Integration version is 0
message AwsApigatewayv2Integration {
  string api_id = 1 [json_name = "api_id"];

  string connection_id = 2 [json_name = "connection_id"];

  string connection_type = 3 [json_name = "connection_type"];

  string content_handling_strategy = 4 [json_name = "content_handling_strategy"];

  string credentials_arn = 5 [json_name = "credentials_arn"];

  string description = 6;

  string id = 7;

  string integration_method = 8 [json_name = "integration_method"];

  string integration_response_selection_expression = 9 [json_name = "integration_response_selection_expression"];

  string integration_type = 10 [json_name = "integration_type"];

  string integration_uri = 11 [json_name = "integration_uri"];

  string passthrough_behavior = 12 [json_name = "passthrough_behavior"];

  string payload_format_version = 13 [json_name = "payload_format_version"];

  map<string, string> request_templates = 14;

  string template_selection_expression = 15 [json_name = "template_selection_expression"];

  int64 timeout_milliseconds = 16 [json_name = "timeout_milliseconds"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 17;

  int32 count = 18;

  terraform.meta.MetaFields.ForEachEntry for_each = 19;

  string provider = 20;

  terraform.meta.Lifecycle lifecycle = 21;
}

//AwsApigatewayv2IntegrationResponse version is 0
message AwsApigatewayv2IntegrationResponse {
  string api_id = 1 [json_name = "api_id"];

  string content_handling_strategy = 2 [json_name = "content_handling_strategy"];

  string id = 3;

  string integration_id = 4 [json_name = "integration_id"];

  string integration_response_key = 5 [json_name = "integration_response_key"];

  map<string, string> response_templates = 6;

  string template_selection_expression = 7 [json_name = "template_selection_expression"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsApigatewayv2Model version is 0
message AwsApigatewayv2Model {
  string api_id = 1 [json_name = "api_id"];

  string content_type = 2 [json_name = "content_type"];

  string description = 3;

  string id = 4;

  string name = 5;

  string schema = 6;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsApigatewayv2Route version is 0
message AwsApigatewayv2Route {
  string api_id = 1 [json_name = "api_id"];

  bool api_key_required = 2 [json_name = "api_key_required"];

  repeated string authorization_scopes = 3 [json_name = "authorization_scopes"];

  string authorization_type = 4 [json_name = "authorization_type"];

  string authorizer_id = 5 [json_name = "authorizer_id"];

  string id = 6;

  string model_selection_expression = 7 [json_name = "model_selection_expression"];

  string operation_name = 8 [json_name = "operation_name"];

  map<string, string> request_models = 9;

  string route_key = 10 [json_name = "route_key"];

  string route_response_selection_expression = 11 [json_name = "route_response_selection_expression"];

  string target = 12;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 13;

  int32 count = 14;

  terraform.meta.MetaFields.ForEachEntry for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;
}

//AwsApigatewayv2RouteResponse version is 0
message AwsApigatewayv2RouteResponse {
  string api_id = 1 [json_name = "api_id"];

  string id = 2;

  string model_selection_expression = 3 [json_name = "model_selection_expression"];

  map<string, string> response_models = 4;

  string route_id = 5 [json_name = "route_id"];

  string route_response_key = 6 [json_name = "route_response_key"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsApigatewayv2Stage version is 0
message AwsApigatewayv2Stage {
  string api_id = 1 [json_name = "api_id"];

  string arn = 2;

  bool auto_deploy = 3 [json_name = "auto_deploy"];

  string client_certificate_id = 4 [json_name = "client_certificate_id"];

  string deployment_id = 5 [json_name = "deployment_id"];

  string description = 6;

  string execution_arn = 7 [json_name = "execution_arn"];

  string id = 8;

  string invoke_url = 9 [json_name = "invoke_url"];

  string name = 10;

  map<string, string> stage_variables = 11;

  map<string, string> tags = 12;

  AccessLogSettings access_log_settings = 13 [json_name = "access_log_settings"];

  DefaultRouteSettings default_route_settings = 14 [json_name = "default_route_settings"];

  RouteSettings route_settings = 15 [json_name = "route_settings"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 16;

  int32 count = 17;

  terraform.meta.MetaFields.ForEachEntry for_each = 18;

  string provider = 19;

  terraform.meta.Lifecycle lifecycle = 20;

  message AccessLogSettings {
    string destination_arn = 1 [json_name = "destination_arn"];

    string format = 2;
  }

  message DefaultRouteSettings {
    bool data_trace_enabled = 1 [json_name = "data_trace_enabled"];

    bool detailed_metrics_enabled = 2 [json_name = "detailed_metrics_enabled"];

    string logging_level = 3 [json_name = "logging_level"];

    int64 throttling_burst_limit = 4 [json_name = "throttling_burst_limit"];

    int64 throttling_rate_limit = 5 [json_name = "throttling_rate_limit"];
  }

  message RouteSettings {
    bool data_trace_enabled = 1 [json_name = "data_trace_enabled"];

    bool detailed_metrics_enabled = 2 [json_name = "detailed_metrics_enabled"];

    string logging_level = 3 [json_name = "logging_level"];

    string route_key = 4 [json_name = "route_key"];

    int64 throttling_burst_limit = 5 [json_name = "throttling_burst_limit"];

    int64 throttling_rate_limit = 6 [json_name = "throttling_rate_limit"];
  }
}

//AwsAppCookieStickinessPolicy version is 0
message AwsAppCookieStickinessPolicy {
  string cookie_name = 1 [json_name = "cookie_name"];

  string id = 2;

  int64 lb_port = 3 [json_name = "lb_port"];

  string load_balancer = 4 [json_name = "load_balancer"];

  string name = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsAppautoscalingPolicy version is 0
message AwsAppautoscalingPolicy {
  string adjustment_type = 1 [json_name = "adjustment_type"];

  string arn = 2;

  int64 cooldown = 3;

  string id = 4;

  string metric_aggregation_type = 5 [json_name = "metric_aggregation_type"];

  int64 min_adjustment_magnitude = 6 [json_name = "min_adjustment_magnitude"];

  string name = 7;

  string policy_type = 8 [json_name = "policy_type"];

  string resource_id = 9 [json_name = "resource_id"];

  string scalable_dimension = 10 [json_name = "scalable_dimension"];

  string service_namespace = 11 [json_name = "service_namespace"];

  StepAdjustment step_adjustment = 12 [json_name = "step_adjustment"];

  StepScalingPolicyConfiguration step_scaling_policy_configuration = 13 [json_name = "step_scaling_policy_configuration"];

  TargetTrackingScalingPolicyConfiguration target_tracking_scaling_policy_configuration = 14 [json_name = "target_tracking_scaling_policy_configuration"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 15;

  int32 count = 16;

  terraform.meta.MetaFields.ForEachEntry for_each = 17;

  string provider = 18;

  terraform.meta.Lifecycle lifecycle = 19;

  message StepAdjustment {
    string metric_interval_lower_bound = 1 [json_name = "metric_interval_lower_bound"];

    string metric_interval_upper_bound = 2 [json_name = "metric_interval_upper_bound"];

    int64 scaling_adjustment = 3 [json_name = "scaling_adjustment"];
  }

  message StepScalingPolicyConfiguration {
    string adjustment_type = 1 [json_name = "adjustment_type"];

    int64 cooldown = 2;

    string metric_aggregation_type = 3 [json_name = "metric_aggregation_type"];

    int64 min_adjustment_magnitude = 4 [json_name = "min_adjustment_magnitude"];

    StepAdjustment step_adjustment = 5 [json_name = "step_adjustment"];

    message StepAdjustment {
      string metric_interval_lower_bound = 1 [json_name = "metric_interval_lower_bound"];

      string metric_interval_upper_bound = 2 [json_name = "metric_interval_upper_bound"];

      int64 scaling_adjustment = 3 [json_name = "scaling_adjustment"];
    }
  }

  message TargetTrackingScalingPolicyConfiguration {
    bool disable_scale_in = 1 [json_name = "disable_scale_in"];

    int64 scale_in_cooldown = 2 [json_name = "scale_in_cooldown"];

    int64 scale_out_cooldown = 3 [json_name = "scale_out_cooldown"];

    int64 target_value = 4 [json_name = "target_value"];

    CustomizedMetricSpecification customized_metric_specification = 5 [json_name = "customized_metric_specification"];

    PredefinedMetricSpecification predefined_metric_specification = 6 [json_name = "predefined_metric_specification"];

    message CustomizedMetricSpecification {
      string metric_name = 1 [json_name = "metric_name"];

      string namespace = 2;

      string statistic = 3;

      string unit = 4;

      Dimensions dimensions = 5;

      message Dimensions {
        string name = 1;

        string value = 2;
      }
    }

    message PredefinedMetricSpecification {
      string predefined_metric_type = 1 [json_name = "predefined_metric_type"];

      string resource_label = 2 [json_name = "resource_label"];
    }
  }
}

//AwsAppautoscalingScheduledAction version is 0
message AwsAppautoscalingScheduledAction {
  string arn = 1;

  string end_time = 2 [json_name = "end_time"];

  string id = 3;

  string name = 4;

  string resource_id = 5 [json_name = "resource_id"];

  string scalable_dimension = 6 [json_name = "scalable_dimension"];

  string schedule = 7;

  string service_namespace = 8 [json_name = "service_namespace"];

  string start_time = 9 [json_name = "start_time"];

  ScalableTargetAction scalable_target_action = 10 [json_name = "scalable_target_action"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 11;

  int32 count = 12;

  terraform.meta.MetaFields.ForEachEntry for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message ScalableTargetAction {
    int64 max_capacity = 1 [json_name = "max_capacity"];

    int64 min_capacity = 2 [json_name = "min_capacity"];
  }
}

//AwsAppautoscalingTarget version is 0
message AwsAppautoscalingTarget {
  string id = 1;

  int64 max_capacity = 2 [json_name = "max_capacity"];

  int64 min_capacity = 3 [json_name = "min_capacity"];

  string resource_id = 4 [json_name = "resource_id"];

  string role_arn = 5 [json_name = "role_arn"];

  string scalable_dimension = 6 [json_name = "scalable_dimension"];

  string service_namespace = 7 [json_name = "service_namespace"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsAppmeshMesh version is 0
message AwsAppmeshMesh {
  string arn = 1;

  string created_date = 2 [json_name = "created_date"];

  string id = 3;

  string last_updated_date = 4 [json_name = "last_updated_date"];

  string name = 5;

  map<string, string> tags = 6;

  Spec spec = 7;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message Spec {
    EgressFilter egress_filter = 1 [json_name = "egress_filter"];

    message EgressFilter {
      string type = 1;
    }
  }
}

//AwsAppmeshRoute version is 0
message AwsAppmeshRoute {
  string arn = 1;

  string created_date = 2 [json_name = "created_date"];

  string id = 3;

  string last_updated_date = 4 [json_name = "last_updated_date"];

  string mesh_name = 5 [json_name = "mesh_name"];

  string name = 6;

  map<string, string> tags = 7;

  string virtual_router_name = 8 [json_name = "virtual_router_name"];

  Spec spec = 9;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 10;

  int32 count = 11;

  terraform.meta.MetaFields.ForEachEntry for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message Spec {
    int64 priority = 1;

    HttpRoute http_route = 2 [json_name = "http_route"];

    TcpRoute tcp_route = 3 [json_name = "tcp_route"];

    message HttpRoute {
      Action action = 1;

      Match match = 2;

      message Action {
        WeightedTarget weighted_target = 1 [json_name = "weighted_target"];

        message WeightedTarget {
          string virtual_node = 1 [json_name = "virtual_node"];

          int64 weight = 2;
        }
      }

      message Match {
        string method = 1;

        string prefix = 2;

        string scheme = 3;

        Header header = 4;

        message Header {
          bool invert = 1;

          string name = 2;

          Match match = 3;

          message Match {
            string exact = 1;

            string prefix = 2;

            string regex = 3;

            string suffix = 4;

            Range range = 5;

            message Range {
              int64 end = 1;

              int64 start = 2;
            }
          }
        }
      }
    }

    message TcpRoute {
      Action action = 1;

      message Action {
        WeightedTarget weighted_target = 1 [json_name = "weighted_target"];

        message WeightedTarget {
          string virtual_node = 1 [json_name = "virtual_node"];

          int64 weight = 2;
        }
      }
    }
  }
}

//AwsAppmeshVirtualNode version is 1
message AwsAppmeshVirtualNode {
  string arn = 1;

  string created_date = 2 [json_name = "created_date"];

  string id = 3;

  string last_updated_date = 4 [json_name = "last_updated_date"];

  string mesh_name = 5 [json_name = "mesh_name"];

  string name = 6;

  map<string, string> tags = 7;

  Spec spec = 8;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message Spec {
    repeated string backends = 1;

    Backend backend = 2;

    Listener listener = 3;

    Logging logging = 4;

    ServiceDiscovery service_discovery = 5 [json_name = "service_discovery"];

    message Backend {
      VirtualService virtual_service = 1 [json_name = "virtual_service"];

      message VirtualService {
        string virtual_service_name = 1 [json_name = "virtual_service_name"];
      }
    }

    message Listener {
      HealthCheck health_check = 1 [json_name = "health_check"];

      PortMapping port_mapping = 2 [json_name = "port_mapping"];

      message HealthCheck {
        int64 healthy_threshold = 1 [json_name = "healthy_threshold"];

        int64 interval_millis = 2 [json_name = "interval_millis"];

        string path = 3;

        int64 port = 4;

        string protocol = 5;

        int64 timeout_millis = 6 [json_name = "timeout_millis"];

        int64 unhealthy_threshold = 7 [json_name = "unhealthy_threshold"];
      }

      message PortMapping {
        int64 port = 1;

        string protocol = 2;
      }
    }

    message Logging {
      AccessLog access_log = 1 [json_name = "access_log"];

      message AccessLog {
        File file = 1;

        message File {
          string path = 1;
        }
      }
    }

    message ServiceDiscovery {
      Dns dns = 1;

      AwsCloudMap aws_cloud_map = 2 [json_name = "aws_cloud_map"];

      message Dns {
        string hostname = 1;

        string service_name = 2 [json_name = "service_name"];
      }

      message AwsCloudMap {
        map<string, string> attributes = 1;

        string namespace_name = 2 [json_name = "namespace_name"];

        string service_name = 3 [json_name = "service_name"];
      }
    }
  }
}

//AwsAppmeshVirtualRouter version is 1
message AwsAppmeshVirtualRouter {
  string arn = 1;

  string created_date = 2 [json_name = "created_date"];

  string id = 3;

  string last_updated_date = 4 [json_name = "last_updated_date"];

  string mesh_name = 5 [json_name = "mesh_name"];

  string name = 6;

  map<string, string> tags = 7;

  Spec spec = 8;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message Spec {
    repeated string service_names = 1 [json_name = "service_names"];

    Listener listener = 2;

    message Listener {
      PortMapping port_mapping = 1 [json_name = "port_mapping"];

      message PortMapping {
        int64 port = 1;

        string protocol = 2;
      }
    }
  }
}

//AwsAppmeshVirtualService version is 0
message AwsAppmeshVirtualService {
  string arn = 1;

  string created_date = 2 [json_name = "created_date"];

  string id = 3;

  string last_updated_date = 4 [json_name = "last_updated_date"];

  string mesh_name = 5 [json_name = "mesh_name"];

  string name = 6;

  map<string, string> tags = 7;

  Spec spec = 8;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message Spec {
    Provider provider = 1;

    message Provider {
      VirtualNode virtual_node = 1 [json_name = "virtual_node"];

      VirtualRouter virtual_router = 2 [json_name = "virtual_router"];

      message VirtualNode {
        string virtual_node_name = 1 [json_name = "virtual_node_name"];
      }

      message VirtualRouter {
        string virtual_router_name = 1 [json_name = "virtual_router_name"];
      }
    }
  }
}

//AwsAppsyncApiKey version is 0
message AwsAppsyncApiKey {
  string api_id = 1 [json_name = "api_id"];

  string description = 2;

  string expires = 3;

  string id = 4;

  string key = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsAppsyncDatasource version is 0
message AwsAppsyncDatasource {
  string api_id = 1 [json_name = "api_id"];

  string arn = 2;

  string description = 3;

  string id = 4;

  string name = 5;

  string service_role_arn = 6 [json_name = "service_role_arn"];

  string type = 7;

  DynamodbConfig dynamodb_config = 8 [json_name = "dynamodb_config"];

  ElasticsearchConfig elasticsearch_config = 9 [json_name = "elasticsearch_config"];

  HttpConfig http_config = 10 [json_name = "http_config"];

  LambdaConfig lambda_config = 11 [json_name = "lambda_config"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 12;

  int32 count = 13;

  terraform.meta.MetaFields.ForEachEntry for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message DynamodbConfig {
    string region = 1;

    string table_name = 2 [json_name = "table_name"];

    bool use_caller_credentials = 3 [json_name = "use_caller_credentials"];
  }

  message ElasticsearchConfig {
    string endpoint = 1;

    string region = 2;
  }

  message HttpConfig {
    string endpoint = 1;
  }

  message LambdaConfig {
    string function_arn = 1 [json_name = "function_arn"];
  }
}

//AwsAppsyncFunction version is 0
message AwsAppsyncFunction {
  string api_id = 1 [json_name = "api_id"];

  string arn = 2;

  string data_source = 3 [json_name = "data_source"];

  string description = 4;

  string function_id = 5 [json_name = "function_id"];

  string function_version = 6 [json_name = "function_version"];

  string id = 7;

  string name = 8;

  string request_mapping_template = 9 [json_name = "request_mapping_template"];

  string response_mapping_template = 10 [json_name = "response_mapping_template"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 11;

  int32 count = 12;

  terraform.meta.MetaFields.ForEachEntry for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsAppsyncGraphqlApi version is 0
message AwsAppsyncGraphqlApi {
  string arn = 1;

  string authentication_type = 2 [json_name = "authentication_type"];

  string id = 3;

  string name = 4;

  string schema = 5;

  map<string, string> tags = 6;

  map<string, string> uris = 7;

  bool xray_enabled = 8 [json_name = "xray_enabled"];

  AdditionalAuthenticationProvider additional_authentication_provider = 9 [json_name = "additional_authentication_provider"];

  LogConfig log_config = 10 [json_name = "log_config"];

  OpenidConnectConfig openid_connect_config = 11 [json_name = "openid_connect_config"];

  UserPoolConfig user_pool_config = 12 [json_name = "user_pool_config"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 13;

  int32 count = 14;

  terraform.meta.MetaFields.ForEachEntry for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message AdditionalAuthenticationProvider {
    string authentication_type = 1 [json_name = "authentication_type"];

    OpenidConnectConfig openid_connect_config = 2 [json_name = "openid_connect_config"];

    UserPoolConfig user_pool_config = 3 [json_name = "user_pool_config"];

    message OpenidConnectConfig {
      int64 auth_ttl = 1 [json_name = "auth_ttl"];

      string client_id = 2 [json_name = "client_id"];

      int64 iat_ttl = 3 [json_name = "iat_ttl"];

      string issuer = 4;
    }

    message UserPoolConfig {
      string app_id_client_regex = 1 [json_name = "app_id_client_regex"];

      string aws_region = 2 [json_name = "aws_region"];

      string user_pool_id = 3 [json_name = "user_pool_id"];
    }
  }

  message LogConfig {
    string cloudwatch_logs_role_arn = 1 [json_name = "cloudwatch_logs_role_arn"];

    string field_log_level = 2 [json_name = "field_log_level"];
  }

  message OpenidConnectConfig {
    int64 auth_ttl = 1 [json_name = "auth_ttl"];

    string client_id = 2 [json_name = "client_id"];

    int64 iat_ttl = 3 [json_name = "iat_ttl"];

    string issuer = 4;
  }

  message UserPoolConfig {
    string app_id_client_regex = 1 [json_name = "app_id_client_regex"];

    string aws_region = 2 [json_name = "aws_region"];

    string default_action = 3 [json_name = "default_action"];

    string user_pool_id = 4 [json_name = "user_pool_id"];
  }
}

//AwsAppsyncResolver version is 0
message AwsAppsyncResolver {
  string api_id = 1 [json_name = "api_id"];

  string arn = 2;

  string data_source = 3 [json_name = "data_source"];

  string field = 4;

  string id = 5;

  string kind = 6;

  string request_template = 7 [json_name = "request_template"];

  string response_template = 8 [json_name = "response_template"];

  string type = 9;

  PipelineConfig pipeline_config = 10 [json_name = "pipeline_config"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 11;

  int32 count = 12;

  terraform.meta.MetaFields.ForEachEntry for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message PipelineConfig {
    repeated string functions = 1;
  }
}

//AwsAthenaDatabase version is 0
message AwsAthenaDatabase {
  string bucket = 1;

  bool force_destroy = 2 [json_name = "force_destroy"];

  string id = 3;

  string name = 4;

  EncryptionConfiguration encryption_configuration = 5 [json_name = "encryption_configuration"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message EncryptionConfiguration {
    string encryption_option = 1 [json_name = "encryption_option"];

    string kms_key = 2 [json_name = "kms_key"];
  }
}

//AwsAthenaNamedQuery version is 0
message AwsAthenaNamedQuery {
  string database = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  string query = 5;

  string workgroup = 6;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsAthenaWorkgroup version is 0
message AwsAthenaWorkgroup {
  string arn = 1;

  string description = 2;

  bool force_destroy = 3 [json_name = "force_destroy"];

  string id = 4;

  string name = 5;

  string state = 6;

  map<string, string> tags = 7;

  Configuration configuration = 8;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message Configuration {
    int64 bytes_scanned_cutoff_per_query = 1 [json_name = "bytes_scanned_cutoff_per_query"];

    bool enforce_workgroup_configuration = 2 [json_name = "enforce_workgroup_configuration"];

    bool publish_cloudwatch_metrics_enabled = 3 [json_name = "publish_cloudwatch_metrics_enabled"];

    ResultConfiguration result_configuration = 4 [json_name = "result_configuration"];

    message ResultConfiguration {
      string output_location = 1 [json_name = "output_location"];

      EncryptionConfiguration encryption_configuration = 2 [json_name = "encryption_configuration"];

      message EncryptionConfiguration {
        string encryption_option = 1 [json_name = "encryption_option"];

        string kms_key_arn = 2 [json_name = "kms_key_arn"];
      }
    }
  }
}

//AwsAutoscalingAttachment version is 0
message AwsAutoscalingAttachment {
  string alb_target_group_arn = 1 [json_name = "alb_target_group_arn"];

  string autoscaling_group_name = 2 [json_name = "autoscaling_group_name"];

  string elb = 3;

  string id = 4;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsAutoscalingGroup version is 0
message AwsAutoscalingGroup {
  string arn = 1;

  repeated string availability_zones = 2 [json_name = "availability_zones"];

  int64 default_cooldown = 3 [json_name = "default_cooldown"];

  int64 desired_capacity = 4 [json_name = "desired_capacity"];

  repeated string enabled_metrics = 5 [json_name = "enabled_metrics"];

  bool force_delete = 6 [json_name = "force_delete"];

  int64 health_check_grace_period = 7 [json_name = "health_check_grace_period"];

  string health_check_type = 8 [json_name = "health_check_type"];

  string id = 9;

  string launch_configuration = 10 [json_name = "launch_configuration"];

  repeated string load_balancers = 11 [json_name = "load_balancers"];

  int64 max_instance_lifetime = 12 [json_name = "max_instance_lifetime"];

  int64 max_size = 13 [json_name = "max_size"];

  string metrics_granularity = 14 [json_name = "metrics_granularity"];

  int64 min_elb_capacity = 15 [json_name = "min_elb_capacity"];

  int64 min_size = 16 [json_name = "min_size"];

  string name = 17;

  string name_prefix = 18 [json_name = "name_prefix"];

  string placement_group = 19 [json_name = "placement_group"];

  bool protect_from_scale_in = 20 [json_name = "protect_from_scale_in"];

  string service_linked_role_arn = 21 [json_name = "service_linked_role_arn"];

  repeated string suspended_processes = 22 [json_name = "suspended_processes"];

  map<string, string> tags = 23;

  repeated string target_group_arns = 24 [json_name = "target_group_arns"];

  repeated string termination_policies = 25 [json_name = "termination_policies"];

  repeated string vpc_zone_identifier = 26 [json_name = "vpc_zone_identifier"];

  string wait_for_capacity_timeout = 27 [json_name = "wait_for_capacity_timeout"];

  int64 wait_for_elb_capacity = 28 [json_name = "wait_for_elb_capacity"];

  LaunchTemplate launch_template = 29 [json_name = "launch_template"];

  MixedInstancesPolicy mixed_instances_policy = 30 [json_name = "mixed_instances_policy"];

  Tag tag = 31;

  Timeouts timeouts = 32;

  InitialLifecycleHook initial_lifecycle_hook = 33 [json_name = "initial_lifecycle_hook"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 34;

  int32 count = 35;

  terraform.meta.MetaFields.ForEachEntry for_each = 36;

  string provider = 37;

  terraform.meta.Lifecycle lifecycle = 38;

  message LaunchTemplate {
    string id = 1;

    string name = 2;

    string version = 3;
  }

  message MixedInstancesPolicy {
    InstancesDistribution instances_distribution = 1 [json_name = "instances_distribution"];

    LaunchTemplate launch_template = 2 [json_name = "launch_template"];

    message InstancesDistribution {
      string on_demand_allocation_strategy = 1 [json_name = "on_demand_allocation_strategy"];

      int64 on_demand_base_capacity = 2 [json_name = "on_demand_base_capacity"];

      int64 on_demand_percentage_above_base_capacity = 3 [json_name = "on_demand_percentage_above_base_capacity"];

      string spot_allocation_strategy = 4 [json_name = "spot_allocation_strategy"];

      int64 spot_instance_pools = 5 [json_name = "spot_instance_pools"];

      string spot_max_price = 6 [json_name = "spot_max_price"];
    }

    message LaunchTemplate {
      LaunchTemplateSpecification launch_template_specification = 1 [json_name = "launch_template_specification"];

      Override override = 2;

      message LaunchTemplateSpecification {
        string launch_template_id = 1 [json_name = "launch_template_id"];

        string launch_template_name = 2 [json_name = "launch_template_name"];

        string version = 3;
      }

      message Override {
        string instance_type = 1 [json_name = "instance_type"];

        string weighted_capacity = 2 [json_name = "weighted_capacity"];
      }
    }
  }

  message Tag {
    string key = 1;

    bool propagate_at_launch = 2 [json_name = "propagate_at_launch"];

    string value = 3;
  }

  message Timeouts {
    string delete = 1;
  }

  message InitialLifecycleHook {
    string default_result = 1 [json_name = "default_result"];

    int64 heartbeat_timeout = 2 [json_name = "heartbeat_timeout"];

    string lifecycle_transition = 3 [json_name = "lifecycle_transition"];

    string name = 4;

    string notification_metadata = 5 [json_name = "notification_metadata"];

    string notification_target_arn = 6 [json_name = "notification_target_arn"];

    string role_arn = 7 [json_name = "role_arn"];
  }
}

//AwsAutoscalingLifecycleHook version is 0
message AwsAutoscalingLifecycleHook {
  string autoscaling_group_name = 1 [json_name = "autoscaling_group_name"];

  string default_result = 2 [json_name = "default_result"];

  int64 heartbeat_timeout = 3 [json_name = "heartbeat_timeout"];

  string id = 4;

  string lifecycle_transition = 5 [json_name = "lifecycle_transition"];

  string name = 6;

  string notification_metadata = 7 [json_name = "notification_metadata"];

  string notification_target_arn = 8 [json_name = "notification_target_arn"];

  string role_arn = 9 [json_name = "role_arn"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 10;

  int32 count = 11;

  terraform.meta.MetaFields.ForEachEntry for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;
}

//AwsAutoscalingNotification version is 0
message AwsAutoscalingNotification {
  repeated string group_names = 1 [json_name = "group_names"];

  string id = 2;

  repeated string notifications = 3;

  string topic_arn = 4 [json_name = "topic_arn"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsAutoscalingPolicy version is 0
message AwsAutoscalingPolicy {
  string adjustment_type = 1 [json_name = "adjustment_type"];

  string arn = 2;

  string autoscaling_group_name = 3 [json_name = "autoscaling_group_name"];

  int64 cooldown = 4;

  int64 estimated_instance_warmup = 5 [json_name = "estimated_instance_warmup"];

  string id = 6;

  string metric_aggregation_type = 7 [json_name = "metric_aggregation_type"];

  int64 min_adjustment_magnitude = 8 [json_name = "min_adjustment_magnitude"];

  int64 min_adjustment_step = 9 [json_name = "min_adjustment_step"];

  string name = 10;

  string policy_type = 11 [json_name = "policy_type"];

  int64 scaling_adjustment = 12 [json_name = "scaling_adjustment"];

  TargetTrackingConfiguration target_tracking_configuration = 13 [json_name = "target_tracking_configuration"];

  StepAdjustment step_adjustment = 14 [json_name = "step_adjustment"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 15;

  int32 count = 16;

  terraform.meta.MetaFields.ForEachEntry for_each = 17;

  string provider = 18;

  terraform.meta.Lifecycle lifecycle = 19;

  message TargetTrackingConfiguration {
    bool disable_scale_in = 1 [json_name = "disable_scale_in"];

    int64 target_value = 2 [json_name = "target_value"];

    PredefinedMetricSpecification predefined_metric_specification = 3 [json_name = "predefined_metric_specification"];

    CustomizedMetricSpecification customized_metric_specification = 4 [json_name = "customized_metric_specification"];

    message PredefinedMetricSpecification {
      string predefined_metric_type = 1 [json_name = "predefined_metric_type"];

      string resource_label = 2 [json_name = "resource_label"];
    }

    message CustomizedMetricSpecification {
      string metric_name = 1 [json_name = "metric_name"];

      string namespace = 2;

      string statistic = 3;

      string unit = 4;

      MetricDimension metric_dimension = 5 [json_name = "metric_dimension"];

      message MetricDimension {
        string name = 1;

        string value = 2;
      }
    }
  }

  message StepAdjustment {
    string metric_interval_lower_bound = 1 [json_name = "metric_interval_lower_bound"];

    string metric_interval_upper_bound = 2 [json_name = "metric_interval_upper_bound"];

    int64 scaling_adjustment = 3 [json_name = "scaling_adjustment"];
  }
}

//AwsAutoscalingSchedule version is 0
message AwsAutoscalingSchedule {
  string arn = 1;

  string autoscaling_group_name = 2 [json_name = "autoscaling_group_name"];

  int64 desired_capacity = 3 [json_name = "desired_capacity"];

  string end_time = 4 [json_name = "end_time"];

  string id = 5;

  int64 max_size = 6 [json_name = "max_size"];

  int64 min_size = 7 [json_name = "min_size"];

  string recurrence = 8;

  string scheduled_action_name = 9 [json_name = "scheduled_action_name"];

  string start_time = 10 [json_name = "start_time"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 11;

  int32 count = 12;

  terraform.meta.MetaFields.ForEachEntry for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsBackupPlan version is 0
message AwsBackupPlan {
  string arn = 1;

  string id = 2;

  string name = 3;

  map<string, string> tags = 4;

  string version = 5;

  Rule rule = 6;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message Rule {
    int64 completion_window = 1 [json_name = "completion_window"];

    map<string, string> recovery_point_tags = 2;

    string rule_name = 3 [json_name = "rule_name"];

    string schedule = 4;

    int64 start_window = 5 [json_name = "start_window"];

    string target_vault_name = 6 [json_name = "target_vault_name"];

    CopyAction copy_action = 7 [json_name = "copy_action"];

    Lifecycle lifecycle = 8;

    message CopyAction {
      string destination_vault_arn = 1 [json_name = "destination_vault_arn"];

      Lifecycle lifecycle = 2;

      message Lifecycle {
        int64 cold_storage_after = 1 [json_name = "cold_storage_after"];

        int64 delete_after = 2 [json_name = "delete_after"];
      }
    }

    message Lifecycle {
      int64 cold_storage_after = 1 [json_name = "cold_storage_after"];

      int64 delete_after = 2 [json_name = "delete_after"];
    }
  }
}

//AwsBackupSelection version is 0
message AwsBackupSelection {
  string iam_role_arn = 1 [json_name = "iam_role_arn"];

  string id = 2;

  string name = 3;

  string plan_id = 4 [json_name = "plan_id"];

  repeated string resources = 5;

  SelectionTag selection_tag = 6 [json_name = "selection_tag"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message SelectionTag {
    string key = 1;

    string type = 2;

    string value = 3;
  }
}

//AwsBackupVault version is 0
message AwsBackupVault {
  string arn = 1;

  string id = 2;

  string kms_key_arn = 3 [json_name = "kms_key_arn"];

  string name = 4;

  int64 recovery_points = 5 [json_name = "recovery_points"];

  map<string, string> tags = 6;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsBatchComputeEnvironment version is 0
message AwsBatchComputeEnvironment {
  string arn = 1;

  string compute_environment_name = 2 [json_name = "compute_environment_name"];

  string compute_environment_name_prefix = 3 [json_name = "compute_environment_name_prefix"];

  string ecc_cluster_arn = 4 [json_name = "ecc_cluster_arn"];

  string ecs_cluster_arn = 5 [json_name = "ecs_cluster_arn"];

  string id = 6;

  string service_role = 7 [json_name = "service_role"];

  string state = 8;

  string status = 9;

  string status_reason = 10 [json_name = "status_reason"];

  string type = 11;

  ComputeResources compute_resources = 12 [json_name = "compute_resources"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 13;

  int32 count = 14;

  terraform.meta.MetaFields.ForEachEntry for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message ComputeResources {
    string allocation_strategy = 1 [json_name = "allocation_strategy"];

    int64 bid_percentage = 2 [json_name = "bid_percentage"];

    int64 desired_vcpus = 3 [json_name = "desired_vcpus"];

    string ec2_key_pair = 4 [json_name = "ec2_key_pair"];

    string image_id = 5 [json_name = "image_id"];

    string instance_role = 6 [json_name = "instance_role"];

    repeated string instance_type = 7 [json_name = "instance_type"];

    int64 max_vcpus = 8 [json_name = "max_vcpus"];

    int64 min_vcpus = 9 [json_name = "min_vcpus"];

    repeated string security_group_ids = 10 [json_name = "security_group_ids"];

    string spot_iam_fleet_role = 11 [json_name = "spot_iam_fleet_role"];

    repeated string subnets = 12;

    map<string, string> tags = 13;

    string type = 14;

    LaunchTemplate launch_template = 15 [json_name = "launch_template"];

    message LaunchTemplate {
      string launch_template_id = 1 [json_name = "launch_template_id"];

      string launch_template_name = 2 [json_name = "launch_template_name"];

      string version = 3;
    }
  }
}

//AwsBatchJobDefinition version is 0
message AwsBatchJobDefinition {
  string arn = 1;

  string container_properties = 2 [json_name = "container_properties"];

  string id = 3;

  string name = 4;

  map<string, string> parameters = 5;

  int64 revision = 6;

  string type = 7;

  Timeout timeout = 8;

  RetryStrategy retry_strategy = 9 [json_name = "retry_strategy"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 10;

  int32 count = 11;

  terraform.meta.MetaFields.ForEachEntry for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message Timeout {
    int64 attempt_duration_seconds = 1 [json_name = "attempt_duration_seconds"];
  }

  message RetryStrategy {
    int64 attempts = 1;
  }
}

//AwsBatchJobQueue version is 0
message AwsBatchJobQueue {
  string arn = 1;

  repeated string compute_environments = 2 [json_name = "compute_environments"];

  string id = 3;

  string name = 4;

  int64 priority = 5;

  string state = 6;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsBudgetsBudget version is 0
message AwsBudgetsBudget {
  string account_id = 1 [json_name = "account_id"];

  string budget_type = 2 [json_name = "budget_type"];

  map<string, string> cost_filters = 3;

  string id = 4;

  string limit_amount = 5 [json_name = "limit_amount"];

  string limit_unit = 6 [json_name = "limit_unit"];

  string name = 7;

  string name_prefix = 8 [json_name = "name_prefix"];

  string time_period_end = 9 [json_name = "time_period_end"];

  string time_period_start = 10 [json_name = "time_period_start"];

  string time_unit = 11 [json_name = "time_unit"];

  CostTypes cost_types = 12 [json_name = "cost_types"];

  Notification notification = 13;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 14;

  int32 count = 15;

  terraform.meta.MetaFields.ForEachEntry for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;

  message CostTypes {
    bool include_credit = 1 [json_name = "include_credit"];

    bool include_discount = 2 [json_name = "include_discount"];

    bool include_other_subscription = 3 [json_name = "include_other_subscription"];

    bool include_recurring = 4 [json_name = "include_recurring"];

    bool include_refund = 5 [json_name = "include_refund"];

    bool include_subscription = 6 [json_name = "include_subscription"];

    bool include_support = 7 [json_name = "include_support"];

    bool include_tax = 8 [json_name = "include_tax"];

    bool include_upfront = 9 [json_name = "include_upfront"];

    bool use_amortized = 10 [json_name = "use_amortized"];

    bool use_blended = 11 [json_name = "use_blended"];
  }

  message Notification {
    string comparison_operator = 1 [json_name = "comparison_operator"];

    string notification_type = 2 [json_name = "notification_type"];

    repeated string subscriber_email_addresses = 3 [json_name = "subscriber_email_addresses"];

    repeated string subscriber_sns_topic_arns = 4 [json_name = "subscriber_sns_topic_arns"];

    int64 threshold = 5;

    string threshold_type = 6 [json_name = "threshold_type"];
  }
}

//AwsCloud9EnvironmentEc2 version is 0
message AwsCloud9EnvironmentEc2 {
  string arn = 1;

  int64 automatic_stop_time_minutes = 2 [json_name = "automatic_stop_time_minutes"];

  string description = 3;

  string id = 4;

  string instance_type = 5 [json_name = "instance_type"];

  string name = 6;

  string owner_arn = 7 [json_name = "owner_arn"];

  string subnet_id = 8 [json_name = "subnet_id"];

  map<string, string> tags = 9;

  string type = 10;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 11;

  int32 count = 12;

  terraform.meta.MetaFields.ForEachEntry for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsCloudformationStack version is 0
message AwsCloudformationStack {
  repeated string capabilities = 1;

  bool disable_rollback = 2 [json_name = "disable_rollback"];

  string iam_role_arn = 3 [json_name = "iam_role_arn"];

  string id = 4;

  string name = 5;

  repeated string notification_arns = 6 [json_name = "notification_arns"];

  string on_failure = 7 [json_name = "on_failure"];

  map<string, string> outputs = 8;

  map<string, string> parameters = 9;

  string policy_body = 10 [json_name = "policy_body"];

  string policy_url = 11 [json_name = "policy_url"];

  map<string, string> tags = 12;

  string template_body = 13 [json_name = "template_body"];

  string template_url = 14 [json_name = "template_url"];

  int64 timeout_in_minutes = 15 [json_name = "timeout_in_minutes"];

  Timeouts timeouts = 16;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 17;

  int32 count = 18;

  terraform.meta.MetaFields.ForEachEntry for_each = 19;

  string provider = 20;

  terraform.meta.Lifecycle lifecycle = 21;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsCloudformationStackSet version is 0
message AwsCloudformationStackSet {
  string administration_role_arn = 1 [json_name = "administration_role_arn"];

  string arn = 2;

  repeated string capabilities = 3;

  string description = 4;

  string execution_role_name = 5 [json_name = "execution_role_name"];

  string id = 6;

  string name = 7;

  map<string, string> parameters = 8;

  string stack_set_id = 9 [json_name = "stack_set_id"];

  map<string, string> tags = 10;

  string template_body = 11 [json_name = "template_body"];

  string template_url = 12 [json_name = "template_url"];

  Timeouts timeouts = 13;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 14;

  int32 count = 15;

  terraform.meta.MetaFields.ForEachEntry for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;

  message Timeouts {
    string update = 1;
  }
}

//AwsCloudformationStackSetInstance version is 0
message AwsCloudformationStackSetInstance {
  string account_id = 1 [json_name = "account_id"];

  string id = 2;

  map<string, string> parameter_overrides = 3;

  string region = 4;

  bool retain_stack = 5 [json_name = "retain_stack"];

  string stack_id = 6 [json_name = "stack_id"];

  string stack_set_name = 7 [json_name = "stack_set_name"];

  Timeouts timeouts = 8;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsCloudfrontDistribution version is 1
message AwsCloudfrontDistribution {
  map<string, string> active_trusted_signers = 1;

  repeated string aliases = 2;

  string arn = 3;

  string caller_reference = 4 [json_name = "caller_reference"];

  string comment = 5;

  string default_root_object = 6 [json_name = "default_root_object"];

  string domain_name = 7 [json_name = "domain_name"];

  bool enabled = 8;

  string etag = 9;

  string hosted_zone_id = 10 [json_name = "hosted_zone_id"];

  string http_version = 11 [json_name = "http_version"];

  string id = 12;

  int64 in_progress_validation_batches = 13 [json_name = "in_progress_validation_batches"];

  bool is_ipv6_enabled = 14 [json_name = "is_ipv6_enabled"];

  string last_modified_time = 15 [json_name = "last_modified_time"];

  string price_class = 16 [json_name = "price_class"];

  bool retain_on_delete = 17 [json_name = "retain_on_delete"];

  string status = 18;

  map<string, string> tags = 19;

  bool wait_for_deployment = 20 [json_name = "wait_for_deployment"];

  string web_acl_id = 21 [json_name = "web_acl_id"];

  ViewerCertificate viewer_certificate = 22 [json_name = "viewer_certificate"];

  CacheBehavior cache_behavior = 23 [json_name = "cache_behavior"];

  LoggingConfig logging_config = 24 [json_name = "logging_config"];

  Origin origin = 25;

  OriginGroup origin_group = 26 [json_name = "origin_group"];

  CustomErrorResponse custom_error_response = 27 [json_name = "custom_error_response"];

  DefaultCacheBehavior default_cache_behavior = 28 [json_name = "default_cache_behavior"];

  OrderedCacheBehavior ordered_cache_behavior = 29 [json_name = "ordered_cache_behavior"];

  Restrictions restrictions = 30;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 31;

  int32 count = 32;

  terraform.meta.MetaFields.ForEachEntry for_each = 33;

  string provider = 34;

  terraform.meta.Lifecycle lifecycle = 35;

  message ViewerCertificate {
    string acm_certificate_arn = 1 [json_name = "acm_certificate_arn"];

    bool cloudfront_default_certificate = 2 [json_name = "cloudfront_default_certificate"];

    string iam_certificate_id = 3 [json_name = "iam_certificate_id"];

    string minimum_protocol_version = 4 [json_name = "minimum_protocol_version"];

    string ssl_support_method = 5 [json_name = "ssl_support_method"];
  }

  message CacheBehavior {
    repeated string allowed_methods = 1 [json_name = "allowed_methods"];

    repeated string cached_methods = 2 [json_name = "cached_methods"];

    bool compress = 3;

    int64 default_ttl = 4 [json_name = "default_ttl"];

    string field_level_encryption_id = 5 [json_name = "field_level_encryption_id"];

    int64 max_ttl = 6 [json_name = "max_ttl"];

    int64 min_ttl = 7 [json_name = "min_ttl"];

    string path_pattern = 8 [json_name = "path_pattern"];

    bool smooth_streaming = 9 [json_name = "smooth_streaming"];

    string target_origin_id = 10 [json_name = "target_origin_id"];

    repeated string trusted_signers = 11 [json_name = "trusted_signers"];

    string viewer_protocol_policy = 12 [json_name = "viewer_protocol_policy"];

    ForwardedValues forwarded_values = 13 [json_name = "forwarded_values"];

    LambdaFunctionAssociation lambda_function_association = 14 [json_name = "lambda_function_association"];

    message ForwardedValues {
      repeated string headers = 1;

      bool query_string = 2 [json_name = "query_string"];

      repeated string query_string_cache_keys = 3 [json_name = "query_string_cache_keys"];

      Cookies cookies = 4;

      message Cookies {
        string forward = 1;

        repeated string whitelisted_names = 2 [json_name = "whitelisted_names"];
      }
    }

    message LambdaFunctionAssociation {
      string event_type = 1 [json_name = "event_type"];

      bool include_body = 2 [json_name = "include_body"];

      string lambda_arn = 3 [json_name = "lambda_arn"];
    }
  }

  message LoggingConfig {
    string bucket = 1;

    bool include_cookies = 2 [json_name = "include_cookies"];

    string prefix = 3;
  }

  message Origin {
    string domain_name = 1 [json_name = "domain_name"];

    string origin_id = 2 [json_name = "origin_id"];

    string origin_path = 3 [json_name = "origin_path"];

    CustomHeader custom_header = 4 [json_name = "custom_header"];

    CustomOriginConfig custom_origin_config = 5 [json_name = "custom_origin_config"];

    S3OriginConfig s3_origin_config = 6 [json_name = "s3_origin_config"];

    message CustomHeader {
      string name = 1;

      string value = 2;
    }

    message CustomOriginConfig {
      int64 http_port = 1 [json_name = "http_port"];

      int64 https_port = 2 [json_name = "https_port"];

      int64 origin_keepalive_timeout = 3 [json_name = "origin_keepalive_timeout"];

      string origin_protocol_policy = 4 [json_name = "origin_protocol_policy"];

      int64 origin_read_timeout = 5 [json_name = "origin_read_timeout"];

      repeated string origin_ssl_protocols = 6 [json_name = "origin_ssl_protocols"];
    }

    message S3OriginConfig {
      string origin_access_identity = 1 [json_name = "origin_access_identity"];
    }
  }

  message OriginGroup {
    string origin_id = 1 [json_name = "origin_id"];

    FailoverCriteria failover_criteria = 2 [json_name = "failover_criteria"];

    Member member = 3;

    message FailoverCriteria {
      repeated int64 status_codes = 1 [json_name = "status_codes"];
    }

    message Member {
      string origin_id = 1 [json_name = "origin_id"];
    }
  }

  message CustomErrorResponse {
    int64 error_caching_min_ttl = 1 [json_name = "error_caching_min_ttl"];

    int64 error_code = 2 [json_name = "error_code"];

    int64 response_code = 3 [json_name = "response_code"];

    string response_page_path = 4 [json_name = "response_page_path"];
  }

  message DefaultCacheBehavior {
    repeated string allowed_methods = 1 [json_name = "allowed_methods"];

    repeated string cached_methods = 2 [json_name = "cached_methods"];

    bool compress = 3;

    int64 default_ttl = 4 [json_name = "default_ttl"];

    string field_level_encryption_id = 5 [json_name = "field_level_encryption_id"];

    int64 max_ttl = 6 [json_name = "max_ttl"];

    int64 min_ttl = 7 [json_name = "min_ttl"];

    bool smooth_streaming = 8 [json_name = "smooth_streaming"];

    string target_origin_id = 9 [json_name = "target_origin_id"];

    repeated string trusted_signers = 10 [json_name = "trusted_signers"];

    string viewer_protocol_policy = 11 [json_name = "viewer_protocol_policy"];

    ForwardedValues forwarded_values = 12 [json_name = "forwarded_values"];

    LambdaFunctionAssociation lambda_function_association = 13 [json_name = "lambda_function_association"];

    message ForwardedValues {
      repeated string headers = 1;

      bool query_string = 2 [json_name = "query_string"];

      repeated string query_string_cache_keys = 3 [json_name = "query_string_cache_keys"];

      Cookies cookies = 4;

      message Cookies {
        string forward = 1;

        repeated string whitelisted_names = 2 [json_name = "whitelisted_names"];
      }
    }

    message LambdaFunctionAssociation {
      string event_type = 1 [json_name = "event_type"];

      bool include_body = 2 [json_name = "include_body"];

      string lambda_arn = 3 [json_name = "lambda_arn"];
    }
  }

  message OrderedCacheBehavior {
    repeated string allowed_methods = 1 [json_name = "allowed_methods"];

    repeated string cached_methods = 2 [json_name = "cached_methods"];

    bool compress = 3;

    int64 default_ttl = 4 [json_name = "default_ttl"];

    string field_level_encryption_id = 5 [json_name = "field_level_encryption_id"];

    int64 max_ttl = 6 [json_name = "max_ttl"];

    int64 min_ttl = 7 [json_name = "min_ttl"];

    string path_pattern = 8 [json_name = "path_pattern"];

    bool smooth_streaming = 9 [json_name = "smooth_streaming"];

    string target_origin_id = 10 [json_name = "target_origin_id"];

    repeated string trusted_signers = 11 [json_name = "trusted_signers"];

    string viewer_protocol_policy = 12 [json_name = "viewer_protocol_policy"];

    LambdaFunctionAssociation lambda_function_association = 13 [json_name = "lambda_function_association"];

    ForwardedValues forwarded_values = 14 [json_name = "forwarded_values"];

    message LambdaFunctionAssociation {
      string event_type = 1 [json_name = "event_type"];

      bool include_body = 2 [json_name = "include_body"];

      string lambda_arn = 3 [json_name = "lambda_arn"];
    }

    message ForwardedValues {
      repeated string headers = 1;

      bool query_string = 2 [json_name = "query_string"];

      repeated string query_string_cache_keys = 3 [json_name = "query_string_cache_keys"];

      Cookies cookies = 4;

      message Cookies {
        string forward = 1;

        repeated string whitelisted_names = 2 [json_name = "whitelisted_names"];
      }
    }
  }

  message Restrictions {
    GeoRestriction geo_restriction = 1 [json_name = "geo_restriction"];

    message GeoRestriction {
      repeated string locations = 1;

      string restriction_type = 2 [json_name = "restriction_type"];
    }
  }
}

//AwsCloudfrontOriginAccessIdentity version is 0
message AwsCloudfrontOriginAccessIdentity {
  string caller_reference = 1 [json_name = "caller_reference"];

  string cloudfront_access_identity_path = 2 [json_name = "cloudfront_access_identity_path"];

  string comment = 3;

  string etag = 4;

  string iam_arn = 5 [json_name = "iam_arn"];

  string id = 6;

  string s3_canonical_user_id = 7 [json_name = "s3_canonical_user_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsCloudfrontPublicKey version is 0
message AwsCloudfrontPublicKey {
  string caller_reference = 1 [json_name = "caller_reference"];

  string comment = 2;

  string encoded_key = 3 [json_name = "encoded_key"];

  string etag = 4;

  string id = 5;

  string name = 6;

  string name_prefix = 7 [json_name = "name_prefix"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsCloudhsmV2Cluster version is 0
message AwsCloudhsmV2Cluster {
  repeated ClusterCertificates cluster_certificates = 1 [json_name = "cluster_certificates"];

  string cluster_id = 2 [json_name = "cluster_id"];

  string cluster_state = 3 [json_name = "cluster_state"];

  string hsm_type = 4 [json_name = "hsm_type"];

  string id = 5;

  string security_group_id = 6 [json_name = "security_group_id"];

  string source_backup_identifier = 7 [json_name = "source_backup_identifier"];

  repeated string subnet_ids = 8 [json_name = "subnet_ids"];

  map<string, string> tags = 9;

  string vpc_id = 10 [json_name = "vpc_id"];

  Timeouts timeouts = 11;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 12;

  int32 count = 13;

  terraform.meta.MetaFields.ForEachEntry for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message ClusterCertificates {
    //aws_hardware_certificate: string
    string aws_hardware_certificate = 1 [json_name = "aws_hardware_certificate"];

    //cluster_certificate: string
    string cluster_certificate = 2 [json_name = "cluster_certificate"];

    //cluster_csr: string
    string cluster_csr = 3 [json_name = "cluster_csr"];

    //hsm_certificate: string
    string hsm_certificate = 4 [json_name = "hsm_certificate"];

    //manufacturer_hardware_certificate: string
    string manufacturer_hardware_certificate = 5 [json_name = "manufacturer_hardware_certificate"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsCloudhsmV2Hsm version is 0
message AwsCloudhsmV2Hsm {
  string availability_zone = 1 [json_name = "availability_zone"];

  string cluster_id = 2 [json_name = "cluster_id"];

  string hsm_eni_id = 3 [json_name = "hsm_eni_id"];

  string hsm_id = 4 [json_name = "hsm_id"];

  string hsm_state = 5 [json_name = "hsm_state"];

  string id = 6;

  string ip_address = 7 [json_name = "ip_address"];

  string subnet_id = 8 [json_name = "subnet_id"];

  Timeouts timeouts = 9;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 10;

  int32 count = 11;

  terraform.meta.MetaFields.ForEachEntry for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsCloudtrail version is 0
message AwsCloudtrail {
  string arn = 1;

  string cloud_watch_logs_group_arn = 2 [json_name = "cloud_watch_logs_group_arn"];

  string cloud_watch_logs_role_arn = 3 [json_name = "cloud_watch_logs_role_arn"];

  bool enable_log_file_validation = 4 [json_name = "enable_log_file_validation"];

  bool enable_logging = 5 [json_name = "enable_logging"];

  string home_region = 6 [json_name = "home_region"];

  string id = 7;

  bool include_global_service_events = 8 [json_name = "include_global_service_events"];

  bool is_multi_region_trail = 9 [json_name = "is_multi_region_trail"];

  bool is_organization_trail = 10 [json_name = "is_organization_trail"];

  string kms_key_id = 11 [json_name = "kms_key_id"];

  string name = 12;

  string s3_bucket_name = 13 [json_name = "s3_bucket_name"];

  string s3_key_prefix = 14 [json_name = "s3_key_prefix"];

  string sns_topic_name = 15 [json_name = "sns_topic_name"];

  map<string, string> tags = 16;

  EventSelector event_selector = 17 [json_name = "event_selector"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 18;

  int32 count = 19;

  terraform.meta.MetaFields.ForEachEntry for_each = 20;

  string provider = 21;

  terraform.meta.Lifecycle lifecycle = 22;

  message EventSelector {
    bool include_management_events = 1 [json_name = "include_management_events"];

    string read_write_type = 2 [json_name = "read_write_type"];

    DataResource data_resource = 3 [json_name = "data_resource"];

    message DataResource {
      string type = 1;

      repeated string values = 2;
    }
  }
}

//AwsCloudwatchDashboard version is 0
message AwsCloudwatchDashboard {
  string dashboard_arn = 1 [json_name = "dashboard_arn"];

  string dashboard_body = 2 [json_name = "dashboard_body"];

  string dashboard_name = 3 [json_name = "dashboard_name"];

  string id = 4;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsCloudwatchEventPermission version is 0
message AwsCloudwatchEventPermission {
  string action = 1;

  string id = 2;

  string principal = 3;

  string statement_id = 4 [json_name = "statement_id"];

  Condition condition = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message Condition {
    string key = 1;

    string type = 2;

    string value = 3;
  }
}

//AwsCloudwatchEventRule version is 0
message AwsCloudwatchEventRule {
  string arn = 1;

  string description = 2;

  string event_pattern = 3 [json_name = "event_pattern"];

  string id = 4;

  bool is_enabled = 5 [json_name = "is_enabled"];

  string name = 6;

  string name_prefix = 7 [json_name = "name_prefix"];

  string role_arn = 8 [json_name = "role_arn"];

  string schedule_expression = 9 [json_name = "schedule_expression"];

  map<string, string> tags = 10;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 11;

  int32 count = 12;

  terraform.meta.MetaFields.ForEachEntry for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsCloudwatchEventTarget version is 0
message AwsCloudwatchEventTarget {
  string arn = 1;

  string id = 2;

  string input = 3;

  string input_path = 4 [json_name = "input_path"];

  string role_arn = 5 [json_name = "role_arn"];

  string rule = 6;

  string target_id = 7 [json_name = "target_id"];

  BatchTarget batch_target = 8 [json_name = "batch_target"];

  EcsTarget ecs_target = 9 [json_name = "ecs_target"];

  InputTransformer input_transformer = 10 [json_name = "input_transformer"];

  KinesisTarget kinesis_target = 11 [json_name = "kinesis_target"];

  RunCommandTargets run_command_targets = 12 [json_name = "run_command_targets"];

  SqsTarget sqs_target = 13 [json_name = "sqs_target"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 14;

  int32 count = 15;

  terraform.meta.MetaFields.ForEachEntry for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;

  message BatchTarget {
    int64 array_size = 1 [json_name = "array_size"];

    int64 job_attempts = 2 [json_name = "job_attempts"];

    string job_definition = 3 [json_name = "job_definition"];

    string job_name = 4 [json_name = "job_name"];
  }

  message EcsTarget {
    string group = 1;

    string launch_type = 2 [json_name = "launch_type"];

    string platform_version = 3 [json_name = "platform_version"];

    int64 task_count = 4 [json_name = "task_count"];

    string task_definition_arn = 5 [json_name = "task_definition_arn"];

    NetworkConfiguration network_configuration = 6 [json_name = "network_configuration"];

    message NetworkConfiguration {
      bool assign_public_ip = 1 [json_name = "assign_public_ip"];

      repeated string security_groups = 2 [json_name = "security_groups"];

      repeated string subnets = 3;
    }
  }

  message InputTransformer {
    map<string, string> input_paths = 1;

    string input_template = 2 [json_name = "input_template"];
  }

  message KinesisTarget {
    string partition_key_path = 1 [json_name = "partition_key_path"];
  }

  message RunCommandTargets {
    string key = 1;

    repeated string values = 2;
  }

  message SqsTarget {
    string message_group_id = 1 [json_name = "message_group_id"];
  }
}

//AwsCloudwatchLogDestination version is 0
message AwsCloudwatchLogDestination {
  string arn = 1;

  string id = 2;

  string name = 3;

  string role_arn = 4 [json_name = "role_arn"];

  string target_arn = 5 [json_name = "target_arn"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsCloudwatchLogDestinationPolicy version is 0
message AwsCloudwatchLogDestinationPolicy {
  string access_policy = 1 [json_name = "access_policy"];

  string destination_name = 2 [json_name = "destination_name"];

  string id = 3;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsCloudwatchLogGroup version is 0
message AwsCloudwatchLogGroup {
  string arn = 1;

  string id = 2;

  string kms_key_id = 3 [json_name = "kms_key_id"];

  string name = 4;

  string name_prefix = 5 [json_name = "name_prefix"];

  int64 retention_in_days = 6 [json_name = "retention_in_days"];

  map<string, string> tags = 7;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsCloudwatchLogMetricFilter version is 0
message AwsCloudwatchLogMetricFilter {
  string id = 1;

  string log_group_name = 2 [json_name = "log_group_name"];

  string name = 3;

  string pattern = 4;

  MetricTransformation metric_transformation = 5 [json_name = "metric_transformation"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message MetricTransformation {
    string default_value = 1 [json_name = "default_value"];

    string name = 2;

    string namespace = 3;

    string value = 4;
  }
}

//AwsCloudwatchLogResourcePolicy version is 0
message AwsCloudwatchLogResourcePolicy {
  string id = 1;

  string policy_document = 2 [json_name = "policy_document"];

  string policy_name = 3 [json_name = "policy_name"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsCloudwatchLogStream version is 0
message AwsCloudwatchLogStream {
  string arn = 1;

  string id = 2;

  string log_group_name = 3 [json_name = "log_group_name"];

  string name = 4;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsCloudwatchLogSubscriptionFilter version is 0
message AwsCloudwatchLogSubscriptionFilter {
  string destination_arn = 1 [json_name = "destination_arn"];

  string distribution = 2;

  string filter_pattern = 3 [json_name = "filter_pattern"];

  string id = 4;

  string log_group_name = 5 [json_name = "log_group_name"];

  string name = 6;

  string role_arn = 7 [json_name = "role_arn"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsCloudwatchMetricAlarm version is 1
message AwsCloudwatchMetricAlarm {
  bool actions_enabled = 1 [json_name = "actions_enabled"];

  repeated string alarm_actions = 2 [json_name = "alarm_actions"];

  string alarm_description = 3 [json_name = "alarm_description"];

  string alarm_name = 4 [json_name = "alarm_name"];

  string arn = 5;

  string comparison_operator = 6 [json_name = "comparison_operator"];

  int64 datapoints_to_alarm = 7 [json_name = "datapoints_to_alarm"];

  map<string, string> dimensions = 8;

  string evaluate_low_sample_count_percentiles = 9 [json_name = "evaluate_low_sample_count_percentiles"];

  int64 evaluation_periods = 10 [json_name = "evaluation_periods"];

  string extended_statistic = 11 [json_name = "extended_statistic"];

  string id = 12;

  repeated string insufficient_data_actions = 13 [json_name = "insufficient_data_actions"];

  string metric_name = 14 [json_name = "metric_name"];

  string namespace = 15;

  repeated string ok_actions = 16 [json_name = "ok_actions"];

  int64 period = 17;

  string statistic = 18;

  map<string, string> tags = 19;

  int64 threshold = 20;

  string threshold_metric_id = 21 [json_name = "threshold_metric_id"];

  string treat_missing_data = 22 [json_name = "treat_missing_data"];

  string unit = 23;

  MetricQuery metric_query = 24 [json_name = "metric_query"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 25;

  int32 count = 26;

  terraform.meta.MetaFields.ForEachEntry for_each = 27;

  string provider = 28;

  terraform.meta.Lifecycle lifecycle = 29;

  message MetricQuery {
    string expression = 1;

    string id = 2;

    string label = 3;

    bool return_data = 4 [json_name = "return_data"];

    Metric metric = 5;

    message Metric {
      map<string, string> dimensions = 1;

      string metric_name = 2 [json_name = "metric_name"];

      string namespace = 3;

      int64 period = 4;

      string stat = 5;

      string unit = 6;
    }
  }
}

//AwsCodebuildProject version is 0
message AwsCodebuildProject {
  string arn = 1;

  bool badge_enabled = 2 [json_name = "badge_enabled"];

  string badge_url = 3 [json_name = "badge_url"];

  int64 build_timeout = 4 [json_name = "build_timeout"];

  string description = 5;

  string encryption_key = 6 [json_name = "encryption_key"];

  string id = 7;

  string name = 8;

  int64 queued_timeout = 9 [json_name = "queued_timeout"];

  string service_role = 10 [json_name = "service_role"];

  string source_version = 11 [json_name = "source_version"];

  map<string, string> tags = 12;

  Artifacts artifacts = 13;

  Cache cache = 14;

  Environment environment = 15;

  LogsConfig logs_config = 16 [json_name = "logs_config"];

  SecondaryArtifacts secondary_artifacts = 17 [json_name = "secondary_artifacts"];

  SecondarySources secondary_sources = 18 [json_name = "secondary_sources"];

  Source source = 19;

  VpcConfig vpc_config = 20 [json_name = "vpc_config"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 21;

  int32 count = 22;

  terraform.meta.MetaFields.ForEachEntry for_each = 23;

  string provider = 24;

  terraform.meta.Lifecycle lifecycle = 25;

  message Artifacts {
    string artifact_identifier = 1 [json_name = "artifact_identifier"];

    bool encryption_disabled = 2 [json_name = "encryption_disabled"];

    string location = 3;

    string name = 4;

    string namespace_type = 5 [json_name = "namespace_type"];

    bool override_artifact_name = 6 [json_name = "override_artifact_name"];

    string packaging = 7;

    string path = 8;

    string type = 9;
  }

  message Cache {
    string location = 1;

    repeated string modes = 2;

    string type = 3;
  }

  message Environment {
    string certificate = 1;

    string compute_type = 2 [json_name = "compute_type"];

    string image = 3;

    string image_pull_credentials_type = 4 [json_name = "image_pull_credentials_type"];

    bool privileged_mode = 5 [json_name = "privileged_mode"];

    string type = 6;

    EnvironmentVariable environment_variable = 7 [json_name = "environment_variable"];

    RegistryCredential registry_credential = 8 [json_name = "registry_credential"];

    message EnvironmentVariable {
      string name = 1;

      string type = 2;

      string value = 3;
    }

    message RegistryCredential {
      string credential = 1;

      string credential_provider = 2 [json_name = "credential_provider"];
    }
  }

  message LogsConfig {
    CloudwatchLogs cloudwatch_logs = 1 [json_name = "cloudwatch_logs"];

    S3Logs s3_logs = 2 [json_name = "s3_logs"];

    message CloudwatchLogs {
      string group_name = 1 [json_name = "group_name"];

      string status = 2;

      string stream_name = 3 [json_name = "stream_name"];
    }

    message S3Logs {
      bool encryption_disabled = 1 [json_name = "encryption_disabled"];

      string location = 2;

      string status = 3;
    }
  }

  message SecondaryArtifacts {
    string artifact_identifier = 1 [json_name = "artifact_identifier"];

    bool encryption_disabled = 2 [json_name = "encryption_disabled"];

    string location = 3;

    string name = 4;

    string namespace_type = 5 [json_name = "namespace_type"];

    bool override_artifact_name = 6 [json_name = "override_artifact_name"];

    string packaging = 7;

    string path = 8;

    string type = 9;
  }

  message SecondarySources {
    string buildspec = 1;

    int64 git_clone_depth = 2 [json_name = "git_clone_depth"];

    bool insecure_ssl = 3 [json_name = "insecure_ssl"];

    string location = 4;

    bool report_build_status = 5 [json_name = "report_build_status"];

    string source_identifier = 6 [json_name = "source_identifier"];

    string type = 7;

    Auth auth = 8;

    GitSubmodulesConfig git_submodules_config = 9 [json_name = "git_submodules_config"];

    message Auth {
      string resource = 1;

      string type = 2;
    }

    message GitSubmodulesConfig {
      bool fetch_submodules = 1 [json_name = "fetch_submodules"];
    }
  }

  message Source {
    string buildspec = 1;

    int64 git_clone_depth = 2 [json_name = "git_clone_depth"];

    bool insecure_ssl = 3 [json_name = "insecure_ssl"];

    string location = 4;

    bool report_build_status = 5 [json_name = "report_build_status"];

    string type = 6;

    Auth auth = 7;

    GitSubmodulesConfig git_submodules_config = 8 [json_name = "git_submodules_config"];

    message Auth {
      string resource = 1;

      string type = 2;
    }

    message GitSubmodulesConfig {
      bool fetch_submodules = 1 [json_name = "fetch_submodules"];
    }
  }

  message VpcConfig {
    repeated string security_group_ids = 1 [json_name = "security_group_ids"];

    repeated string subnets = 2;

    string vpc_id = 3 [json_name = "vpc_id"];
  }
}

//AwsCodebuildSourceCredential version is 0
message AwsCodebuildSourceCredential {
  string arn = 1;

  string auth_type = 2 [json_name = "auth_type"];

  string id = 3;

  string server_type = 4 [json_name = "server_type"];

  string token = 5;

  string user_name = 6 [json_name = "user_name"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsCodebuildWebhook version is 0
message AwsCodebuildWebhook {
  string branch_filter = 1 [json_name = "branch_filter"];

  string id = 2;

  string payload_url = 3 [json_name = "payload_url"];

  string project_name = 4 [json_name = "project_name"];

  string secret = 5;

  string url = 6;

  FilterGroup filter_group = 7 [json_name = "filter_group"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message FilterGroup {
    Filter filter = 1;

    message Filter {
      bool exclude_matched_pattern = 1 [json_name = "exclude_matched_pattern"];

      string pattern = 2;

      string type = 3;
    }
  }
}

//AwsCodecommitRepository version is 0
message AwsCodecommitRepository {
  string arn = 1;

  string clone_url_http = 2 [json_name = "clone_url_http"];

  string clone_url_ssh = 3 [json_name = "clone_url_ssh"];

  string default_branch = 4 [json_name = "default_branch"];

  string description = 5;

  string id = 6;

  string repository_id = 7 [json_name = "repository_id"];

  string repository_name = 8 [json_name = "repository_name"];

  map<string, string> tags = 9;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 10;

  int32 count = 11;

  terraform.meta.MetaFields.ForEachEntry for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;
}

//AwsCodecommitTrigger version is 0
message AwsCodecommitTrigger {
  string configuration_id = 1 [json_name = "configuration_id"];

  string id = 2;

  string repository_name = 3 [json_name = "repository_name"];

  Trigger trigger = 4;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message Trigger {
    repeated string branches = 1;

    string custom_data = 2 [json_name = "custom_data"];

    string destination_arn = 3 [json_name = "destination_arn"];

    repeated string events = 4;

    string name = 5;
  }
}

//AwsCodedeployApp version is 0
message AwsCodedeployApp {
  string compute_platform = 1 [json_name = "compute_platform"];

  string id = 2;

  string name = 3;

  string unique_id = 4 [json_name = "unique_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsCodedeployDeploymentConfig version is 0
message AwsCodedeployDeploymentConfig {
  string compute_platform = 1 [json_name = "compute_platform"];

  string deployment_config_id = 2 [json_name = "deployment_config_id"];

  string deployment_config_name = 3 [json_name = "deployment_config_name"];

  string id = 4;

  MinimumHealthyHosts minimum_healthy_hosts = 5 [json_name = "minimum_healthy_hosts"];

  TrafficRoutingConfig traffic_routing_config = 6 [json_name = "traffic_routing_config"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message MinimumHealthyHosts {
    string type = 1;

    int64 value = 2;
  }

  message TrafficRoutingConfig {
    string type = 1;

    TimeBasedCanary time_based_canary = 2 [json_name = "time_based_canary"];

    TimeBasedLinear time_based_linear = 3 [json_name = "time_based_linear"];

    message TimeBasedCanary {
      int64 interval = 1;

      int64 percentage = 2;
    }

    message TimeBasedLinear {
      int64 interval = 1;

      int64 percentage = 2;
    }
  }
}

//AwsCodedeployDeploymentGroup version is 0
message AwsCodedeployDeploymentGroup {
  string app_name = 1 [json_name = "app_name"];

  repeated string autoscaling_groups = 2 [json_name = "autoscaling_groups"];

  string deployment_config_name = 3 [json_name = "deployment_config_name"];

  string deployment_group_name = 4 [json_name = "deployment_group_name"];

  string id = 5;

  string service_role_arn = 6 [json_name = "service_role_arn"];

  AutoRollbackConfiguration auto_rollback_configuration = 7 [json_name = "auto_rollback_configuration"];

  BlueGreenDeploymentConfig blue_green_deployment_config = 8 [json_name = "blue_green_deployment_config"];

  OnPremisesInstanceTagFilter on_premises_instance_tag_filter = 9 [json_name = "on_premises_instance_tag_filter"];

  TriggerConfiguration trigger_configuration = 10 [json_name = "trigger_configuration"];

  EcsService ecs_service = 11 [json_name = "ecs_service"];

  LoadBalancerInfo load_balancer_info = 12 [json_name = "load_balancer_info"];

  AlarmConfiguration alarm_configuration = 13 [json_name = "alarm_configuration"];

  DeploymentStyle deployment_style = 14 [json_name = "deployment_style"];

  Ec2TagFilter ec2_tag_filter = 15 [json_name = "ec2_tag_filter"];

  Ec2TagSet ec2_tag_set = 16 [json_name = "ec2_tag_set"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 17;

  int32 count = 18;

  terraform.meta.MetaFields.ForEachEntry for_each = 19;

  string provider = 20;

  terraform.meta.Lifecycle lifecycle = 21;

  message AutoRollbackConfiguration {
    bool enabled = 1;

    repeated string events = 2;
  }

  message BlueGreenDeploymentConfig {
    DeploymentReadyOption deployment_ready_option = 1 [json_name = "deployment_ready_option"];

    GreenFleetProvisioningOption green_fleet_provisioning_option = 2 [json_name = "green_fleet_provisioning_option"];

    TerminateBlueInstancesOnDeploymentSuccess terminate_blue_instances_on_deployment_success = 3 [json_name = "terminate_blue_instances_on_deployment_success"];

    message DeploymentReadyOption {
      string action_on_timeout = 1 [json_name = "action_on_timeout"];

      int64 wait_time_in_minutes = 2 [json_name = "wait_time_in_minutes"];
    }

    message GreenFleetProvisioningOption {
      string action = 1;
    }

    message TerminateBlueInstancesOnDeploymentSuccess {
      string action = 1;

      int64 termination_wait_time_in_minutes = 2 [json_name = "termination_wait_time_in_minutes"];
    }
  }

  message OnPremisesInstanceTagFilter {
    string key = 1;

    string type = 2;

    string value = 3;
  }

  message TriggerConfiguration {
    repeated string trigger_events = 1 [json_name = "trigger_events"];

    string trigger_name = 2 [json_name = "trigger_name"];

    string trigger_target_arn = 3 [json_name = "trigger_target_arn"];
  }

  message EcsService {
    string cluster_name = 1 [json_name = "cluster_name"];

    string service_name = 2 [json_name = "service_name"];
  }

  message LoadBalancerInfo {
    ElbInfo elb_info = 1 [json_name = "elb_info"];

    TargetGroupInfo target_group_info = 2 [json_name = "target_group_info"];

    TargetGroupPairInfo target_group_pair_info = 3 [json_name = "target_group_pair_info"];

    message ElbInfo {
      string name = 1;
    }

    message TargetGroupInfo {
      string name = 1;
    }

    message TargetGroupPairInfo {
      TestTrafficRoute test_traffic_route = 1 [json_name = "test_traffic_route"];

      ProdTrafficRoute prod_traffic_route = 2 [json_name = "prod_traffic_route"];

      TargetGroup target_group = 3 [json_name = "target_group"];

      message TestTrafficRoute {
        repeated string listener_arns = 1 [json_name = "listener_arns"];
      }

      message ProdTrafficRoute {
        repeated string listener_arns = 1 [json_name = "listener_arns"];
      }

      message TargetGroup {
        string name = 1;
      }
    }
  }

  message AlarmConfiguration {
    repeated string alarms = 1;

    bool enabled = 2;

    bool ignore_poll_alarm_failure = 3 [json_name = "ignore_poll_alarm_failure"];
  }

  message DeploymentStyle {
    string deployment_option = 1 [json_name = "deployment_option"];

    string deployment_type = 2 [json_name = "deployment_type"];
  }

  message Ec2TagFilter {
    string key = 1;

    string type = 2;

    string value = 3;
  }

  message Ec2TagSet {
    Ec2TagFilter ec2_tag_filter = 1 [json_name = "ec2_tag_filter"];

    message Ec2TagFilter {
      string key = 1;

      string type = 2;

      string value = 3;
    }
  }
}

//AwsCodepipeline version is 0
message AwsCodepipeline {
  string arn = 1;

  string id = 2;

  string name = 3;

  string role_arn = 4 [json_name = "role_arn"];

  map<string, string> tags = 5;

  ArtifactStore artifact_store = 6 [json_name = "artifact_store"];

  Stage stage = 7;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message ArtifactStore {
    string location = 1;

    string region = 2;

    string type = 3;

    EncryptionKey encryption_key = 4 [json_name = "encryption_key"];

    message EncryptionKey {
      string id = 1;

      string type = 2;
    }
  }

  message Stage {
    string name = 1;

    Action action = 2;

    message Action {
      string category = 1;

      map<string, string> configuration = 2;

      repeated string input_artifacts = 3 [json_name = "input_artifacts"];

      string name = 4;

      repeated string output_artifacts = 5 [json_name = "output_artifacts"];

      string owner = 6;

      string provider = 7;

      string region = 8;

      string role_arn = 9 [json_name = "role_arn"];

      int64 run_order = 10 [json_name = "run_order"];

      string version = 11;
    }
  }
}

//AwsCodepipelineWebhook version is 0
message AwsCodepipelineWebhook {
  string authentication = 1;

  string id = 2;

  string name = 3;

  map<string, string> tags = 4;

  string target_action = 5 [json_name = "target_action"];

  string target_pipeline = 6 [json_name = "target_pipeline"];

  string url = 7;

  AuthenticationConfiguration authentication_configuration = 8 [json_name = "authentication_configuration"];

  Filter filter = 9;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 10;

  int32 count = 11;

  terraform.meta.MetaFields.ForEachEntry for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message AuthenticationConfiguration {
    string allowed_ip_range = 1 [json_name = "allowed_ip_range"];

    string secret_token = 2 [json_name = "secret_token"];
  }

  message Filter {
    string json_path = 1 [json_name = "json_path"];

    string match_equals = 2 [json_name = "match_equals"];
  }
}

//AwsCodestarnotificationsNotificationRule version is 0
message AwsCodestarnotificationsNotificationRule {
  string arn = 1;

  string detail_type = 2 [json_name = "detail_type"];

  repeated string event_type_ids = 3 [json_name = "event_type_ids"];

  string id = 4;

  string name = 5;

  string resource = 6;

  string status = 7;

  map<string, string> tags = 8;

  Target target = 9;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 10;

  int32 count = 11;

  terraform.meta.MetaFields.ForEachEntry for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message Target {
    string address = 1;

    string status = 2;

    string type = 3;
  }
}

//AwsCognitoIdentityPool version is 0
message AwsCognitoIdentityPool {
  bool allow_unauthenticated_identities = 1 [json_name = "allow_unauthenticated_identities"];

  string arn = 2;

  string developer_provider_name = 3 [json_name = "developer_provider_name"];

  string id = 4;

  string identity_pool_name = 5 [json_name = "identity_pool_name"];

  repeated string openid_connect_provider_arns = 6 [json_name = "openid_connect_provider_arns"];

  repeated string saml_provider_arns = 7 [json_name = "saml_provider_arns"];

  map<string, string> supported_login_providers = 8;

  map<string, string> tags = 9;

  CognitoIdentityProviders cognito_identity_providers = 10 [json_name = "cognito_identity_providers"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 11;

  int32 count = 12;

  terraform.meta.MetaFields.ForEachEntry for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message CognitoIdentityProviders {
    string client_id = 1 [json_name = "client_id"];

    string provider_name = 2 [json_name = "provider_name"];

    bool server_side_token_check = 3 [json_name = "server_side_token_check"];
  }
}

//AwsCognitoIdentityPoolRolesAttachment version is 0
message AwsCognitoIdentityPoolRolesAttachment {
  string id = 1;

  string identity_pool_id = 2 [json_name = "identity_pool_id"];

  map<string, string> roles = 3;

  RoleMapping role_mapping = 4 [json_name = "role_mapping"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message RoleMapping {
    string ambiguous_role_resolution = 1 [json_name = "ambiguous_role_resolution"];

    string identity_provider = 2 [json_name = "identity_provider"];

    string type = 3;

    MappingRule mapping_rule = 4 [json_name = "mapping_rule"];

    message MappingRule {
      string claim = 1;

      string match_type = 2 [json_name = "match_type"];

      string role_arn = 3 [json_name = "role_arn"];

      string value = 4;
    }
  }
}

//AwsCognitoIdentityProvider version is 0
message AwsCognitoIdentityProvider {
  map<string, string> attribute_mapping = 1;

  string id = 2;

  repeated string idp_identifiers = 3 [json_name = "idp_identifiers"];

  map<string, string> provider_details = 4;

  string provider_name = 5 [json_name = "provider_name"];

  string provider_type = 6 [json_name = "provider_type"];

  string user_pool_id = 7 [json_name = "user_pool_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsCognitoResourceServer version is 0
message AwsCognitoResourceServer {
  string id = 1;

  string identifier = 2;

  string name = 3;

  repeated string scope_identifiers = 4 [json_name = "scope_identifiers"];

  string user_pool_id = 5 [json_name = "user_pool_id"];

  Scope scope = 6;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message Scope {
    string scope_description = 1 [json_name = "scope_description"];

    string scope_name = 2 [json_name = "scope_name"];
  }
}

//AwsCognitoUserGroup version is 0
message AwsCognitoUserGroup {
  string description = 1;

  string id = 2;

  string name = 3;

  int64 precedence = 4;

  string role_arn = 5 [json_name = "role_arn"];

  string user_pool_id = 6 [json_name = "user_pool_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsCognitoUserPool version is 0
message AwsCognitoUserPool {
  repeated string alias_attributes = 1 [json_name = "alias_attributes"];

  string arn = 2;

  repeated string auto_verified_attributes = 3 [json_name = "auto_verified_attributes"];

  string creation_date = 4 [json_name = "creation_date"];

  string email_verification_message = 5 [json_name = "email_verification_message"];

  string email_verification_subject = 6 [json_name = "email_verification_subject"];

  string endpoint = 7;

  string id = 8;

  string last_modified_date = 9 [json_name = "last_modified_date"];

  string mfa_configuration = 10 [json_name = "mfa_configuration"];

  string name = 11;

  string sms_authentication_message = 12 [json_name = "sms_authentication_message"];

  string sms_verification_message = 13 [json_name = "sms_verification_message"];

  map<string, string> tags = 14;

  repeated string username_attributes = 15 [json_name = "username_attributes"];

  DeviceConfiguration device_configuration = 16 [json_name = "device_configuration"];

  LambdaConfig lambda_config = 17 [json_name = "lambda_config"];

  PasswordPolicy password_policy = 18 [json_name = "password_policy"];

  Schema schema = 19;

  SoftwareTokenMfaConfiguration software_token_mfa_configuration = 20 [json_name = "software_token_mfa_configuration"];

  UserPoolAddOns user_pool_add_ons = 21 [json_name = "user_pool_add_ons"];

  UsernameConfiguration username_configuration = 22 [json_name = "username_configuration"];

  AdminCreateUserConfig admin_create_user_config = 23 [json_name = "admin_create_user_config"];

  VerificationMessageTemplate verification_message_template = 24 [json_name = "verification_message_template"];

  SmsConfiguration sms_configuration = 25 [json_name = "sms_configuration"];

  EmailConfiguration email_configuration = 26 [json_name = "email_configuration"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 27;

  int32 count = 28;

  terraform.meta.MetaFields.ForEachEntry for_each = 29;

  string provider = 30;

  terraform.meta.Lifecycle lifecycle = 31;

  message DeviceConfiguration {
    bool challenge_required_on_new_device = 1 [json_name = "challenge_required_on_new_device"];

    bool device_only_remembered_on_user_prompt = 2 [json_name = "device_only_remembered_on_user_prompt"];
  }

  message LambdaConfig {
    string create_auth_challenge = 1 [json_name = "create_auth_challenge"];

    string custom_message = 2 [json_name = "custom_message"];

    string define_auth_challenge = 3 [json_name = "define_auth_challenge"];

    string post_authentication = 4 [json_name = "post_authentication"];

    string post_confirmation = 5 [json_name = "post_confirmation"];

    string pre_authentication = 6 [json_name = "pre_authentication"];

    string pre_sign_up = 7 [json_name = "pre_sign_up"];

    string pre_token_generation = 8 [json_name = "pre_token_generation"];

    string user_migration = 9 [json_name = "user_migration"];

    string verify_auth_challenge_response = 10 [json_name = "verify_auth_challenge_response"];
  }

  message PasswordPolicy {
    int64 minimum_length = 1 [json_name = "minimum_length"];

    bool require_lowercase = 2 [json_name = "require_lowercase"];

    bool require_numbers = 3 [json_name = "require_numbers"];

    bool require_symbols = 4 [json_name = "require_symbols"];

    bool require_uppercase = 5 [json_name = "require_uppercase"];

    int64 temporary_password_validity_days = 6 [json_name = "temporary_password_validity_days"];
  }

  message Schema {
    string attribute_data_type = 1 [json_name = "attribute_data_type"];

    bool developer_only_attribute = 2 [json_name = "developer_only_attribute"];

    bool mutable = 3;

    string name = 4;

    bool required = 5;

    NumberAttributeConstraints number_attribute_constraints = 6 [json_name = "number_attribute_constraints"];

    StringAttributeConstraints string_attribute_constraints = 7 [json_name = "string_attribute_constraints"];

    message NumberAttributeConstraints {
      string max_value = 1 [json_name = "max_value"];

      string min_value = 2 [json_name = "min_value"];
    }

    message StringAttributeConstraints {
      string max_length = 1 [json_name = "max_length"];

      string min_length = 2 [json_name = "min_length"];
    }
  }

  message SoftwareTokenMfaConfiguration {
    bool enabled = 1;
  }

  message UserPoolAddOns {
    string advanced_security_mode = 1 [json_name = "advanced_security_mode"];
  }

  message UsernameConfiguration {
    bool case_sensitive = 1 [json_name = "case_sensitive"];
  }

  message AdminCreateUserConfig {
    bool allow_admin_create_user_only = 1 [json_name = "allow_admin_create_user_only"];

    int64 unused_account_validity_days = 2 [json_name = "unused_account_validity_days"];

    InviteMessageTemplate invite_message_template = 3 [json_name = "invite_message_template"];

    message InviteMessageTemplate {
      string email_message = 1 [json_name = "email_message"];

      string email_subject = 2 [json_name = "email_subject"];

      string sms_message = 3 [json_name = "sms_message"];
    }
  }

  message VerificationMessageTemplate {
    string default_email_option = 1 [json_name = "default_email_option"];

    string email_message = 2 [json_name = "email_message"];

    string email_message_by_link = 3 [json_name = "email_message_by_link"];

    string email_subject = 4 [json_name = "email_subject"];

    string email_subject_by_link = 5 [json_name = "email_subject_by_link"];

    string sms_message = 6 [json_name = "sms_message"];
  }

  message SmsConfiguration {
    string external_id = 1 [json_name = "external_id"];

    string sns_caller_arn = 2 [json_name = "sns_caller_arn"];
  }

  message EmailConfiguration {
    string email_sending_account = 1 [json_name = "email_sending_account"];

    string from_email_address = 2 [json_name = "from_email_address"];

    string reply_to_email_address = 3 [json_name = "reply_to_email_address"];

    string source_arn = 4 [json_name = "source_arn"];
  }
}

//AwsCognitoUserPoolClient version is 0
message AwsCognitoUserPoolClient {
  repeated string allowed_oauth_flows = 1 [json_name = "allowed_oauth_flows"];

  bool allowed_oauth_flows_user_pool_client = 2 [json_name = "allowed_oauth_flows_user_pool_client"];

  repeated string allowed_oauth_scopes = 3 [json_name = "allowed_oauth_scopes"];

  repeated string callback_urls = 4 [json_name = "callback_urls"];

  string client_secret = 5 [json_name = "client_secret"];

  string default_redirect_uri = 6 [json_name = "default_redirect_uri"];

  repeated string explicit_auth_flows = 7 [json_name = "explicit_auth_flows"];

  bool generate_secret = 8 [json_name = "generate_secret"];

  string id = 9;

  repeated string logout_urls = 10 [json_name = "logout_urls"];

  string name = 11;

  string prevent_user_existence_errors = 12 [json_name = "prevent_user_existence_errors"];

  repeated string read_attributes = 13 [json_name = "read_attributes"];

  int64 refresh_token_validity = 14 [json_name = "refresh_token_validity"];

  repeated string supported_identity_providers = 15 [json_name = "supported_identity_providers"];

  string user_pool_id = 16 [json_name = "user_pool_id"];

  repeated string write_attributes = 17 [json_name = "write_attributes"];

  AnalyticsConfiguration analytics_configuration = 18 [json_name = "analytics_configuration"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 19;

  int32 count = 20;

  terraform.meta.MetaFields.ForEachEntry for_each = 21;

  string provider = 22;

  terraform.meta.Lifecycle lifecycle = 23;

  message AnalyticsConfiguration {
    string application_id = 1 [json_name = "application_id"];

    string external_id = 2 [json_name = "external_id"];

    string role_arn = 3 [json_name = "role_arn"];

    bool user_data_shared = 4 [json_name = "user_data_shared"];
  }
}

//AwsCognitoUserPoolDomain version is 0
message AwsCognitoUserPoolDomain {
  string aws_account_id = 1 [json_name = "aws_account_id"];

  string certificate_arn = 2 [json_name = "certificate_arn"];

  string cloudfront_distribution_arn = 3 [json_name = "cloudfront_distribution_arn"];

  string domain = 4;

  string id = 5;

  string s3_bucket = 6 [json_name = "s3_bucket"];

  string user_pool_id = 7 [json_name = "user_pool_id"];

  string version = 8;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsConfigAggregateAuthorization version is 0
message AwsConfigAggregateAuthorization {
  string account_id = 1 [json_name = "account_id"];

  string arn = 2;

  string id = 3;

  string region = 4;

  map<string, string> tags = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsConfigConfigRule version is 0
message AwsConfigConfigRule {
  string arn = 1;

  string description = 2;

  string id = 3;

  string input_parameters = 4 [json_name = "input_parameters"];

  string maximum_execution_frequency = 5 [json_name = "maximum_execution_frequency"];

  string name = 6;

  string rule_id = 7 [json_name = "rule_id"];

  map<string, string> tags = 8;

  Scope scope = 9;

  Source source = 10;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 11;

  int32 count = 12;

  terraform.meta.MetaFields.ForEachEntry for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message Scope {
    string compliance_resource_id = 1 [json_name = "compliance_resource_id"];

    repeated string compliance_resource_types = 2 [json_name = "compliance_resource_types"];

    string tag_key = 3 [json_name = "tag_key"];

    string tag_value = 4 [json_name = "tag_value"];
  }

  message Source {
    string owner = 1;

    string source_identifier = 2 [json_name = "source_identifier"];

    SourceDetail source_detail = 3 [json_name = "source_detail"];

    message SourceDetail {
      string event_source = 1 [json_name = "event_source"];

      string maximum_execution_frequency = 2 [json_name = "maximum_execution_frequency"];

      string message_type = 3 [json_name = "message_type"];
    }
  }
}

//AwsConfigConfigurationAggregator version is 0
message AwsConfigConfigurationAggregator {
  string arn = 1;

  string id = 2;

  string name = 3;

  map<string, string> tags = 4;

  AccountAggregationSource account_aggregation_source = 5 [json_name = "account_aggregation_source"];

  OrganizationAggregationSource organization_aggregation_source = 6 [json_name = "organization_aggregation_source"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message AccountAggregationSource {
    repeated string account_ids = 1 [json_name = "account_ids"];

    bool all_regions = 2 [json_name = "all_regions"];

    repeated string regions = 3;
  }

  message OrganizationAggregationSource {
    bool all_regions = 1 [json_name = "all_regions"];

    repeated string regions = 2;

    string role_arn = 3 [json_name = "role_arn"];
  }
}

//AwsConfigConfigurationRecorder version is 0
message AwsConfigConfigurationRecorder {
  string id = 1;

  string name = 2;

  string role_arn = 3 [json_name = "role_arn"];

  RecordingGroup recording_group = 4 [json_name = "recording_group"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message RecordingGroup {
    bool all_supported = 1 [json_name = "all_supported"];

    bool include_global_resource_types = 2 [json_name = "include_global_resource_types"];

    repeated string resource_types = 3 [json_name = "resource_types"];
  }
}

//AwsConfigConfigurationRecorderStatus version is 0
message AwsConfigConfigurationRecorderStatus {
  string id = 1;

  bool is_enabled = 2 [json_name = "is_enabled"];

  string name = 3;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsConfigDeliveryChannel version is 0
message AwsConfigDeliveryChannel {
  string id = 1;

  string name = 2;

  string s3_bucket_name = 3 [json_name = "s3_bucket_name"];

  string s3_key_prefix = 4 [json_name = "s3_key_prefix"];

  string sns_topic_arn = 5 [json_name = "sns_topic_arn"];

  SnapshotDeliveryProperties snapshot_delivery_properties = 6 [json_name = "snapshot_delivery_properties"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message SnapshotDeliveryProperties {
    string delivery_frequency = 1 [json_name = "delivery_frequency"];
  }
}

//AwsConfigOrganizationCustomRule version is 0
message AwsConfigOrganizationCustomRule {
  string arn = 1;

  string description = 2;

  repeated string excluded_accounts = 3 [json_name = "excluded_accounts"];

  string id = 4;

  string input_parameters = 5 [json_name = "input_parameters"];

  string lambda_function_arn = 6 [json_name = "lambda_function_arn"];

  string maximum_execution_frequency = 7 [json_name = "maximum_execution_frequency"];

  string name = 8;

  string resource_id_scope = 9 [json_name = "resource_id_scope"];

  repeated string resource_types_scope = 10 [json_name = "resource_types_scope"];

  string tag_key_scope = 11 [json_name = "tag_key_scope"];

  string tag_value_scope = 12 [json_name = "tag_value_scope"];

  repeated string trigger_types = 13 [json_name = "trigger_types"];

  Timeouts timeouts = 14;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 15;

  int32 count = 16;

  terraform.meta.MetaFields.ForEachEntry for_each = 17;

  string provider = 18;

  terraform.meta.Lifecycle lifecycle = 19;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsConfigOrganizationManagedRule version is 0
message AwsConfigOrganizationManagedRule {
  string arn = 1;

  string description = 2;

  repeated string excluded_accounts = 3 [json_name = "excluded_accounts"];

  string id = 4;

  string input_parameters = 5 [json_name = "input_parameters"];

  string maximum_execution_frequency = 6 [json_name = "maximum_execution_frequency"];

  string name = 7;

  string resource_id_scope = 8 [json_name = "resource_id_scope"];

  repeated string resource_types_scope = 9 [json_name = "resource_types_scope"];

  string rule_identifier = 10 [json_name = "rule_identifier"];

  string tag_key_scope = 11 [json_name = "tag_key_scope"];

  string tag_value_scope = 12 [json_name = "tag_value_scope"];

  Timeouts timeouts = 13;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 14;

  int32 count = 15;

  terraform.meta.MetaFields.ForEachEntry for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsCurReportDefinition version is 0
message AwsCurReportDefinition {
  repeated string additional_artifacts = 1 [json_name = "additional_artifacts"];

  repeated string additional_schema_elements = 2 [json_name = "additional_schema_elements"];

  string compression = 3;

  string format = 4;

  string id = 5;

  string report_name = 6 [json_name = "report_name"];

  string s3_bucket = 7 [json_name = "s3_bucket"];

  string s3_prefix = 8 [json_name = "s3_prefix"];

  string s3_region = 9 [json_name = "s3_region"];

  string time_unit = 10 [json_name = "time_unit"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 11;

  int32 count = 12;

  terraform.meta.MetaFields.ForEachEntry for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsCustomerGateway version is 0
message AwsCustomerGateway {
  int64 bgp_asn = 1 [json_name = "bgp_asn"];

  string id = 2;

  string ip_address = 3 [json_name = "ip_address"];

  map<string, string> tags = 4;

  string type = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsDatapipelinePipeline version is 0
message AwsDatapipelinePipeline {
  string description = 1;

  string id = 2;

  string name = 3;

  map<string, string> tags = 4;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsDatasyncAgent version is 0
message AwsDatasyncAgent {
  string activation_key = 1 [json_name = "activation_key"];

  string arn = 2;

  string id = 3;

  string ip_address = 4 [json_name = "ip_address"];

  string name = 5;

  map<string, string> tags = 6;

  Timeouts timeouts = 7;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message Timeouts {
    string create = 1;
  }
}

//AwsDatasyncLocationEfs version is 0
message AwsDatasyncLocationEfs {
  string arn = 1;

  string efs_file_system_arn = 2 [json_name = "efs_file_system_arn"];

  string id = 3;

  string subdirectory = 4;

  map<string, string> tags = 5;

  string uri = 6;

  Ec2Config ec2_config = 7 [json_name = "ec2_config"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message Ec2Config {
    repeated string security_group_arns = 1 [json_name = "security_group_arns"];

    string subnet_arn = 2 [json_name = "subnet_arn"];
  }
}

//AwsDatasyncLocationNfs version is 0
message AwsDatasyncLocationNfs {
  string arn = 1;

  string id = 2;

  string server_hostname = 3 [json_name = "server_hostname"];

  string subdirectory = 4;

  map<string, string> tags = 5;

  string uri = 6;

  OnPremConfig on_prem_config = 7 [json_name = "on_prem_config"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message OnPremConfig {
    repeated string agent_arns = 1 [json_name = "agent_arns"];
  }
}

//AwsDatasyncLocationS3 version is 0
message AwsDatasyncLocationS3 {
  string arn = 1;

  string id = 2;

  string s3_bucket_arn = 3 [json_name = "s3_bucket_arn"];

  string subdirectory = 4;

  map<string, string> tags = 5;

  string uri = 6;

  S3Config s3_config = 7 [json_name = "s3_config"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message S3Config {
    string bucket_access_role_arn = 1 [json_name = "bucket_access_role_arn"];
  }
}

//AwsDatasyncLocationSmb version is 0
message AwsDatasyncLocationSmb {
  repeated string agent_arns = 1 [json_name = "agent_arns"];

  string arn = 2;

  string domain = 3;

  string id = 4;

  string password = 5;

  string server_hostname = 6 [json_name = "server_hostname"];

  string subdirectory = 7;

  map<string, string> tags = 8;

  string uri = 9;

  string user = 10;

  MountOptions mount_options = 11 [json_name = "mount_options"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 12;

  int32 count = 13;

  terraform.meta.MetaFields.ForEachEntry for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message MountOptions {
    string version = 1;
  }
}

//AwsDatasyncTask version is 0
message AwsDatasyncTask {
  string arn = 1;

  string cloudwatch_log_group_arn = 2 [json_name = "cloudwatch_log_group_arn"];

  string destination_location_arn = 3 [json_name = "destination_location_arn"];

  string id = 4;

  string name = 5;

  string source_location_arn = 6 [json_name = "source_location_arn"];

  map<string, string> tags = 7;

  Timeouts timeouts = 8;

  Options options = 9;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 10;

  int32 count = 11;

  terraform.meta.MetaFields.ForEachEntry for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message Timeouts {
    string create = 1;
  }

  message Options {
    string atime = 1;

    int64 bytes_per_second = 2 [json_name = "bytes_per_second"];

    string gid = 3;

    string mtime = 4;

    string posix_permissions = 5 [json_name = "posix_permissions"];

    string preserve_deleted_files = 6 [json_name = "preserve_deleted_files"];

    string preserve_devices = 7 [json_name = "preserve_devices"];

    string uid = 8;

    string verify_mode = 9 [json_name = "verify_mode"];
  }
}

//AwsDaxCluster version is 0
message AwsDaxCluster {
  string arn = 1;

  repeated string availability_zones = 2 [json_name = "availability_zones"];

  string cluster_address = 3 [json_name = "cluster_address"];

  string cluster_name = 4 [json_name = "cluster_name"];

  string configuration_endpoint = 5 [json_name = "configuration_endpoint"];

  string description = 6;

  string iam_role_arn = 7 [json_name = "iam_role_arn"];

  string id = 8;

  string maintenance_window = 9 [json_name = "maintenance_window"];

  string node_type = 10 [json_name = "node_type"];

  repeated Nodes nodes = 11;

  string notification_topic_arn = 12 [json_name = "notification_topic_arn"];

  string parameter_group_name = 13 [json_name = "parameter_group_name"];

  int64 port = 14;

  int64 replication_factor = 15 [json_name = "replication_factor"];

  repeated string security_group_ids = 16 [json_name = "security_group_ids"];

  string subnet_group_name = 17 [json_name = "subnet_group_name"];

  map<string, string> tags = 18;

  ServerSideEncryption server_side_encryption = 19 [json_name = "server_side_encryption"];

  Timeouts timeouts = 20;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 21;

  int32 count = 22;

  terraform.meta.MetaFields.ForEachEntry for_each = 23;

  string provider = 24;

  terraform.meta.Lifecycle lifecycle = 25;

  message Nodes {
    //address: string
    string address = 1;

    //availability_zone: string
    string availability_zone = 2 [json_name = "availability_zone"];

    //id: string
    string id = 3;

    //port: number
    int64 port = 4;
  }

  message ServerSideEncryption {
    bool enabled = 1;
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsDaxParameterGroup version is 0
message AwsDaxParameterGroup {
  string description = 1;

  string id = 2;

  string name = 3;

  Parameters parameters = 4;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message Parameters {
    string name = 1;

    string value = 2;
  }
}

//AwsDaxSubnetGroup version is 0
message AwsDaxSubnetGroup {
  string description = 1;

  string id = 2;

  string name = 3;

  repeated string subnet_ids = 4 [json_name = "subnet_ids"];

  string vpc_id = 5 [json_name = "vpc_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsDbClusterSnapshot version is 0
message AwsDbClusterSnapshot {
  int64 allocated_storage = 1 [json_name = "allocated_storage"];

  repeated string availability_zones = 2 [json_name = "availability_zones"];

  string db_cluster_identifier = 3 [json_name = "db_cluster_identifier"];

  string db_cluster_snapshot_arn = 4 [json_name = "db_cluster_snapshot_arn"];

  string db_cluster_snapshot_identifier = 5 [json_name = "db_cluster_snapshot_identifier"];

  string engine = 6;

  string engine_version = 7 [json_name = "engine_version"];

  string id = 8;

  string kms_key_id = 9 [json_name = "kms_key_id"];

  string license_model = 10 [json_name = "license_model"];

  int64 port = 11;

  string snapshot_type = 12 [json_name = "snapshot_type"];

  string source_db_cluster_snapshot_arn = 13 [json_name = "source_db_cluster_snapshot_arn"];

  string status = 14;

  bool storage_encrypted = 15 [json_name = "storage_encrypted"];

  map<string, string> tags = 16;

  string vpc_id = 17 [json_name = "vpc_id"];

  Timeouts timeouts = 18;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 19;

  int32 count = 20;

  terraform.meta.MetaFields.ForEachEntry for_each = 21;

  string provider = 22;

  terraform.meta.Lifecycle lifecycle = 23;

  message Timeouts {
    string create = 1;
  }
}

//AwsDbEventSubscription version is 0
message AwsDbEventSubscription {
  string arn = 1;

  string customer_aws_id = 2 [json_name = "customer_aws_id"];

  bool enabled = 3;

  repeated string event_categories = 4 [json_name = "event_categories"];

  string id = 5;

  string name = 6;

  string name_prefix = 7 [json_name = "name_prefix"];

  string sns_topic = 8 [json_name = "sns_topic"];

  repeated string source_ids = 9 [json_name = "source_ids"];

  string source_type = 10 [json_name = "source_type"];

  map<string, string> tags = 11;

  Timeouts timeouts = 12;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 13;

  int32 count = 14;

  terraform.meta.MetaFields.ForEachEntry for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsDbInstance version is 1
message AwsDbInstance {
  string address = 1;

  int64 allocated_storage = 2 [json_name = "allocated_storage"];

  bool allow_major_version_upgrade = 3 [json_name = "allow_major_version_upgrade"];

  bool apply_immediately = 4 [json_name = "apply_immediately"];

  string arn = 5;

  bool auto_minor_version_upgrade = 6 [json_name = "auto_minor_version_upgrade"];

  string availability_zone = 7 [json_name = "availability_zone"];

  int64 backup_retention_period = 8 [json_name = "backup_retention_period"];

  string backup_window = 9 [json_name = "backup_window"];

  string ca_cert_identifier = 10 [json_name = "ca_cert_identifier"];

  string character_set_name = 11 [json_name = "character_set_name"];

  bool copy_tags_to_snapshot = 12 [json_name = "copy_tags_to_snapshot"];

  string db_subnet_group_name = 13 [json_name = "db_subnet_group_name"];

  bool delete_automated_backups = 14 [json_name = "delete_automated_backups"];

  bool deletion_protection = 15 [json_name = "deletion_protection"];

  string domain = 16;

  string domain_iam_role_name = 17 [json_name = "domain_iam_role_name"];

  repeated string enabled_cloudwatch_logs_exports = 18 [json_name = "enabled_cloudwatch_logs_exports"];

  string endpoint = 19;

  string engine = 20;

  string engine_version = 21 [json_name = "engine_version"];

  string final_snapshot_identifier = 22 [json_name = "final_snapshot_identifier"];

  string hosted_zone_id = 23 [json_name = "hosted_zone_id"];

  bool iam_database_authentication_enabled = 24 [json_name = "iam_database_authentication_enabled"];

  string id = 25;

  string identifier = 26;

  string identifier_prefix = 27 [json_name = "identifier_prefix"];

  string instance_class = 28 [json_name = "instance_class"];

  int64 iops = 29;

  string kms_key_id = 30 [json_name = "kms_key_id"];

  string license_model = 31 [json_name = "license_model"];

  string maintenance_window = 32 [json_name = "maintenance_window"];

  int64 max_allocated_storage = 33 [json_name = "max_allocated_storage"];

  int64 monitoring_interval = 34 [json_name = "monitoring_interval"];

  string monitoring_role_arn = 35 [json_name = "monitoring_role_arn"];

  bool multi_az = 36 [json_name = "multi_az"];

  string name = 37;

  string option_group_name = 38 [json_name = "option_group_name"];

  string parameter_group_name = 39 [json_name = "parameter_group_name"];

  string password = 40;

  bool performance_insights_enabled = 41 [json_name = "performance_insights_enabled"];

  string performance_insights_kms_key_id = 42 [json_name = "performance_insights_kms_key_id"];

  int64 performance_insights_retention_period = 43 [json_name = "performance_insights_retention_period"];

  int64 port = 44;

  bool publicly_accessible = 45 [json_name = "publicly_accessible"];

  repeated string replicas = 46;

  string replicate_source_db = 47 [json_name = "replicate_source_db"];

  string resource_id = 48 [json_name = "resource_id"];

  repeated string security_group_names = 49 [json_name = "security_group_names"];

  bool skip_final_snapshot = 50 [json_name = "skip_final_snapshot"];

  string snapshot_identifier = 51 [json_name = "snapshot_identifier"];

  string status = 52;

  bool storage_encrypted = 53 [json_name = "storage_encrypted"];

  string storage_type = 54 [json_name = "storage_type"];

  map<string, string> tags = 55;

  string timezone = 56;

  string username = 57;

  repeated string vpc_security_group_ids = 58 [json_name = "vpc_security_group_ids"];

  S3Import s3_import = 59 [json_name = "s3_import"];

  Timeouts timeouts = 60;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 61;

  int32 count = 62;

  terraform.meta.MetaFields.ForEachEntry for_each = 63;

  string provider = 64;

  terraform.meta.Lifecycle lifecycle = 65;

  message S3Import {
    string bucket_name = 1 [json_name = "bucket_name"];

    string bucket_prefix = 2 [json_name = "bucket_prefix"];

    string ingestion_role = 3 [json_name = "ingestion_role"];

    string source_engine = 4 [json_name = "source_engine"];

    string source_engine_version = 5 [json_name = "source_engine_version"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsDbInstanceRoleAssociation version is 0
message AwsDbInstanceRoleAssociation {
  string db_instance_identifier = 1 [json_name = "db_instance_identifier"];

  string feature_name = 2 [json_name = "feature_name"];

  string id = 3;

  string role_arn = 4 [json_name = "role_arn"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsDbOptionGroup version is 0
message AwsDbOptionGroup {
  string arn = 1;

  string engine_name = 2 [json_name = "engine_name"];

  string id = 3;

  string major_engine_version = 4 [json_name = "major_engine_version"];

  string name = 5;

  string name_prefix = 6 [json_name = "name_prefix"];

  string option_group_description = 7 [json_name = "option_group_description"];

  map<string, string> tags = 8;

  Option option = 9;

  Timeouts timeouts = 10;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 11;

  int32 count = 12;

  terraform.meta.MetaFields.ForEachEntry for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message Option {
    repeated string db_security_group_memberships = 1 [json_name = "db_security_group_memberships"];

    string option_name = 2 [json_name = "option_name"];

    int64 port = 3;

    string version = 4;

    repeated string vpc_security_group_memberships = 5 [json_name = "vpc_security_group_memberships"];

    OptionSettings option_settings = 6 [json_name = "option_settings"];

    message OptionSettings {
      string name = 1;

      string value = 2;
    }
  }

  message Timeouts {
    string delete = 1;
  }
}

//AwsDbParameterGroup version is 0
message AwsDbParameterGroup {
  string arn = 1;

  string description = 2;

  string family = 3;

  string id = 4;

  string name = 5;

  string name_prefix = 6 [json_name = "name_prefix"];

  map<string, string> tags = 7;

  Parameter parameter = 8;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message Parameter {
    string apply_method = 1 [json_name = "apply_method"];

    string name = 2;

    string value = 3;
  }
}

//AwsDbSecurityGroup version is 0
message AwsDbSecurityGroup {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  map<string, string> tags = 5;

  Ingress ingress = 6;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message Ingress {
    string cidr = 1;

    string security_group_id = 2 [json_name = "security_group_id"];

    string security_group_name = 3 [json_name = "security_group_name"];

    string security_group_owner_id = 4 [json_name = "security_group_owner_id"];
  }
}

//AwsDbSnapshot version is 0
message AwsDbSnapshot {
  int64 allocated_storage = 1 [json_name = "allocated_storage"];

  string availability_zone = 2 [json_name = "availability_zone"];

  string db_instance_identifier = 3 [json_name = "db_instance_identifier"];

  string db_snapshot_arn = 4 [json_name = "db_snapshot_arn"];

  string db_snapshot_identifier = 5 [json_name = "db_snapshot_identifier"];

  bool encrypted = 6;

  string engine = 7;

  string engine_version = 8 [json_name = "engine_version"];

  string id = 9;

  int64 iops = 10;

  string kms_key_id = 11 [json_name = "kms_key_id"];

  string license_model = 12 [json_name = "license_model"];

  string option_group_name = 13 [json_name = "option_group_name"];

  int64 port = 14;

  string snapshot_type = 15 [json_name = "snapshot_type"];

  string source_db_snapshot_identifier = 16 [json_name = "source_db_snapshot_identifier"];

  string source_region = 17 [json_name = "source_region"];

  string status = 18;

  string storage_type = 19 [json_name = "storage_type"];

  map<string, string> tags = 20;

  string vpc_id = 21 [json_name = "vpc_id"];

  Timeouts timeouts = 22;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 23;

  int32 count = 24;

  terraform.meta.MetaFields.ForEachEntry for_each = 25;

  string provider = 26;

  terraform.meta.Lifecycle lifecycle = 27;

  message Timeouts {
    string read = 1;
  }
}

//AwsDbSubnetGroup version is 0
message AwsDbSubnetGroup {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  string name_prefix = 5 [json_name = "name_prefix"];

  repeated string subnet_ids = 6 [json_name = "subnet_ids"];

  map<string, string> tags = 7;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsDefaultNetworkAcl version is 0
message AwsDefaultNetworkAcl {
  string default_network_acl_id = 1 [json_name = "default_network_acl_id"];

  string id = 2;

  string owner_id = 3 [json_name = "owner_id"];

  repeated string subnet_ids = 4 [json_name = "subnet_ids"];

  map<string, string> tags = 5;

  string vpc_id = 6 [json_name = "vpc_id"];

  Egress egress = 7;

  Ingress ingress = 8;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message Egress {
    string action = 1;

    string cidr_block = 2 [json_name = "cidr_block"];

    int64 from_port = 3 [json_name = "from_port"];

    int64 icmp_code = 4 [json_name = "icmp_code"];

    int64 icmp_type = 5 [json_name = "icmp_type"];

    string ipv6_cidr_block = 6 [json_name = "ipv6_cidr_block"];

    string protocol = 7;

    int64 rule_no = 8 [json_name = "rule_no"];

    int64 to_port = 9 [json_name = "to_port"];
  }

  message Ingress {
    string action = 1;

    string cidr_block = 2 [json_name = "cidr_block"];

    int64 from_port = 3 [json_name = "from_port"];

    int64 icmp_code = 4 [json_name = "icmp_code"];

    int64 icmp_type = 5 [json_name = "icmp_type"];

    string ipv6_cidr_block = 6 [json_name = "ipv6_cidr_block"];

    string protocol = 7;

    int64 rule_no = 8 [json_name = "rule_no"];

    int64 to_port = 9 [json_name = "to_port"];
  }
}

//AwsDefaultRouteTable version is 0
message AwsDefaultRouteTable {
  string default_route_table_id = 1 [json_name = "default_route_table_id"];

  string id = 2;

  string owner_id = 3 [json_name = "owner_id"];

  repeated string propagating_vgws = 4 [json_name = "propagating_vgws"];

  repeated Route route = 5;

  map<string, string> tags = 6;

  string vpc_id = 7 [json_name = "vpc_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message Route {
    //cidr_block: string
    string cidr_block = 1 [json_name = "cidr_block"];

    //egress_only_gateway_id: string
    string egress_only_gateway_id = 2 [json_name = "egress_only_gateway_id"];

    //gateway_id: string
    string gateway_id = 3 [json_name = "gateway_id"];

    //instance_id: string
    string instance_id = 4 [json_name = "instance_id"];

    //ipv6_cidr_block: string
    string ipv6_cidr_block = 5 [json_name = "ipv6_cidr_block"];

    //nat_gateway_id: string
    string nat_gateway_id = 6 [json_name = "nat_gateway_id"];

    //network_interface_id: string
    string network_interface_id = 7 [json_name = "network_interface_id"];

    //transit_gateway_id: string
    string transit_gateway_id = 8 [json_name = "transit_gateway_id"];

    //vpc_peering_connection_id: string
    string vpc_peering_connection_id = 9 [json_name = "vpc_peering_connection_id"];
  }
}

//AwsDefaultSecurityGroup version is 1
message AwsDefaultSecurityGroup {
  string arn = 1;

  string description = 2;

  repeated Egress egress = 3;

  string id = 4;

  repeated Ingress ingress = 5;

  string name = 6;

  string owner_id = 7 [json_name = "owner_id"];

  bool revoke_rules_on_delete = 8 [json_name = "revoke_rules_on_delete"];

  map<string, string> tags = 9;

  string vpc_id = 10 [json_name = "vpc_id"];

  Timeouts timeouts = 11;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 12;

  int32 count = 13;

  terraform.meta.MetaFields.ForEachEntry for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message Egress {
    //cidr_blocks: list of string
    repeated string cidr_blocks = 1 [json_name = "cidr_blocks"];

    //description: string
    string description = 2;

    //from_port: number
    int64 from_port = 3 [json_name = "from_port"];

    //ipv6_cidr_blocks: list of string
    repeated string ipv6_cidr_blocks = 4 [json_name = "ipv6_cidr_blocks"];

    //prefix_list_ids: list of string
    repeated string prefix_list_ids = 5 [json_name = "prefix_list_ids"];

    //protocol: string
    string protocol = 6;

    //security_groups: set of string
    repeated string security_groups = 7 [json_name = "security_groups"];

    //self: bool
    bool self = 8;

    //to_port: number
    int64 to_port = 9 [json_name = "to_port"];
  }

  message Ingress {
    //cidr_blocks: list of string
    repeated string cidr_blocks = 1 [json_name = "cidr_blocks"];

    //description: string
    string description = 2;

    //from_port: number
    int64 from_port = 3 [json_name = "from_port"];

    //ipv6_cidr_blocks: list of string
    repeated string ipv6_cidr_blocks = 4 [json_name = "ipv6_cidr_blocks"];

    //prefix_list_ids: list of string
    repeated string prefix_list_ids = 5 [json_name = "prefix_list_ids"];

    //protocol: string
    string protocol = 6;

    //security_groups: set of string
    repeated string security_groups = 7 [json_name = "security_groups"];

    //self: bool
    bool self = 8;

    //to_port: number
    int64 to_port = 9 [json_name = "to_port"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsDefaultSubnet version is 1
message AwsDefaultSubnet {
  string arn = 1;

  bool assign_ipv6_address_on_creation = 2 [json_name = "assign_ipv6_address_on_creation"];

  string availability_zone = 3 [json_name = "availability_zone"];

  string availability_zone_id = 4 [json_name = "availability_zone_id"];

  string cidr_block = 5 [json_name = "cidr_block"];

  string id = 6;

  string ipv6_cidr_block = 7 [json_name = "ipv6_cidr_block"];

  string ipv6_cidr_block_association_id = 8 [json_name = "ipv6_cidr_block_association_id"];

  bool map_public_ip_on_launch = 9 [json_name = "map_public_ip_on_launch"];

  string owner_id = 10 [json_name = "owner_id"];

  map<string, string> tags = 11;

  string vpc_id = 12 [json_name = "vpc_id"];

  Timeouts timeouts = 13;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 14;

  int32 count = 15;

  terraform.meta.MetaFields.ForEachEntry for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsDefaultVpc version is 1
message AwsDefaultVpc {
  string arn = 1;

  bool assign_generated_ipv6_cidr_block = 2 [json_name = "assign_generated_ipv6_cidr_block"];

  string cidr_block = 3 [json_name = "cidr_block"];

  string default_network_acl_id = 4 [json_name = "default_network_acl_id"];

  string default_route_table_id = 5 [json_name = "default_route_table_id"];

  string default_security_group_id = 6 [json_name = "default_security_group_id"];

  string dhcp_options_id = 7 [json_name = "dhcp_options_id"];

  bool enable_classiclink = 8 [json_name = "enable_classiclink"];

  bool enable_classiclink_dns_support = 9 [json_name = "enable_classiclink_dns_support"];

  bool enable_dns_hostnames = 10 [json_name = "enable_dns_hostnames"];

  bool enable_dns_support = 11 [json_name = "enable_dns_support"];

  string id = 12;

  string instance_tenancy = 13 [json_name = "instance_tenancy"];

  string ipv6_association_id = 14 [json_name = "ipv6_association_id"];

  string ipv6_cidr_block = 15 [json_name = "ipv6_cidr_block"];

  string main_route_table_id = 16 [json_name = "main_route_table_id"];

  string owner_id = 17 [json_name = "owner_id"];

  map<string, string> tags = 18;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 19;

  int32 count = 20;

  terraform.meta.MetaFields.ForEachEntry for_each = 21;

  string provider = 22;

  terraform.meta.Lifecycle lifecycle = 23;
}

//AwsDefaultVpcDhcpOptions version is 0
message AwsDefaultVpcDhcpOptions {
  string domain_name = 1 [json_name = "domain_name"];

  string domain_name_servers = 2 [json_name = "domain_name_servers"];

  string id = 3;

  repeated string netbios_name_servers = 4 [json_name = "netbios_name_servers"];

  string netbios_node_type = 5 [json_name = "netbios_node_type"];

  string ntp_servers = 6 [json_name = "ntp_servers"];

  string owner_id = 7 [json_name = "owner_id"];

  map<string, string> tags = 8;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsDevicefarmProject version is 0
message AwsDevicefarmProject {
  string arn = 1;

  string id = 2;

  string name = 3;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsDirectoryServiceConditionalForwarder version is 0
message AwsDirectoryServiceConditionalForwarder {
  string directory_id = 1 [json_name = "directory_id"];

  repeated string dns_ips = 2 [json_name = "dns_ips"];

  string id = 3;

  string remote_domain_name = 4 [json_name = "remote_domain_name"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsDirectoryServiceDirectory version is 0
message AwsDirectoryServiceDirectory {
  string access_url = 1 [json_name = "access_url"];

  string alias = 2;

  string description = 3;

  repeated string dns_ip_addresses = 4 [json_name = "dns_ip_addresses"];

  string edition = 5;

  bool enable_sso = 6 [json_name = "enable_sso"];

  string id = 7;

  string name = 8;

  string password = 9;

  string security_group_id = 10 [json_name = "security_group_id"];

  string short_name = 11 [json_name = "short_name"];

  string size = 12;

  map<string, string> tags = 13;

  string type = 14;

  ConnectSettings connect_settings = 15 [json_name = "connect_settings"];

  VpcSettings vpc_settings = 16 [json_name = "vpc_settings"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 17;

  int32 count = 18;

  terraform.meta.MetaFields.ForEachEntry for_each = 19;

  string provider = 20;

  terraform.meta.Lifecycle lifecycle = 21;

  message ConnectSettings {
    repeated string customer_dns_ips = 1 [json_name = "customer_dns_ips"];

    string customer_username = 2 [json_name = "customer_username"];

    repeated string subnet_ids = 3 [json_name = "subnet_ids"];

    string vpc_id = 4 [json_name = "vpc_id"];
  }

  message VpcSettings {
    repeated string subnet_ids = 1 [json_name = "subnet_ids"];

    string vpc_id = 2 [json_name = "vpc_id"];
  }
}

//AwsDirectoryServiceLogSubscription version is 0
message AwsDirectoryServiceLogSubscription {
  string directory_id = 1 [json_name = "directory_id"];

  string id = 2;

  string log_group_name = 3 [json_name = "log_group_name"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsDlmLifecyclePolicy version is 0
message AwsDlmLifecyclePolicy {
  string arn = 1;

  string description = 2;

  string execution_role_arn = 3 [json_name = "execution_role_arn"];

  string id = 4;

  string state = 5;

  map<string, string> tags = 6;

  PolicyDetails policy_details = 7 [json_name = "policy_details"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message PolicyDetails {
    repeated string resource_types = 1 [json_name = "resource_types"];

    map<string, string> target_tags = 2;

    Schedule schedule = 3;

    message Schedule {
      bool copy_tags = 1 [json_name = "copy_tags"];

      string name = 2;

      map<string, string> tags_to_add = 3;

      RetainRule retain_rule = 4 [json_name = "retain_rule"];

      CreateRule create_rule = 5 [json_name = "create_rule"];

      message RetainRule {
        int64 count = 1;
      }

      message CreateRule {
        int64 interval = 1;

        string interval_unit = 2 [json_name = "interval_unit"];

        repeated string times = 3;
      }
    }
  }
}

//AwsDmsCertificate version is 0
message AwsDmsCertificate {
  string certificate_arn = 1 [json_name = "certificate_arn"];

  string certificate_id = 2 [json_name = "certificate_id"];

  string certificate_pem = 3 [json_name = "certificate_pem"];

  string certificate_wallet = 4 [json_name = "certificate_wallet"];

  string id = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsDmsEndpoint version is 0
message AwsDmsEndpoint {
  string certificate_arn = 1 [json_name = "certificate_arn"];

  string database_name = 2 [json_name = "database_name"];

  string endpoint_arn = 3 [json_name = "endpoint_arn"];

  string endpoint_id = 4 [json_name = "endpoint_id"];

  string endpoint_type = 5 [json_name = "endpoint_type"];

  string engine_name = 6 [json_name = "engine_name"];

  string extra_connection_attributes = 7 [json_name = "extra_connection_attributes"];

  string id = 8;

  string kms_key_arn = 9 [json_name = "kms_key_arn"];

  string password = 10;

  int64 port = 11;

  string server_name = 12 [json_name = "server_name"];

  string service_access_role = 13 [json_name = "service_access_role"];

  string ssl_mode = 14 [json_name = "ssl_mode"];

  map<string, string> tags = 15;

  string username = 16;

  MongodbSettings mongodb_settings = 17 [json_name = "mongodb_settings"];

  S3Settings s3_settings = 18 [json_name = "s3_settings"];

  ElasticsearchSettings elasticsearch_settings = 19 [json_name = "elasticsearch_settings"];

  KinesisSettings kinesis_settings = 20 [json_name = "kinesis_settings"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 21;

  int32 count = 22;

  terraform.meta.MetaFields.ForEachEntry for_each = 23;

  string provider = 24;

  terraform.meta.Lifecycle lifecycle = 25;

  message MongodbSettings {
    string auth_mechanism = 1 [json_name = "auth_mechanism"];

    string auth_source = 2 [json_name = "auth_source"];

    string auth_type = 3 [json_name = "auth_type"];

    string docs_to_investigate = 4 [json_name = "docs_to_investigate"];

    string extract_doc_id = 5 [json_name = "extract_doc_id"];

    string nesting_level = 6 [json_name = "nesting_level"];
  }

  message S3Settings {
    string bucket_folder = 1 [json_name = "bucket_folder"];

    string bucket_name = 2 [json_name = "bucket_name"];

    string compression_type = 3 [json_name = "compression_type"];

    string csv_delimiter = 4 [json_name = "csv_delimiter"];

    string csv_row_delimiter = 5 [json_name = "csv_row_delimiter"];

    string external_table_definition = 6 [json_name = "external_table_definition"];

    string service_access_role_arn = 7 [json_name = "service_access_role_arn"];
  }

  message ElasticsearchSettings {
    string endpoint_uri = 1 [json_name = "endpoint_uri"];

    int64 error_retry_duration = 2 [json_name = "error_retry_duration"];

    int64 full_load_error_percentage = 3 [json_name = "full_load_error_percentage"];

    string service_access_role_arn = 4 [json_name = "service_access_role_arn"];
  }

  message KinesisSettings {
    string message_format = 1 [json_name = "message_format"];

    string service_access_role_arn = 2 [json_name = "service_access_role_arn"];

    string stream_arn = 3 [json_name = "stream_arn"];
  }
}

//AwsDmsEventSubscription version is 0
message AwsDmsEventSubscription {
  string arn = 1;

  bool enabled = 2;

  repeated string event_categories = 3 [json_name = "event_categories"];

  string id = 4;

  string name = 5;

  string sns_topic_arn = 6 [json_name = "sns_topic_arn"];

  repeated string source_ids = 7 [json_name = "source_ids"];

  string source_type = 8 [json_name = "source_type"];

  map<string, string> tags = 9;

  Timeouts timeouts = 10;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 11;

  int32 count = 12;

  terraform.meta.MetaFields.ForEachEntry for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsDmsReplicationInstance version is 0
message AwsDmsReplicationInstance {
  int64 allocated_storage = 1 [json_name = "allocated_storage"];

  bool apply_immediately = 2 [json_name = "apply_immediately"];

  bool auto_minor_version_upgrade = 3 [json_name = "auto_minor_version_upgrade"];

  string availability_zone = 4 [json_name = "availability_zone"];

  string engine_version = 5 [json_name = "engine_version"];

  string id = 6;

  string kms_key_arn = 7 [json_name = "kms_key_arn"];

  bool multi_az = 8 [json_name = "multi_az"];

  string preferred_maintenance_window = 9 [json_name = "preferred_maintenance_window"];

  bool publicly_accessible = 10 [json_name = "publicly_accessible"];

  string replication_instance_arn = 11 [json_name = "replication_instance_arn"];

  string replication_instance_class = 12 [json_name = "replication_instance_class"];

  string replication_instance_id = 13 [json_name = "replication_instance_id"];

  repeated string replication_instance_private_ips = 14 [json_name = "replication_instance_private_ips"];

  repeated string replication_instance_public_ips = 15 [json_name = "replication_instance_public_ips"];

  string replication_subnet_group_id = 16 [json_name = "replication_subnet_group_id"];

  map<string, string> tags = 17;

  repeated string vpc_security_group_ids = 18 [json_name = "vpc_security_group_ids"];

  Timeouts timeouts = 19;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 20;

  int32 count = 21;

  terraform.meta.MetaFields.ForEachEntry for_each = 22;

  string provider = 23;

  terraform.meta.Lifecycle lifecycle = 24;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsDmsReplicationSubnetGroup version is 0
message AwsDmsReplicationSubnetGroup {
  string id = 1;

  string replication_subnet_group_arn = 2 [json_name = "replication_subnet_group_arn"];

  string replication_subnet_group_description = 3 [json_name = "replication_subnet_group_description"];

  string replication_subnet_group_id = 4 [json_name = "replication_subnet_group_id"];

  repeated string subnet_ids = 5 [json_name = "subnet_ids"];

  map<string, string> tags = 6;

  string vpc_id = 7 [json_name = "vpc_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsDmsReplicationTask version is 0
message AwsDmsReplicationTask {
  string cdc_start_time = 1 [json_name = "cdc_start_time"];

  string id = 2;

  string migration_type = 3 [json_name = "migration_type"];

  string replication_instance_arn = 4 [json_name = "replication_instance_arn"];

  string replication_task_arn = 5 [json_name = "replication_task_arn"];

  string replication_task_id = 6 [json_name = "replication_task_id"];

  string replication_task_settings = 7 [json_name = "replication_task_settings"];

  string source_endpoint_arn = 8 [json_name = "source_endpoint_arn"];

  string table_mappings = 9 [json_name = "table_mappings"];

  map<string, string> tags = 10;

  string target_endpoint_arn = 11 [json_name = "target_endpoint_arn"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 12;

  int32 count = 13;

  terraform.meta.MetaFields.ForEachEntry for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;
}

//AwsDocdbCluster version is 0
message AwsDocdbCluster {
  bool apply_immediately = 1 [json_name = "apply_immediately"];

  string arn = 2;

  repeated string availability_zones = 3 [json_name = "availability_zones"];

  int64 backup_retention_period = 4 [json_name = "backup_retention_period"];

  string cluster_identifier = 5 [json_name = "cluster_identifier"];

  string cluster_identifier_prefix = 6 [json_name = "cluster_identifier_prefix"];

  repeated string cluster_members = 7 [json_name = "cluster_members"];

  string cluster_resource_id = 8 [json_name = "cluster_resource_id"];

  string db_cluster_parameter_group_name = 9 [json_name = "db_cluster_parameter_group_name"];

  string db_subnet_group_name = 10 [json_name = "db_subnet_group_name"];

  bool deletion_protection = 11 [json_name = "deletion_protection"];

  repeated string enabled_cloudwatch_logs_exports = 12 [json_name = "enabled_cloudwatch_logs_exports"];

  string endpoint = 13;

  string engine = 14;

  string engine_version = 15 [json_name = "engine_version"];

  string final_snapshot_identifier = 16 [json_name = "final_snapshot_identifier"];

  string hosted_zone_id = 17 [json_name = "hosted_zone_id"];

  string id = 18;

  string kms_key_id = 19 [json_name = "kms_key_id"];

  string master_password = 20 [json_name = "master_password"];

  string master_username = 21 [json_name = "master_username"];

  int64 port = 22;

  string preferred_backup_window = 23 [json_name = "preferred_backup_window"];

  string preferred_maintenance_window = 24 [json_name = "preferred_maintenance_window"];

  string reader_endpoint = 25 [json_name = "reader_endpoint"];

  bool skip_final_snapshot = 26 [json_name = "skip_final_snapshot"];

  string snapshot_identifier = 27 [json_name = "snapshot_identifier"];

  bool storage_encrypted = 28 [json_name = "storage_encrypted"];

  map<string, string> tags = 29;

  repeated string vpc_security_group_ids = 30 [json_name = "vpc_security_group_ids"];

  Timeouts timeouts = 31;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 32;

  int32 count = 33;

  terraform.meta.MetaFields.ForEachEntry for_each = 34;

  string provider = 35;

  terraform.meta.Lifecycle lifecycle = 36;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsDocdbClusterInstance version is 0
message AwsDocdbClusterInstance {
  bool apply_immediately = 1 [json_name = "apply_immediately"];

  string arn = 2;

  bool auto_minor_version_upgrade = 3 [json_name = "auto_minor_version_upgrade"];

  string availability_zone = 4 [json_name = "availability_zone"];

  string ca_cert_identifier = 5 [json_name = "ca_cert_identifier"];

  string cluster_identifier = 6 [json_name = "cluster_identifier"];

  string db_subnet_group_name = 7 [json_name = "db_subnet_group_name"];

  string dbi_resource_id = 8 [json_name = "dbi_resource_id"];

  string endpoint = 9;

  string engine = 10;

  string engine_version = 11 [json_name = "engine_version"];

  string id = 12;

  string identifier = 13;

  string identifier_prefix = 14 [json_name = "identifier_prefix"];

  string instance_class = 15 [json_name = "instance_class"];

  string kms_key_id = 16 [json_name = "kms_key_id"];

  int64 port = 17;

  string preferred_backup_window = 18 [json_name = "preferred_backup_window"];

  string preferred_maintenance_window = 19 [json_name = "preferred_maintenance_window"];

  int64 promotion_tier = 20 [json_name = "promotion_tier"];

  bool publicly_accessible = 21 [json_name = "publicly_accessible"];

  bool storage_encrypted = 22 [json_name = "storage_encrypted"];

  map<string, string> tags = 23;

  bool writer = 24;

  Timeouts timeouts = 25;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 26;

  int32 count = 27;

  terraform.meta.MetaFields.ForEachEntry for_each = 28;

  string provider = 29;

  terraform.meta.Lifecycle lifecycle = 30;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsDocdbClusterParameterGroup version is 0
message AwsDocdbClusterParameterGroup {
  string arn = 1;

  string description = 2;

  string family = 3;

  string id = 4;

  string name = 5;

  string name_prefix = 6 [json_name = "name_prefix"];

  map<string, string> tags = 7;

  Parameter parameter = 8;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message Parameter {
    string apply_method = 1 [json_name = "apply_method"];

    string name = 2;

    string value = 3;
  }
}

//AwsDocdbClusterSnapshot version is 0
message AwsDocdbClusterSnapshot {
  repeated string availability_zones = 1 [json_name = "availability_zones"];

  string db_cluster_identifier = 2 [json_name = "db_cluster_identifier"];

  string db_cluster_snapshot_arn = 3 [json_name = "db_cluster_snapshot_arn"];

  string db_cluster_snapshot_identifier = 4 [json_name = "db_cluster_snapshot_identifier"];

  string engine = 5;

  string engine_version = 6 [json_name = "engine_version"];

  string id = 7;

  string kms_key_id = 8 [json_name = "kms_key_id"];

  int64 port = 9;

  string snapshot_type = 10 [json_name = "snapshot_type"];

  string source_db_cluster_snapshot_arn = 11 [json_name = "source_db_cluster_snapshot_arn"];

  string status = 12;

  bool storage_encrypted = 13 [json_name = "storage_encrypted"];

  string vpc_id = 14 [json_name = "vpc_id"];

  Timeouts timeouts = 15;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 16;

  int32 count = 17;

  terraform.meta.MetaFields.ForEachEntry for_each = 18;

  string provider = 19;

  terraform.meta.Lifecycle lifecycle = 20;

  message Timeouts {
    string create = 1;
  }
}

//AwsDocdbSubnetGroup version is 0
message AwsDocdbSubnetGroup {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  string name_prefix = 5 [json_name = "name_prefix"];

  repeated string subnet_ids = 6 [json_name = "subnet_ids"];

  map<string, string> tags = 7;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsDxBgpPeer version is 0
message AwsDxBgpPeer {
  string address_family = 1 [json_name = "address_family"];

  string amazon_address = 2 [json_name = "amazon_address"];

  string aws_device = 3 [json_name = "aws_device"];

  int64 bgp_asn = 4 [json_name = "bgp_asn"];

  string bgp_auth_key = 5 [json_name = "bgp_auth_key"];

  string bgp_peer_id = 6 [json_name = "bgp_peer_id"];

  string bgp_status = 7 [json_name = "bgp_status"];

  string customer_address = 8 [json_name = "customer_address"];

  string id = 9;

  string virtual_interface_id = 10 [json_name = "virtual_interface_id"];

  Timeouts timeouts = 11;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 12;

  int32 count = 13;

  terraform.meta.MetaFields.ForEachEntry for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsDxConnection version is 0
message AwsDxConnection {
  string arn = 1;

  string aws_device = 2 [json_name = "aws_device"];

  string bandwidth = 3;

  string has_logical_redundancy = 4 [json_name = "has_logical_redundancy"];

  string id = 5;

  bool jumbo_frame_capable = 6 [json_name = "jumbo_frame_capable"];

  string location = 7;

  string name = 8;

  map<string, string> tags = 9;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 10;

  int32 count = 11;

  terraform.meta.MetaFields.ForEachEntry for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;
}

//AwsDxConnectionAssociation version is 0
message AwsDxConnectionAssociation {
  string connection_id = 1 [json_name = "connection_id"];

  string id = 2;

  string lag_id = 3 [json_name = "lag_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsDxGateway version is 0
message AwsDxGateway {
  string amazon_side_asn = 1 [json_name = "amazon_side_asn"];

  string id = 2;

  string name = 3;

  string owner_account_id = 4 [json_name = "owner_account_id"];

  Timeouts timeouts = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsDxGatewayAssociation version is 1
message AwsDxGatewayAssociation {
  repeated string allowed_prefixes = 1 [json_name = "allowed_prefixes"];

  string associated_gateway_id = 2 [json_name = "associated_gateway_id"];

  string associated_gateway_owner_account_id = 3 [json_name = "associated_gateway_owner_account_id"];

  string associated_gateway_type = 4 [json_name = "associated_gateway_type"];

  string dx_gateway_association_id = 5 [json_name = "dx_gateway_association_id"];

  string dx_gateway_id = 6 [json_name = "dx_gateway_id"];

  string dx_gateway_owner_account_id = 7 [json_name = "dx_gateway_owner_account_id"];

  string id = 8;

  string proposal_id = 9 [json_name = "proposal_id"];

  string vpn_gateway_id = 10 [json_name = "vpn_gateway_id"];

  Timeouts timeouts = 11;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 12;

  int32 count = 13;

  terraform.meta.MetaFields.ForEachEntry for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsDxGatewayAssociationProposal version is 0
message AwsDxGatewayAssociationProposal {
  repeated string allowed_prefixes = 1 [json_name = "allowed_prefixes"];

  string associated_gateway_id = 2 [json_name = "associated_gateway_id"];

  string associated_gateway_owner_account_id = 3 [json_name = "associated_gateway_owner_account_id"];

  string associated_gateway_type = 4 [json_name = "associated_gateway_type"];

  string dx_gateway_id = 5 [json_name = "dx_gateway_id"];

  string dx_gateway_owner_account_id = 6 [json_name = "dx_gateway_owner_account_id"];

  string id = 7;

  string vpn_gateway_id = 8 [json_name = "vpn_gateway_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsDxHostedPrivateVirtualInterface version is 0
message AwsDxHostedPrivateVirtualInterface {
  string address_family = 1 [json_name = "address_family"];

  string amazon_address = 2 [json_name = "amazon_address"];

  string amazon_side_asn = 3 [json_name = "amazon_side_asn"];

  string arn = 4;

  string aws_device = 5 [json_name = "aws_device"];

  int64 bgp_asn = 6 [json_name = "bgp_asn"];

  string bgp_auth_key = 7 [json_name = "bgp_auth_key"];

  string connection_id = 8 [json_name = "connection_id"];

  string customer_address = 9 [json_name = "customer_address"];

  string id = 10;

  bool jumbo_frame_capable = 11 [json_name = "jumbo_frame_capable"];

  int64 mtu = 12;

  string name = 13;

  string owner_account_id = 14 [json_name = "owner_account_id"];

  int64 vlan = 15;

  Timeouts timeouts = 16;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 17;

  int32 count = 18;

  terraform.meta.MetaFields.ForEachEntry for_each = 19;

  string provider = 20;

  terraform.meta.Lifecycle lifecycle = 21;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsDxHostedPrivateVirtualInterfaceAccepter version is 0
message AwsDxHostedPrivateVirtualInterfaceAccepter {
  string arn = 1;

  string dx_gateway_id = 2 [json_name = "dx_gateway_id"];

  string id = 3;

  map<string, string> tags = 4;

  string virtual_interface_id = 5 [json_name = "virtual_interface_id"];

  string vpn_gateway_id = 6 [json_name = "vpn_gateway_id"];

  Timeouts timeouts = 7;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsDxHostedPublicVirtualInterface version is 0
message AwsDxHostedPublicVirtualInterface {
  string address_family = 1 [json_name = "address_family"];

  string amazon_address = 2 [json_name = "amazon_address"];

  string amazon_side_asn = 3 [json_name = "amazon_side_asn"];

  string arn = 4;

  string aws_device = 5 [json_name = "aws_device"];

  int64 bgp_asn = 6 [json_name = "bgp_asn"];

  string bgp_auth_key = 7 [json_name = "bgp_auth_key"];

  string connection_id = 8 [json_name = "connection_id"];

  string customer_address = 9 [json_name = "customer_address"];

  string id = 10;

  string name = 11;

  string owner_account_id = 12 [json_name = "owner_account_id"];

  repeated string route_filter_prefixes = 13 [json_name = "route_filter_prefixes"];

  int64 vlan = 14;

  Timeouts timeouts = 15;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 16;

  int32 count = 17;

  terraform.meta.MetaFields.ForEachEntry for_each = 18;

  string provider = 19;

  terraform.meta.Lifecycle lifecycle = 20;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsDxHostedPublicVirtualInterfaceAccepter version is 0
message AwsDxHostedPublicVirtualInterfaceAccepter {
  string arn = 1;

  string id = 2;

  map<string, string> tags = 3;

  string virtual_interface_id = 4 [json_name = "virtual_interface_id"];

  Timeouts timeouts = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsDxHostedTransitVirtualInterface version is 0
message AwsDxHostedTransitVirtualInterface {
  string address_family = 1 [json_name = "address_family"];

  string amazon_address = 2 [json_name = "amazon_address"];

  string amazon_side_asn = 3 [json_name = "amazon_side_asn"];

  string arn = 4;

  string aws_device = 5 [json_name = "aws_device"];

  int64 bgp_asn = 6 [json_name = "bgp_asn"];

  string bgp_auth_key = 7 [json_name = "bgp_auth_key"];

  string connection_id = 8 [json_name = "connection_id"];

  string customer_address = 9 [json_name = "customer_address"];

  string id = 10;

  bool jumbo_frame_capable = 11 [json_name = "jumbo_frame_capable"];

  int64 mtu = 12;

  string name = 13;

  string owner_account_id = 14 [json_name = "owner_account_id"];

  int64 vlan = 15;

  Timeouts timeouts = 16;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 17;

  int32 count = 18;

  terraform.meta.MetaFields.ForEachEntry for_each = 19;

  string provider = 20;

  terraform.meta.Lifecycle lifecycle = 21;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsDxHostedTransitVirtualInterfaceAccepter version is 0
message AwsDxHostedTransitVirtualInterfaceAccepter {
  string arn = 1;

  string dx_gateway_id = 2 [json_name = "dx_gateway_id"];

  string id = 3;

  map<string, string> tags = 4;

  string virtual_interface_id = 5 [json_name = "virtual_interface_id"];

  Timeouts timeouts = 6;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsDxLag version is 0
message AwsDxLag {
  string arn = 1;

  string connections_bandwidth = 2 [json_name = "connections_bandwidth"];

  bool force_destroy = 3 [json_name = "force_destroy"];

  string has_logical_redundancy = 4 [json_name = "has_logical_redundancy"];

  string id = 5;

  bool jumbo_frame_capable = 6 [json_name = "jumbo_frame_capable"];

  string location = 7;

  string name = 8;

  int64 number_of_connections = 9 [json_name = "number_of_connections"];

  map<string, string> tags = 10;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 11;

  int32 count = 12;

  terraform.meta.MetaFields.ForEachEntry for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsDxPrivateVirtualInterface version is 0
message AwsDxPrivateVirtualInterface {
  string address_family = 1 [json_name = "address_family"];

  string amazon_address = 2 [json_name = "amazon_address"];

  string amazon_side_asn = 3 [json_name = "amazon_side_asn"];

  string arn = 4;

  string aws_device = 5 [json_name = "aws_device"];

  int64 bgp_asn = 6 [json_name = "bgp_asn"];

  string bgp_auth_key = 7 [json_name = "bgp_auth_key"];

  string connection_id = 8 [json_name = "connection_id"];

  string customer_address = 9 [json_name = "customer_address"];

  string dx_gateway_id = 10 [json_name = "dx_gateway_id"];

  string id = 11;

  bool jumbo_frame_capable = 12 [json_name = "jumbo_frame_capable"];

  int64 mtu = 13;

  string name = 14;

  map<string, string> tags = 15;

  int64 vlan = 16;

  string vpn_gateway_id = 17 [json_name = "vpn_gateway_id"];

  Timeouts timeouts = 18;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 19;

  int32 count = 20;

  terraform.meta.MetaFields.ForEachEntry for_each = 21;

  string provider = 22;

  terraform.meta.Lifecycle lifecycle = 23;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsDxPublicVirtualInterface version is 0
message AwsDxPublicVirtualInterface {
  string address_family = 1 [json_name = "address_family"];

  string amazon_address = 2 [json_name = "amazon_address"];

  string amazon_side_asn = 3 [json_name = "amazon_side_asn"];

  string arn = 4;

  string aws_device = 5 [json_name = "aws_device"];

  int64 bgp_asn = 6 [json_name = "bgp_asn"];

  string bgp_auth_key = 7 [json_name = "bgp_auth_key"];

  string connection_id = 8 [json_name = "connection_id"];

  string customer_address = 9 [json_name = "customer_address"];

  string id = 10;

  string name = 11;

  repeated string route_filter_prefixes = 12 [json_name = "route_filter_prefixes"];

  map<string, string> tags = 13;

  int64 vlan = 14;

  Timeouts timeouts = 15;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 16;

  int32 count = 17;

  terraform.meta.MetaFields.ForEachEntry for_each = 18;

  string provider = 19;

  terraform.meta.Lifecycle lifecycle = 20;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsDxTransitVirtualInterface version is 0
message AwsDxTransitVirtualInterface {
  string address_family = 1 [json_name = "address_family"];

  string amazon_address = 2 [json_name = "amazon_address"];

  string amazon_side_asn = 3 [json_name = "amazon_side_asn"];

  string arn = 4;

  string aws_device = 5 [json_name = "aws_device"];

  int64 bgp_asn = 6 [json_name = "bgp_asn"];

  string bgp_auth_key = 7 [json_name = "bgp_auth_key"];

  string connection_id = 8 [json_name = "connection_id"];

  string customer_address = 9 [json_name = "customer_address"];

  string dx_gateway_id = 10 [json_name = "dx_gateway_id"];

  string id = 11;

  bool jumbo_frame_capable = 12 [json_name = "jumbo_frame_capable"];

  int64 mtu = 13;

  string name = 14;

  map<string, string> tags = 15;

  int64 vlan = 16;

  Timeouts timeouts = 17;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 18;

  int32 count = 19;

  terraform.meta.MetaFields.ForEachEntry for_each = 20;

  string provider = 21;

  terraform.meta.Lifecycle lifecycle = 22;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsDynamodbGlobalTable version is 0
message AwsDynamodbGlobalTable {
  string arn = 1;

  string id = 2;

  string name = 3;

  Replica replica = 4;

  Timeouts timeouts = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message Replica {
    string region_name = 1 [json_name = "region_name"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsDynamodbTable version is 1
message AwsDynamodbTable {
  string arn = 1;

  string billing_mode = 2 [json_name = "billing_mode"];

  string hash_key = 3 [json_name = "hash_key"];

  string id = 4;

  string name = 5;

  string range_key = 6 [json_name = "range_key"];

  int64 read_capacity = 7 [json_name = "read_capacity"];

  string stream_arn = 8 [json_name = "stream_arn"];

  bool stream_enabled = 9 [json_name = "stream_enabled"];

  string stream_label = 10 [json_name = "stream_label"];

  string stream_view_type = 11 [json_name = "stream_view_type"];

  map<string, string> tags = 12;

  int64 write_capacity = 13 [json_name = "write_capacity"];

  GlobalSecondaryIndex global_secondary_index = 14 [json_name = "global_secondary_index"];

  LocalSecondaryIndex local_secondary_index = 15 [json_name = "local_secondary_index"];

  PointInTimeRecovery point_in_time_recovery = 16 [json_name = "point_in_time_recovery"];

  Replica replica = 17;

  ServerSideEncryption server_side_encryption = 18 [json_name = "server_side_encryption"];

  Timeouts timeouts = 19;

  Ttl ttl = 20;

  Attribute attribute = 21;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 22;

  int32 count = 23;

  terraform.meta.MetaFields.ForEachEntry for_each = 24;

  string provider = 25;

  terraform.meta.Lifecycle lifecycle = 26;

  message GlobalSecondaryIndex {
    string hash_key = 1 [json_name = "hash_key"];

    string name = 2;

    repeated string non_key_attributes = 3 [json_name = "non_key_attributes"];

    string projection_type = 4 [json_name = "projection_type"];

    string range_key = 5 [json_name = "range_key"];

    int64 read_capacity = 6 [json_name = "read_capacity"];

    int64 write_capacity = 7 [json_name = "write_capacity"];
  }

  message LocalSecondaryIndex {
    string name = 1;

    repeated string non_key_attributes = 2 [json_name = "non_key_attributes"];

    string projection_type = 3 [json_name = "projection_type"];

    string range_key = 4 [json_name = "range_key"];
  }

  message PointInTimeRecovery {
    bool enabled = 1;
  }

  message Replica {
    string region_name = 1 [json_name = "region_name"];
  }

  message ServerSideEncryption {
    bool enabled = 1;

    string kms_key_arn = 2 [json_name = "kms_key_arn"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }

  message Ttl {
    string attribute_name = 1 [json_name = "attribute_name"];

    bool enabled = 2;
  }

  message Attribute {
    string name = 1;

    string type = 2;
  }
}

//AwsDynamodbTableItem version is 0
message AwsDynamodbTableItem {
  string hash_key = 1 [json_name = "hash_key"];

  string id = 2;

  string item = 3;

  string range_key = 4 [json_name = "range_key"];

  string table_name = 5 [json_name = "table_name"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsEbsDefaultKmsKey version is 0
message AwsEbsDefaultKmsKey {
  string id = 1;

  string key_arn = 2 [json_name = "key_arn"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 3;

  int32 count = 4;

  terraform.meta.MetaFields.ForEachEntry for_each = 5;

  string provider = 6;

  terraform.meta.Lifecycle lifecycle = 7;
}

//AwsEbsEncryptionByDefault version is 0
message AwsEbsEncryptionByDefault {
  bool enabled = 1;

  string id = 2;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 3;

  int32 count = 4;

  terraform.meta.MetaFields.ForEachEntry for_each = 5;

  string provider = 6;

  terraform.meta.Lifecycle lifecycle = 7;
}

//AwsEbsSnapshot version is 0
message AwsEbsSnapshot {
  string data_encryption_key_id = 1 [json_name = "data_encryption_key_id"];

  string description = 2;

  bool encrypted = 3;

  string id = 4;

  string kms_key_id = 5 [json_name = "kms_key_id"];

  string owner_alias = 6 [json_name = "owner_alias"];

  string owner_id = 7 [json_name = "owner_id"];

  map<string, string> tags = 8;

  string volume_id = 9 [json_name = "volume_id"];

  int64 volume_size = 10 [json_name = "volume_size"];

  Timeouts timeouts = 11;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 12;

  int32 count = 13;

  terraform.meta.MetaFields.ForEachEntry for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsEbsSnapshotCopy version is 0
message AwsEbsSnapshotCopy {
  string data_encryption_key_id = 1 [json_name = "data_encryption_key_id"];

  string description = 2;

  bool encrypted = 3;

  string id = 4;

  string kms_key_id = 5 [json_name = "kms_key_id"];

  string owner_alias = 6 [json_name = "owner_alias"];

  string owner_id = 7 [json_name = "owner_id"];

  string source_region = 8 [json_name = "source_region"];

  string source_snapshot_id = 9 [json_name = "source_snapshot_id"];

  map<string, string> tags = 10;

  string volume_id = 11 [json_name = "volume_id"];

  int64 volume_size = 12 [json_name = "volume_size"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 13;

  int32 count = 14;

  terraform.meta.MetaFields.ForEachEntry for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;
}

//AwsEbsVolume version is 0
message AwsEbsVolume {
  string arn = 1;

  string availability_zone = 2 [json_name = "availability_zone"];

  bool encrypted = 3;

  string id = 4;

  int64 iops = 5;

  string kms_key_id = 6 [json_name = "kms_key_id"];

  int64 size = 7;

  string snapshot_id = 8 [json_name = "snapshot_id"];

  map<string, string> tags = 9;

  string type = 10;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 11;

  int32 count = 12;

  terraform.meta.MetaFields.ForEachEntry for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsEc2AvailabilityZoneGroup version is 0
message AwsEc2AvailabilityZoneGroup {
  string group_name = 1 [json_name = "group_name"];

  string id = 2;

  string opt_in_status = 3 [json_name = "opt_in_status"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsEc2CapacityReservation version is 0
message AwsEc2CapacityReservation {
  string availability_zone = 1 [json_name = "availability_zone"];

  bool ebs_optimized = 2 [json_name = "ebs_optimized"];

  string end_date = 3 [json_name = "end_date"];

  string end_date_type = 4 [json_name = "end_date_type"];

  bool ephemeral_storage = 5 [json_name = "ephemeral_storage"];

  string id = 6;

  int64 instance_count = 7 [json_name = "instance_count"];

  string instance_match_criteria = 8 [json_name = "instance_match_criteria"];

  string instance_platform = 9 [json_name = "instance_platform"];

  string instance_type = 10 [json_name = "instance_type"];

  map<string, string> tags = 11;

  string tenancy = 12;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 13;

  int32 count = 14;

  terraform.meta.MetaFields.ForEachEntry for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;
}

//AwsEc2ClientVpnEndpoint version is 0
message AwsEc2ClientVpnEndpoint {
  string client_cidr_block = 1 [json_name = "client_cidr_block"];

  string description = 2;

  string dns_name = 3 [json_name = "dns_name"];

  repeated string dns_servers = 4 [json_name = "dns_servers"];

  string id = 5;

  string server_certificate_arn = 6 [json_name = "server_certificate_arn"];

  bool split_tunnel = 7 [json_name = "split_tunnel"];

  string status = 8;

  map<string, string> tags = 9;

  string transport_protocol = 10 [json_name = "transport_protocol"];

  AuthenticationOptions authentication_options = 11 [json_name = "authentication_options"];

  ConnectionLogOptions connection_log_options = 12 [json_name = "connection_log_options"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 13;

  int32 count = 14;

  terraform.meta.MetaFields.ForEachEntry for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message AuthenticationOptions {
    string active_directory_id = 1 [json_name = "active_directory_id"];

    string root_certificate_chain_arn = 2 [json_name = "root_certificate_chain_arn"];

    string type = 3;
  }

  message ConnectionLogOptions {
    string cloudwatch_log_group = 1 [json_name = "cloudwatch_log_group"];

    string cloudwatch_log_stream = 2 [json_name = "cloudwatch_log_stream"];

    bool enabled = 3;
  }
}

//AwsEc2ClientVpnNetworkAssociation version is 0
message AwsEc2ClientVpnNetworkAssociation {
  string client_vpn_endpoint_id = 1 [json_name = "client_vpn_endpoint_id"];

  string id = 2;

  repeated string security_groups = 3 [json_name = "security_groups"];

  string status = 4;

  string subnet_id = 5 [json_name = "subnet_id"];

  string vpc_id = 6 [json_name = "vpc_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsEc2Fleet version is 0
message AwsEc2Fleet {
  string excess_capacity_termination_policy = 1 [json_name = "excess_capacity_termination_policy"];

  string id = 2;

  bool replace_unhealthy_instances = 3 [json_name = "replace_unhealthy_instances"];

  map<string, string> tags = 4;

  bool terminate_instances = 5 [json_name = "terminate_instances"];

  bool terminate_instances_with_expiration = 6 [json_name = "terminate_instances_with_expiration"];

  string type = 7;

  LaunchTemplateConfig launch_template_config = 8 [json_name = "launch_template_config"];

  OnDemandOptions on_demand_options = 9 [json_name = "on_demand_options"];

  SpotOptions spot_options = 10 [json_name = "spot_options"];

  TargetCapacitySpecification target_capacity_specification = 11 [json_name = "target_capacity_specification"];

  Timeouts timeouts = 12;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 13;

  int32 count = 14;

  terraform.meta.MetaFields.ForEachEntry for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message LaunchTemplateConfig {
    LaunchTemplateSpecification launch_template_specification = 1 [json_name = "launch_template_specification"];

    Override override = 2;

    message LaunchTemplateSpecification {
      string launch_template_id = 1 [json_name = "launch_template_id"];

      string launch_template_name = 2 [json_name = "launch_template_name"];

      string version = 3;
    }

    message Override {
      string availability_zone = 1 [json_name = "availability_zone"];

      string instance_type = 2 [json_name = "instance_type"];

      string max_price = 3 [json_name = "max_price"];

      int64 priority = 4;

      string subnet_id = 5 [json_name = "subnet_id"];

      int64 weighted_capacity = 6 [json_name = "weighted_capacity"];
    }
  }

  message OnDemandOptions {
    string allocation_strategy = 1 [json_name = "allocation_strategy"];
  }

  message SpotOptions {
    string allocation_strategy = 1 [json_name = "allocation_strategy"];

    string instance_interruption_behavior = 2 [json_name = "instance_interruption_behavior"];

    int64 instance_pools_to_use_count = 3 [json_name = "instance_pools_to_use_count"];
  }

  message TargetCapacitySpecification {
    string default_target_capacity_type = 1 [json_name = "default_target_capacity_type"];

    int64 on_demand_target_capacity = 2 [json_name = "on_demand_target_capacity"];

    int64 spot_target_capacity = 3 [json_name = "spot_target_capacity"];

    int64 total_target_capacity = 4 [json_name = "total_target_capacity"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsEc2TrafficMirrorFilter version is 0
message AwsEc2TrafficMirrorFilter {
  string description = 1;

  string id = 2;

  repeated string network_services = 3 [json_name = "network_services"];

  map<string, string> tags = 4;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsEc2TrafficMirrorFilterRule version is 0
message AwsEc2TrafficMirrorFilterRule {
  string description = 1;

  string destination_cidr_block = 2 [json_name = "destination_cidr_block"];

  string id = 3;

  int64 protocol = 4;

  string rule_action = 5 [json_name = "rule_action"];

  int64 rule_number = 6 [json_name = "rule_number"];

  string source_cidr_block = 7 [json_name = "source_cidr_block"];

  string traffic_direction = 8 [json_name = "traffic_direction"];

  string traffic_mirror_filter_id = 9 [json_name = "traffic_mirror_filter_id"];

  DestinationPortRange destination_port_range = 10 [json_name = "destination_port_range"];

  SourcePortRange source_port_range = 11 [json_name = "source_port_range"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 12;

  int32 count = 13;

  terraform.meta.MetaFields.ForEachEntry for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message DestinationPortRange {
    int64 from_port = 1 [json_name = "from_port"];

    int64 to_port = 2 [json_name = "to_port"];
  }

  message SourcePortRange {
    int64 from_port = 1 [json_name = "from_port"];

    int64 to_port = 2 [json_name = "to_port"];
  }
}

//AwsEc2TrafficMirrorSession version is 0
message AwsEc2TrafficMirrorSession {
  string description = 1;

  string id = 2;

  string network_interface_id = 3 [json_name = "network_interface_id"];

  int64 packet_length = 4 [json_name = "packet_length"];

  int64 session_number = 5 [json_name = "session_number"];

  map<string, string> tags = 6;

  string traffic_mirror_filter_id = 7 [json_name = "traffic_mirror_filter_id"];

  string traffic_mirror_target_id = 8 [json_name = "traffic_mirror_target_id"];

  int64 virtual_network_id = 9 [json_name = "virtual_network_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 10;

  int32 count = 11;

  terraform.meta.MetaFields.ForEachEntry for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;
}

//AwsEc2TrafficMirrorTarget version is 0
message AwsEc2TrafficMirrorTarget {
  string description = 1;

  string id = 2;

  string network_interface_id = 3 [json_name = "network_interface_id"];

  string network_load_balancer_arn = 4 [json_name = "network_load_balancer_arn"];

  map<string, string> tags = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsEc2TransitGateway version is 0
message AwsEc2TransitGateway {
  int64 amazon_side_asn = 1 [json_name = "amazon_side_asn"];

  string arn = 2;

  string association_default_route_table_id = 3 [json_name = "association_default_route_table_id"];

  string auto_accept_shared_attachments = 4 [json_name = "auto_accept_shared_attachments"];

  string default_route_table_association = 5 [json_name = "default_route_table_association"];

  string default_route_table_propagation = 6 [json_name = "default_route_table_propagation"];

  string description = 7;

  string dns_support = 8 [json_name = "dns_support"];

  string id = 9;

  string owner_id = 10 [json_name = "owner_id"];

  string propagation_default_route_table_id = 11 [json_name = "propagation_default_route_table_id"];

  map<string, string> tags = 12;

  string vpn_ecmp_support = 13 [json_name = "vpn_ecmp_support"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 14;

  int32 count = 15;

  terraform.meta.MetaFields.ForEachEntry for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;
}

//AwsEc2TransitGatewayRoute version is 0
message AwsEc2TransitGatewayRoute {
  bool blackhole = 1;

  string destination_cidr_block = 2 [json_name = "destination_cidr_block"];

  string id = 3;

  string transit_gateway_attachment_id = 4 [json_name = "transit_gateway_attachment_id"];

  string transit_gateway_route_table_id = 5 [json_name = "transit_gateway_route_table_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsEc2TransitGatewayRouteTable version is 0
message AwsEc2TransitGatewayRouteTable {
  bool default_association_route_table = 1 [json_name = "default_association_route_table"];

  bool default_propagation_route_table = 2 [json_name = "default_propagation_route_table"];

  string id = 3;

  map<string, string> tags = 4;

  string transit_gateway_id = 5 [json_name = "transit_gateway_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsEc2TransitGatewayRouteTableAssociation version is 0
message AwsEc2TransitGatewayRouteTableAssociation {
  string id = 1;

  string resource_id = 2 [json_name = "resource_id"];

  string resource_type = 3 [json_name = "resource_type"];

  string transit_gateway_attachment_id = 4 [json_name = "transit_gateway_attachment_id"];

  string transit_gateway_route_table_id = 5 [json_name = "transit_gateway_route_table_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsEc2TransitGatewayRouteTablePropagation version is 0
message AwsEc2TransitGatewayRouteTablePropagation {
  string id = 1;

  string resource_id = 2 [json_name = "resource_id"];

  string resource_type = 3 [json_name = "resource_type"];

  string transit_gateway_attachment_id = 4 [json_name = "transit_gateway_attachment_id"];

  string transit_gateway_route_table_id = 5 [json_name = "transit_gateway_route_table_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsEc2TransitGatewayVpcAttachment version is 0
message AwsEc2TransitGatewayVpcAttachment {
  string dns_support = 1 [json_name = "dns_support"];

  string id = 2;

  string ipv6_support = 3 [json_name = "ipv6_support"];

  repeated string subnet_ids = 4 [json_name = "subnet_ids"];

  map<string, string> tags = 5;

  bool transit_gateway_default_route_table_association = 6 [json_name = "transit_gateway_default_route_table_association"];

  bool transit_gateway_default_route_table_propagation = 7 [json_name = "transit_gateway_default_route_table_propagation"];

  string transit_gateway_id = 8 [json_name = "transit_gateway_id"];

  string vpc_id = 9 [json_name = "vpc_id"];

  string vpc_owner_id = 10 [json_name = "vpc_owner_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 11;

  int32 count = 12;

  terraform.meta.MetaFields.ForEachEntry for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsEc2TransitGatewayVpcAttachmentAccepter version is 0
message AwsEc2TransitGatewayVpcAttachmentAccepter {
  string dns_support = 1 [json_name = "dns_support"];

  string id = 2;

  string ipv6_support = 3 [json_name = "ipv6_support"];

  repeated string subnet_ids = 4 [json_name = "subnet_ids"];

  map<string, string> tags = 5;

  string transit_gateway_attachment_id = 6 [json_name = "transit_gateway_attachment_id"];

  bool transit_gateway_default_route_table_association = 7 [json_name = "transit_gateway_default_route_table_association"];

  bool transit_gateway_default_route_table_propagation = 8 [json_name = "transit_gateway_default_route_table_propagation"];

  string transit_gateway_id = 9 [json_name = "transit_gateway_id"];

  string vpc_id = 10 [json_name = "vpc_id"];

  string vpc_owner_id = 11 [json_name = "vpc_owner_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 12;

  int32 count = 13;

  terraform.meta.MetaFields.ForEachEntry for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;
}

//AwsEcrLifecyclePolicy version is 0
message AwsEcrLifecyclePolicy {
  string id = 1;

  string policy = 2;

  string registry_id = 3 [json_name = "registry_id"];

  string repository = 4;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsEcrRepository version is 0
message AwsEcrRepository {
  string arn = 1;

  string id = 2;

  string image_tag_mutability = 3 [json_name = "image_tag_mutability"];

  string name = 4;

  string registry_id = 5 [json_name = "registry_id"];

  string repository_url = 6 [json_name = "repository_url"];

  map<string, string> tags = 7;

  ImageScanningConfiguration image_scanning_configuration = 8 [json_name = "image_scanning_configuration"];

  Timeouts timeouts = 9;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 10;

  int32 count = 11;

  terraform.meta.MetaFields.ForEachEntry for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message ImageScanningConfiguration {
    bool scan_on_push = 1 [json_name = "scan_on_push"];
  }

  message Timeouts {
    string delete = 1;
  }
}

//AwsEcrRepositoryPolicy version is 0
message AwsEcrRepositoryPolicy {
  string id = 1;

  string policy = 2;

  string registry_id = 3 [json_name = "registry_id"];

  string repository = 4;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsEcsCapacityProvider version is 0
message AwsEcsCapacityProvider {
  string arn = 1;

  string id = 2;

  string name = 3;

  map<string, string> tags = 4;

  AutoScalingGroupProvider auto_scaling_group_provider = 5 [json_name = "auto_scaling_group_provider"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message AutoScalingGroupProvider {
    string auto_scaling_group_arn = 1 [json_name = "auto_scaling_group_arn"];

    string managed_termination_protection = 2 [json_name = "managed_termination_protection"];

    ManagedScaling managed_scaling = 3 [json_name = "managed_scaling"];

    message ManagedScaling {
      int64 maximum_scaling_step_size = 1 [json_name = "maximum_scaling_step_size"];

      int64 minimum_scaling_step_size = 2 [json_name = "minimum_scaling_step_size"];

      string status = 3;

      int64 target_capacity = 4 [json_name = "target_capacity"];
    }
  }
}

//AwsEcsCluster version is 0
message AwsEcsCluster {
  string arn = 1;

  repeated string capacity_providers = 2 [json_name = "capacity_providers"];

  string id = 3;

  string name = 4;

  map<string, string> tags = 5;

  DefaultCapacityProviderStrategy default_capacity_provider_strategy = 6 [json_name = "default_capacity_provider_strategy"];

  Setting setting = 7;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message DefaultCapacityProviderStrategy {
    int64 base = 1;

    string capacity_provider = 2 [json_name = "capacity_provider"];

    int64 weight = 3;
  }

  message Setting {
    string name = 1;

    string value = 2;
  }
}

//AwsEcsService version is 0
message AwsEcsService {
  string cluster = 1;

  int64 deployment_maximum_percent = 2 [json_name = "deployment_maximum_percent"];

  int64 deployment_minimum_healthy_percent = 3 [json_name = "deployment_minimum_healthy_percent"];

  int64 desired_count = 4 [json_name = "desired_count"];

  bool enable_ecs_managed_tags = 5 [json_name = "enable_ecs_managed_tags"];

  int64 health_check_grace_period_seconds = 6 [json_name = "health_check_grace_period_seconds"];

  string iam_role = 7 [json_name = "iam_role"];

  string id = 8;

  string launch_type = 9 [json_name = "launch_type"];

  string name = 10;

  string platform_version = 11 [json_name = "platform_version"];

  string propagate_tags = 12 [json_name = "propagate_tags"];

  string scheduling_strategy = 13 [json_name = "scheduling_strategy"];

  map<string, string> tags = 14;

  string task_definition = 15 [json_name = "task_definition"];

  DeploymentController deployment_controller = 16 [json_name = "deployment_controller"];

  LoadBalancer load_balancer = 17 [json_name = "load_balancer"];

  NetworkConfiguration network_configuration = 18 [json_name = "network_configuration"];

  OrderedPlacementStrategy ordered_placement_strategy = 19 [json_name = "ordered_placement_strategy"];

  PlacementConstraints placement_constraints = 20 [json_name = "placement_constraints"];

  PlacementStrategy placement_strategy = 21 [json_name = "placement_strategy"];

  ServiceRegistries service_registries = 22 [json_name = "service_registries"];

  CapacityProviderStrategy capacity_provider_strategy = 23 [json_name = "capacity_provider_strategy"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 24;

  int32 count = 25;

  terraform.meta.MetaFields.ForEachEntry for_each = 26;

  string provider = 27;

  terraform.meta.Lifecycle lifecycle = 28;

  message DeploymentController {
    string type = 1;
  }

  message LoadBalancer {
    string container_name = 1 [json_name = "container_name"];

    int64 container_port = 2 [json_name = "container_port"];

    string elb_name = 3 [json_name = "elb_name"];

    string target_group_arn = 4 [json_name = "target_group_arn"];
  }

  message NetworkConfiguration {
    bool assign_public_ip = 1 [json_name = "assign_public_ip"];

    repeated string security_groups = 2 [json_name = "security_groups"];

    repeated string subnets = 3;
  }

  message OrderedPlacementStrategy {
    string field = 1;

    string type = 2;
  }

  message PlacementConstraints {
    string expression = 1;

    string type = 2;
  }

  message PlacementStrategy {
    string field = 1;

    string type = 2;
  }

  message ServiceRegistries {
    string container_name = 1 [json_name = "container_name"];

    int64 container_port = 2 [json_name = "container_port"];

    int64 port = 3;

    string registry_arn = 4 [json_name = "registry_arn"];
  }

  message CapacityProviderStrategy {
    int64 base = 1;

    string capacity_provider = 2 [json_name = "capacity_provider"];

    int64 weight = 3;
  }
}

//AwsEcsTaskDefinition version is 1
message AwsEcsTaskDefinition {
  string arn = 1;

  string container_definitions = 2 [json_name = "container_definitions"];

  string cpu = 3;

  string execution_role_arn = 4 [json_name = "execution_role_arn"];

  string family = 5;

  string id = 6;

  string ipc_mode = 7 [json_name = "ipc_mode"];

  string memory = 8;

  string network_mode = 9 [json_name = "network_mode"];

  string pid_mode = 10 [json_name = "pid_mode"];

  repeated string requires_compatibilities = 11 [json_name = "requires_compatibilities"];

  int64 revision = 12;

  map<string, string> tags = 13;

  string task_role_arn = 14 [json_name = "task_role_arn"];

  InferenceAccelerator inference_accelerator = 15 [json_name = "inference_accelerator"];

  PlacementConstraints placement_constraints = 16 [json_name = "placement_constraints"];

  ProxyConfiguration proxy_configuration = 17 [json_name = "proxy_configuration"];

  Volume volume = 18;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 19;

  int32 count = 20;

  terraform.meta.MetaFields.ForEachEntry for_each = 21;

  string provider = 22;

  terraform.meta.Lifecycle lifecycle = 23;

  message InferenceAccelerator {
    string device_name = 1 [json_name = "device_name"];

    string device_type = 2 [json_name = "device_type"];
  }

  message PlacementConstraints {
    string expression = 1;

    string type = 2;
  }

  message ProxyConfiguration {
    string container_name = 1 [json_name = "container_name"];

    map<string, string> properties = 2;

    string type = 3;
  }

  message Volume {
    string host_path = 1 [json_name = "host_path"];

    string name = 2;

    DockerVolumeConfiguration docker_volume_configuration = 3 [json_name = "docker_volume_configuration"];

    EfsVolumeConfiguration efs_volume_configuration = 4 [json_name = "efs_volume_configuration"];

    message DockerVolumeConfiguration {
      bool autoprovision = 1;

      string driver = 2;

      map<string, string> driver_opts = 3;

      map<string, string> labels = 4;

      string scope = 5;
    }

    message EfsVolumeConfiguration {
      string file_system_id = 1 [json_name = "file_system_id"];

      string root_directory = 2 [json_name = "root_directory"];
    }
  }
}

//AwsEfsFileSystem version is 0
message AwsEfsFileSystem {
  string arn = 1;

  string creation_token = 2 [json_name = "creation_token"];

  string dns_name = 3 [json_name = "dns_name"];

  bool encrypted = 4;

  string id = 5;

  string kms_key_id = 6 [json_name = "kms_key_id"];

  string performance_mode = 7 [json_name = "performance_mode"];

  int64 provisioned_throughput_in_mibps = 8 [json_name = "provisioned_throughput_in_mibps"];

  string reference_name = 9 [json_name = "reference_name"];

  map<string, string> tags = 10;

  string throughput_mode = 11 [json_name = "throughput_mode"];

  LifecyclePolicy lifecycle_policy = 12 [json_name = "lifecycle_policy"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 13;

  int32 count = 14;

  terraform.meta.MetaFields.ForEachEntry for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message LifecyclePolicy {
    string transition_to_ia = 1 [json_name = "transition_to_ia"];
  }
}

//AwsEfsMountTarget version is 0
message AwsEfsMountTarget {
  string dns_name = 1 [json_name = "dns_name"];

  string file_system_arn = 2 [json_name = "file_system_arn"];

  string file_system_id = 3 [json_name = "file_system_id"];

  string id = 4;

  string ip_address = 5 [json_name = "ip_address"];

  string network_interface_id = 6 [json_name = "network_interface_id"];

  repeated string security_groups = 7 [json_name = "security_groups"];

  string subnet_id = 8 [json_name = "subnet_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsEgressOnlyInternetGateway version is 0
message AwsEgressOnlyInternetGateway {
  string id = 1;

  map<string, string> tags = 2;

  string vpc_id = 3 [json_name = "vpc_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsEip version is 0
message AwsEip {
  string allocation_id = 1 [json_name = "allocation_id"];

  string associate_with_private_ip = 2 [json_name = "associate_with_private_ip"];

  string association_id = 3 [json_name = "association_id"];

  string domain = 4;

  string id = 5;

  string instance = 6;

  string network_interface = 7 [json_name = "network_interface"];

  string private_dns = 8 [json_name = "private_dns"];

  string private_ip = 9 [json_name = "private_ip"];

  string public_dns = 10 [json_name = "public_dns"];

  string public_ip = 11 [json_name = "public_ip"];

  string public_ipv4_pool = 12 [json_name = "public_ipv4_pool"];

  map<string, string> tags = 13;

  bool vpc = 14;

  Timeouts timeouts = 15;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 16;

  int32 count = 17;

  terraform.meta.MetaFields.ForEachEntry for_each = 18;

  string provider = 19;

  terraform.meta.Lifecycle lifecycle = 20;

  message Timeouts {
    string delete = 1;

    string read = 2;

    string update = 3;
  }
}

//AwsEipAssociation version is 0
message AwsEipAssociation {
  string allocation_id = 1 [json_name = "allocation_id"];

  bool allow_reassociation = 2 [json_name = "allow_reassociation"];

  string id = 3;

  string instance_id = 4 [json_name = "instance_id"];

  string network_interface_id = 5 [json_name = "network_interface_id"];

  string private_ip_address = 6 [json_name = "private_ip_address"];

  string public_ip = 7 [json_name = "public_ip"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsEksCluster version is 0
message AwsEksCluster {
  string arn = 1;

  repeated CertificateAuthority certificate_authority = 2 [json_name = "certificate_authority"];

  string created_at = 3 [json_name = "created_at"];

  repeated string enabled_cluster_log_types = 4 [json_name = "enabled_cluster_log_types"];

  string endpoint = 5;

  string id = 6;

  repeated Identity identity = 7;

  string name = 8;

  string platform_version = 9 [json_name = "platform_version"];

  string role_arn = 10 [json_name = "role_arn"];

  string status = 11;

  map<string, string> tags = 12;

  string version = 13;

  EncryptionConfig encryption_config = 14 [json_name = "encryption_config"];

  Timeouts timeouts = 15;

  VpcConfig vpc_config = 16 [json_name = "vpc_config"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 17;

  int32 count = 18;

  terraform.meta.MetaFields.ForEachEntry for_each = 19;

  string provider = 20;

  terraform.meta.Lifecycle lifecycle = 21;

  message CertificateAuthority {
    //data: string
    string data = 1;
  }

  message Identity {
    //oidc: list of object
    repeated Oidc oidc = 1;

    message Oidc {
      //issuer: string
      string issuer = 1;
    }
  }

  message EncryptionConfig {
    repeated string resources = 1;

    Provider provider = 2;

    message Provider {
      string key_arn = 1 [json_name = "key_arn"];
    }
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }

  message VpcConfig {
    string cluster_security_group_id = 1 [json_name = "cluster_security_group_id"];

    bool endpoint_private_access = 2 [json_name = "endpoint_private_access"];

    bool endpoint_public_access = 3 [json_name = "endpoint_public_access"];

    repeated string public_access_cidrs = 4 [json_name = "public_access_cidrs"];

    repeated string security_group_ids = 5 [json_name = "security_group_ids"];

    repeated string subnet_ids = 6 [json_name = "subnet_ids"];

    string vpc_id = 7 [json_name = "vpc_id"];
  }
}

//AwsEksFargateProfile version is 0
message AwsEksFargateProfile {
  string arn = 1;

  string cluster_name = 2 [json_name = "cluster_name"];

  string fargate_profile_name = 3 [json_name = "fargate_profile_name"];

  string id = 4;

  string pod_execution_role_arn = 5 [json_name = "pod_execution_role_arn"];

  string status = 6;

  repeated string subnet_ids = 7 [json_name = "subnet_ids"];

  map<string, string> tags = 8;

  Selector selector = 9;

  Timeouts timeouts = 10;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 11;

  int32 count = 12;

  terraform.meta.MetaFields.ForEachEntry for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message Selector {
    map<string, string> labels = 1;

    string namespace = 2;
  }

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsEksNodeGroup version is 0
message AwsEksNodeGroup {
  string ami_type = 1 [json_name = "ami_type"];

  string arn = 2;

  string cluster_name = 3 [json_name = "cluster_name"];

  int64 disk_size = 4 [json_name = "disk_size"];

  string id = 5;

  repeated string instance_types = 6 [json_name = "instance_types"];

  map<string, string> labels = 7;

  string node_group_name = 8 [json_name = "node_group_name"];

  string node_role_arn = 9 [json_name = "node_role_arn"];

  string release_version = 10 [json_name = "release_version"];

  repeated Resources resources = 11;

  string status = 12;

  repeated string subnet_ids = 13 [json_name = "subnet_ids"];

  map<string, string> tags = 14;

  string version = 15;

  RemoteAccess remote_access = 16 [json_name = "remote_access"];

  ScalingConfig scaling_config = 17 [json_name = "scaling_config"];

  Timeouts timeouts = 18;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 19;

  int32 count = 20;

  terraform.meta.MetaFields.ForEachEntry for_each = 21;

  string provider = 22;

  terraform.meta.Lifecycle lifecycle = 23;

  message Resources {
    //autoscaling_groups: list of object
    repeated AutoscalingGroups autoscaling_groups = 1 [json_name = "autoscaling_groups"];

    //remote_access_security_group_id: string
    string remote_access_security_group_id = 2 [json_name = "remote_access_security_group_id"];

    message AutoscalingGroups {
      //name: string
      string name = 1;
    }
  }

  message RemoteAccess {
    string ec2_ssh_key = 1 [json_name = "ec2_ssh_key"];

    repeated string source_security_group_ids = 2 [json_name = "source_security_group_ids"];
  }

  message ScalingConfig {
    int64 desired_size = 1 [json_name = "desired_size"];

    int64 max_size = 2 [json_name = "max_size"];

    int64 min_size = 3 [json_name = "min_size"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsElasticBeanstalkApplication version is 0
message AwsElasticBeanstalkApplication {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  map<string, string> tags = 5;

  AppversionLifecycle appversion_lifecycle = 6 [json_name = "appversion_lifecycle"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message AppversionLifecycle {
    bool delete_source_from_s3 = 1 [json_name = "delete_source_from_s3"];

    int64 max_age_in_days = 2 [json_name = "max_age_in_days"];

    int64 max_count = 3 [json_name = "max_count"];

    string service_role = 4 [json_name = "service_role"];
  }
}

//AwsElasticBeanstalkApplicationVersion version is 0
message AwsElasticBeanstalkApplicationVersion {
  string application = 1;

  string arn = 2;

  string bucket = 3;

  string description = 4;

  bool force_delete = 5 [json_name = "force_delete"];

  string id = 6;

  string key = 7;

  string name = 8;

  map<string, string> tags = 9;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 10;

  int32 count = 11;

  terraform.meta.MetaFields.ForEachEntry for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;
}

//AwsElasticBeanstalkConfigurationTemplate version is 0
message AwsElasticBeanstalkConfigurationTemplate {
  string application = 1;

  string description = 2;

  string environment_id = 3 [json_name = "environment_id"];

  string id = 4;

  string name = 5;

  string solution_stack_name = 6 [json_name = "solution_stack_name"];

  Setting setting = 7;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message Setting {
    string name = 1;

    string namespace = 2;

    string resource = 3;

    string value = 4;
  }
}

//AwsElasticBeanstalkEnvironment version is 1
message AwsElasticBeanstalkEnvironment {
  repeated AllSettings all_settings = 1 [json_name = "all_settings"];

  string application = 2;

  string arn = 3;

  repeated string autoscaling_groups = 4 [json_name = "autoscaling_groups"];

  string cname = 5;

  string cname_prefix = 6 [json_name = "cname_prefix"];

  string description = 7;

  string endpoint_url = 8 [json_name = "endpoint_url"];

  string id = 9;

  repeated string instances = 10;

  repeated string launch_configurations = 11 [json_name = "launch_configurations"];

  repeated string load_balancers = 12 [json_name = "load_balancers"];

  string name = 13;

  string platform_arn = 14 [json_name = "platform_arn"];

  string poll_interval = 15 [json_name = "poll_interval"];

  repeated string queues = 16;

  string solution_stack_name = 17 [json_name = "solution_stack_name"];

  map<string, string> tags = 18;

  string template_name = 19 [json_name = "template_name"];

  string tier = 20;

  repeated string triggers = 21;

  string version_label = 22 [json_name = "version_label"];

  string wait_for_ready_timeout = 23 [json_name = "wait_for_ready_timeout"];

  Setting setting = 24;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 25;

  int32 count = 26;

  terraform.meta.MetaFields.ForEachEntry for_each = 27;

  string provider = 28;

  terraform.meta.Lifecycle lifecycle = 29;

  message AllSettings {
    //name: string
    string name = 1;

    //namespace: string
    string namespace = 2;

    //resource: string
    string resource = 3;

    //value: string
    string value = 4;
  }

  message Setting {
    string name = 1;

    string namespace = 2;

    string resource = 3;

    string value = 4;
  }
}

//AwsElasticacheCluster version is 0
message AwsElasticacheCluster {
  bool apply_immediately = 1 [json_name = "apply_immediately"];

  string arn = 2;

  string availability_zone = 3 [json_name = "availability_zone"];

  repeated string availability_zones = 4 [json_name = "availability_zones"];

  string az_mode = 5 [json_name = "az_mode"];

  repeated CacheNodes cache_nodes = 6 [json_name = "cache_nodes"];

  string cluster_address = 7 [json_name = "cluster_address"];

  string cluster_id = 8 [json_name = "cluster_id"];

  string configuration_endpoint = 9 [json_name = "configuration_endpoint"];

  string engine = 10;

  string engine_version = 11 [json_name = "engine_version"];

  string id = 12;

  string maintenance_window = 13 [json_name = "maintenance_window"];

  string node_type = 14 [json_name = "node_type"];

  string notification_topic_arn = 15 [json_name = "notification_topic_arn"];

  int64 num_cache_nodes = 16 [json_name = "num_cache_nodes"];

  string parameter_group_name = 17 [json_name = "parameter_group_name"];

  int64 port = 18;

  repeated string preferred_availability_zones = 19 [json_name = "preferred_availability_zones"];

  string replication_group_id = 20 [json_name = "replication_group_id"];

  repeated string security_group_ids = 21 [json_name = "security_group_ids"];

  repeated string security_group_names = 22 [json_name = "security_group_names"];

  repeated string snapshot_arns = 23 [json_name = "snapshot_arns"];

  string snapshot_name = 24 [json_name = "snapshot_name"];

  int64 snapshot_retention_limit = 25 [json_name = "snapshot_retention_limit"];

  string snapshot_window = 26 [json_name = "snapshot_window"];

  string subnet_group_name = 27 [json_name = "subnet_group_name"];

  map<string, string> tags = 28;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 29;

  int32 count = 30;

  terraform.meta.MetaFields.ForEachEntry for_each = 31;

  string provider = 32;

  terraform.meta.Lifecycle lifecycle = 33;

  message CacheNodes {
    //address: string
    string address = 1;

    //availability_zone: string
    string availability_zone = 2 [json_name = "availability_zone"];

    //id: string
    string id = 3;

    //port: number
    int64 port = 4;
  }
}

//AwsElasticacheParameterGroup version is 0
message AwsElasticacheParameterGroup {
  string description = 1;

  string family = 2;

  string id = 3;

  string name = 4;

  Parameter parameter = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message Parameter {
    string name = 1;

    string value = 2;
  }
}

//AwsElasticacheReplicationGroup version is 1
message AwsElasticacheReplicationGroup {
  bool apply_immediately = 1 [json_name = "apply_immediately"];

  bool at_rest_encryption_enabled = 2 [json_name = "at_rest_encryption_enabled"];

  string auth_token = 3 [json_name = "auth_token"];

  bool auto_minor_version_upgrade = 4 [json_name = "auto_minor_version_upgrade"];

  bool automatic_failover_enabled = 5 [json_name = "automatic_failover_enabled"];

  repeated string availability_zones = 6 [json_name = "availability_zones"];

  string configuration_endpoint_address = 7 [json_name = "configuration_endpoint_address"];

  string engine = 8;

  string engine_version = 9 [json_name = "engine_version"];

  string id = 10;

  string kms_key_id = 11 [json_name = "kms_key_id"];

  string maintenance_window = 12 [json_name = "maintenance_window"];

  repeated string member_clusters = 13 [json_name = "member_clusters"];

  string node_type = 14 [json_name = "node_type"];

  string notification_topic_arn = 15 [json_name = "notification_topic_arn"];

  int64 number_cache_clusters = 16 [json_name = "number_cache_clusters"];

  string parameter_group_name = 17 [json_name = "parameter_group_name"];

  int64 port = 18;

  string primary_endpoint_address = 19 [json_name = "primary_endpoint_address"];

  string replication_group_description = 20 [json_name = "replication_group_description"];

  string replication_group_id = 21 [json_name = "replication_group_id"];

  repeated string security_group_ids = 22 [json_name = "security_group_ids"];

  repeated string security_group_names = 23 [json_name = "security_group_names"];

  repeated string snapshot_arns = 24 [json_name = "snapshot_arns"];

  string snapshot_name = 25 [json_name = "snapshot_name"];

  int64 snapshot_retention_limit = 26 [json_name = "snapshot_retention_limit"];

  string snapshot_window = 27 [json_name = "snapshot_window"];

  string subnet_group_name = 28 [json_name = "subnet_group_name"];

  map<string, string> tags = 29;

  bool transit_encryption_enabled = 30 [json_name = "transit_encryption_enabled"];

  ClusterMode cluster_mode = 31 [json_name = "cluster_mode"];

  Timeouts timeouts = 32;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 33;

  int32 count = 34;

  terraform.meta.MetaFields.ForEachEntry for_each = 35;

  string provider = 36;

  terraform.meta.Lifecycle lifecycle = 37;

  message ClusterMode {
    int64 num_node_groups = 1 [json_name = "num_node_groups"];

    int64 replicas_per_node_group = 2 [json_name = "replicas_per_node_group"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsElasticacheSecurityGroup version is 0
message AwsElasticacheSecurityGroup {
  string description = 1;

  string id = 2;

  string name = 3;

  repeated string security_group_names = 4 [json_name = "security_group_names"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsElasticacheSubnetGroup version is 0
message AwsElasticacheSubnetGroup {
  string description = 1;

  string id = 2;

  string name = 3;

  repeated string subnet_ids = 4 [json_name = "subnet_ids"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsElasticsearchDomain version is 0
message AwsElasticsearchDomain {
  string access_policies = 1 [json_name = "access_policies"];

  map<string, string> advanced_options = 2;

  string arn = 3;

  string domain_id = 4 [json_name = "domain_id"];

  string domain_name = 5 [json_name = "domain_name"];

  string elasticsearch_version = 6 [json_name = "elasticsearch_version"];

  string endpoint = 7;

  string id = 8;

  string kibana_endpoint = 9 [json_name = "kibana_endpoint"];

  map<string, string> tags = 10;

  LogPublishingOptions log_publishing_options = 11 [json_name = "log_publishing_options"];

  NodeToNodeEncryption node_to_node_encryption = 12 [json_name = "node_to_node_encryption"];

  SnapshotOptions snapshot_options = 13 [json_name = "snapshot_options"];

  VpcOptions vpc_options = 14 [json_name = "vpc_options"];

  ClusterConfig cluster_config = 15 [json_name = "cluster_config"];

  CognitoOptions cognito_options = 16 [json_name = "cognito_options"];

  EbsOptions ebs_options = 17 [json_name = "ebs_options"];

  EncryptAtRest encrypt_at_rest = 18 [json_name = "encrypt_at_rest"];

  DomainEndpointOptions domain_endpoint_options = 19 [json_name = "domain_endpoint_options"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 20;

  int32 count = 21;

  terraform.meta.MetaFields.ForEachEntry for_each = 22;

  string provider = 23;

  terraform.meta.Lifecycle lifecycle = 24;

  message LogPublishingOptions {
    string cloudwatch_log_group_arn = 1 [json_name = "cloudwatch_log_group_arn"];

    bool enabled = 2;

    string log_type = 3 [json_name = "log_type"];
  }

  message NodeToNodeEncryption {
    bool enabled = 1;
  }

  message SnapshotOptions {
    int64 automated_snapshot_start_hour = 1 [json_name = "automated_snapshot_start_hour"];
  }

  message VpcOptions {
    repeated string availability_zones = 1 [json_name = "availability_zones"];

    repeated string security_group_ids = 2 [json_name = "security_group_ids"];

    repeated string subnet_ids = 3 [json_name = "subnet_ids"];

    string vpc_id = 4 [json_name = "vpc_id"];
  }

  message ClusterConfig {
    int64 dedicated_master_count = 1 [json_name = "dedicated_master_count"];

    bool dedicated_master_enabled = 2 [json_name = "dedicated_master_enabled"];

    string dedicated_master_type = 3 [json_name = "dedicated_master_type"];

    int64 instance_count = 4 [json_name = "instance_count"];

    string instance_type = 5 [json_name = "instance_type"];

    bool zone_awareness_enabled = 6 [json_name = "zone_awareness_enabled"];

    ZoneAwarenessConfig zone_awareness_config = 7 [json_name = "zone_awareness_config"];

    message ZoneAwarenessConfig {
      int64 availability_zone_count = 1 [json_name = "availability_zone_count"];
    }
  }

  message CognitoOptions {
    bool enabled = 1;

    string identity_pool_id = 2 [json_name = "identity_pool_id"];

    string role_arn = 3 [json_name = "role_arn"];

    string user_pool_id = 4 [json_name = "user_pool_id"];
  }

  message EbsOptions {
    bool ebs_enabled = 1 [json_name = "ebs_enabled"];

    int64 iops = 2;

    int64 volume_size = 3 [json_name = "volume_size"];

    string volume_type = 4 [json_name = "volume_type"];
  }

  message EncryptAtRest {
    bool enabled = 1;

    string kms_key_id = 2 [json_name = "kms_key_id"];
  }

  message DomainEndpointOptions {
    bool enforce_https = 1 [json_name = "enforce_https"];

    string tls_security_policy = 2 [json_name = "tls_security_policy"];
  }
}

//AwsElasticsearchDomainPolicy version is 0
message AwsElasticsearchDomainPolicy {
  string access_policies = 1 [json_name = "access_policies"];

  string domain_name = 2 [json_name = "domain_name"];

  string id = 3;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsElastictranscoderPipeline version is 0
message AwsElastictranscoderPipeline {
  string arn = 1;

  string aws_kms_key_arn = 2 [json_name = "aws_kms_key_arn"];

  string id = 3;

  string input_bucket = 4 [json_name = "input_bucket"];

  string name = 5;

  string output_bucket = 6 [json_name = "output_bucket"];

  string role = 7;

  ContentConfig content_config = 8 [json_name = "content_config"];

  ContentConfigPermissions content_config_permissions = 9 [json_name = "content_config_permissions"];

  Notifications notifications = 10;

  ThumbnailConfig thumbnail_config = 11 [json_name = "thumbnail_config"];

  ThumbnailConfigPermissions thumbnail_config_permissions = 12 [json_name = "thumbnail_config_permissions"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 13;

  int32 count = 14;

  terraform.meta.MetaFields.ForEachEntry for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message ContentConfig {
    string bucket = 1;

    string storage_class = 2 [json_name = "storage_class"];
  }

  message ContentConfigPermissions {
    repeated string access = 1;

    string grantee = 2;

    string grantee_type = 3 [json_name = "grantee_type"];
  }

  message Notifications {
    string completed = 1;

    string error = 2;

    string progressing = 3;

    string warning = 4;
  }

  message ThumbnailConfig {
    string bucket = 1;

    string storage_class = 2 [json_name = "storage_class"];
  }

  message ThumbnailConfigPermissions {
    repeated string access = 1;

    string grantee = 2;

    string grantee_type = 3 [json_name = "grantee_type"];
  }
}

//AwsElastictranscoderPreset version is 0
message AwsElastictranscoderPreset {
  string arn = 1;

  string container = 2;

  string description = 3;

  string id = 4;

  string name = 5;

  string type = 6;

  map<string, string> video_codec_options = 7;

  Audio audio = 8;

  AudioCodecOptions audio_codec_options = 9 [json_name = "audio_codec_options"];

  Thumbnails thumbnails = 10;

  Video video = 11;

  VideoWatermarks video_watermarks = 12 [json_name = "video_watermarks"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 13;

  int32 count = 14;

  terraform.meta.MetaFields.ForEachEntry for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message Audio {
    string audio_packing_mode = 1 [json_name = "audio_packing_mode"];

    string bit_rate = 2 [json_name = "bit_rate"];

    string channels = 3;

    string codec = 4;

    string sample_rate = 5 [json_name = "sample_rate"];
  }

  message AudioCodecOptions {
    string bit_depth = 1 [json_name = "bit_depth"];

    string bit_order = 2 [json_name = "bit_order"];

    string profile = 3;

    string signed = 4;
  }

  message Thumbnails {
    string aspect_ratio = 1 [json_name = "aspect_ratio"];

    string format = 2;

    string interval = 3;

    string max_height = 4 [json_name = "max_height"];

    string max_width = 5 [json_name = "max_width"];

    string padding_policy = 6 [json_name = "padding_policy"];

    string resolution = 7;

    string sizing_policy = 8 [json_name = "sizing_policy"];
  }

  message Video {
    string aspect_ratio = 1 [json_name = "aspect_ratio"];

    string bit_rate = 2 [json_name = "bit_rate"];

    string codec = 3;

    string display_aspect_ratio = 4 [json_name = "display_aspect_ratio"];

    string fixed_gop = 5 [json_name = "fixed_gop"];

    string frame_rate = 6 [json_name = "frame_rate"];

    string keyframes_max_dist = 7 [json_name = "keyframes_max_dist"];

    string max_frame_rate = 8 [json_name = "max_frame_rate"];

    string max_height = 9 [json_name = "max_height"];

    string max_width = 10 [json_name = "max_width"];

    string padding_policy = 11 [json_name = "padding_policy"];

    string resolution = 12;

    string sizing_policy = 13 [json_name = "sizing_policy"];
  }

  message VideoWatermarks {
    string horizontal_align = 1 [json_name = "horizontal_align"];

    string horizontal_offset = 2 [json_name = "horizontal_offset"];

    string id = 3;

    string max_height = 4 [json_name = "max_height"];

    string max_width = 5 [json_name = "max_width"];

    string opacity = 6;

    string sizing_policy = 7 [json_name = "sizing_policy"];

    string target = 8;

    string vertical_align = 9 [json_name = "vertical_align"];

    string vertical_offset = 10 [json_name = "vertical_offset"];
  }
}

//AwsElb version is 0
message AwsElb {
  string arn = 1;

  repeated string availability_zones = 2 [json_name = "availability_zones"];

  bool connection_draining = 3 [json_name = "connection_draining"];

  int64 connection_draining_timeout = 4 [json_name = "connection_draining_timeout"];

  bool cross_zone_load_balancing = 5 [json_name = "cross_zone_load_balancing"];

  string dns_name = 6 [json_name = "dns_name"];

  string id = 7;

  int64 idle_timeout = 8 [json_name = "idle_timeout"];

  repeated string instances = 9;

  bool internal = 10;

  string name = 11;

  string name_prefix = 12 [json_name = "name_prefix"];

  repeated string security_groups = 13 [json_name = "security_groups"];

  string source_security_group = 14 [json_name = "source_security_group"];

  string source_security_group_id = 15 [json_name = "source_security_group_id"];

  repeated string subnets = 16;

  map<string, string> tags = 17;

  string zone_id = 18 [json_name = "zone_id"];

  AccessLogs access_logs = 19 [json_name = "access_logs"];

  HealthCheck health_check = 20 [json_name = "health_check"];

  Listener listener = 21;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 22;

  int32 count = 23;

  terraform.meta.MetaFields.ForEachEntry for_each = 24;

  string provider = 25;

  terraform.meta.Lifecycle lifecycle = 26;

  message AccessLogs {
    string bucket = 1;

    string bucket_prefix = 2 [json_name = "bucket_prefix"];

    bool enabled = 3;

    int64 interval = 4;
  }

  message HealthCheck {
    int64 healthy_threshold = 1 [json_name = "healthy_threshold"];

    int64 interval = 2;

    string target = 3;

    int64 timeout = 4;

    int64 unhealthy_threshold = 5 [json_name = "unhealthy_threshold"];
  }

  message Listener {
    int64 instance_port = 1 [json_name = "instance_port"];

    string instance_protocol = 2 [json_name = "instance_protocol"];

    int64 lb_port = 3 [json_name = "lb_port"];

    string lb_protocol = 4 [json_name = "lb_protocol"];

    string ssl_certificate_id = 5 [json_name = "ssl_certificate_id"];
  }
}

//AwsElbAttachment version is 0
message AwsElbAttachment {
  string elb = 1;

  string id = 2;

  string instance = 3;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsEmrCluster version is 0
message AwsEmrCluster {
  string additional_info = 1 [json_name = "additional_info"];

  repeated string applications = 2;

  string arn = 3;

  string autoscaling_role = 4 [json_name = "autoscaling_role"];

  string cluster_state = 5 [json_name = "cluster_state"];

  string configurations = 6;

  string configurations_json = 7 [json_name = "configurations_json"];

  int64 core_instance_count = 8 [json_name = "core_instance_count"];

  string core_instance_type = 9 [json_name = "core_instance_type"];

  string custom_ami_id = 10 [json_name = "custom_ami_id"];

  int64 ebs_root_volume_size = 11 [json_name = "ebs_root_volume_size"];

  string id = 12;

  bool keep_job_flow_alive_when_no_steps = 13 [json_name = "keep_job_flow_alive_when_no_steps"];

  string log_uri = 14 [json_name = "log_uri"];

  string master_instance_type = 15 [json_name = "master_instance_type"];

  string master_public_dns = 16 [json_name = "master_public_dns"];

  string name = 17;

  string release_label = 18 [json_name = "release_label"];

  string scale_down_behavior = 19 [json_name = "scale_down_behavior"];

  string security_configuration = 20 [json_name = "security_configuration"];

  string service_role = 21 [json_name = "service_role"];

  repeated Step step = 22;

  int64 step_concurrency_level = 23 [json_name = "step_concurrency_level"];

  map<string, string> tags = 24;

  bool termination_protection = 25 [json_name = "termination_protection"];

  bool visible_to_all_users = 26 [json_name = "visible_to_all_users"];

  Ec2Attributes ec2_attributes = 27 [json_name = "ec2_attributes"];

  InstanceGroup instance_group = 28 [json_name = "instance_group"];

  KerberosAttributes kerberos_attributes = 29 [json_name = "kerberos_attributes"];

  MasterInstanceGroup master_instance_group = 30 [json_name = "master_instance_group"];

  BootstrapAction bootstrap_action = 31 [json_name = "bootstrap_action"];

  CoreInstanceGroup core_instance_group = 32 [json_name = "core_instance_group"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 33;

  int32 count = 34;

  terraform.meta.MetaFields.ForEachEntry for_each = 35;

  string provider = 36;

  terraform.meta.Lifecycle lifecycle = 37;

  message Step {
    //action_on_failure: string
    string action_on_failure = 1 [json_name = "action_on_failure"];

    //hadoop_jar_step: list of object
    repeated HadoopJarStep hadoop_jar_step = 2 [json_name = "hadoop_jar_step"];

    //name: string
    string name = 3;

    message HadoopJarStep {
      //args: list of string
      repeated string args = 1;

      //jar: string
      string jar = 2;

      //main_class: string
      string main_class = 3 [json_name = "main_class"];

      //properties: map of string
      map<string, string> properties = 4;
    }
  }

  message Ec2Attributes {
    string additional_master_security_groups = 1 [json_name = "additional_master_security_groups"];

    string additional_slave_security_groups = 2 [json_name = "additional_slave_security_groups"];

    string emr_managed_master_security_group = 3 [json_name = "emr_managed_master_security_group"];

    string emr_managed_slave_security_group = 4 [json_name = "emr_managed_slave_security_group"];

    string instance_profile = 5 [json_name = "instance_profile"];

    string key_name = 6 [json_name = "key_name"];

    string service_access_security_group = 7 [json_name = "service_access_security_group"];

    string subnet_id = 8 [json_name = "subnet_id"];
  }

  message InstanceGroup {
    string autoscaling_policy = 1 [json_name = "autoscaling_policy"];

    string bid_price = 2 [json_name = "bid_price"];

    string id = 3;

    int64 instance_count = 4 [json_name = "instance_count"];

    string instance_role = 5 [json_name = "instance_role"];

    string instance_type = 6 [json_name = "instance_type"];

    string name = 7;

    EbsConfig ebs_config = 8 [json_name = "ebs_config"];

    message EbsConfig {
      int64 iops = 1;

      int64 size = 2;

      string type = 3;

      int64 volumes_per_instance = 4 [json_name = "volumes_per_instance"];
    }
  }

  message KerberosAttributes {
    string ad_domain_join_password = 1 [json_name = "ad_domain_join_password"];

    string ad_domain_join_user = 2 [json_name = "ad_domain_join_user"];

    string cross_realm_trust_principal_password = 3 [json_name = "cross_realm_trust_principal_password"];

    string kdc_admin_password = 4 [json_name = "kdc_admin_password"];

    string realm = 5;
  }

  message MasterInstanceGroup {
    string bid_price = 1 [json_name = "bid_price"];

    string id = 2;

    int64 instance_count = 3 [json_name = "instance_count"];

    string instance_type = 4 [json_name = "instance_type"];

    string name = 5;

    EbsConfig ebs_config = 6 [json_name = "ebs_config"];

    message EbsConfig {
      int64 iops = 1;

      int64 size = 2;

      string type = 3;

      int64 volumes_per_instance = 4 [json_name = "volumes_per_instance"];
    }
  }

  message BootstrapAction {
    repeated string args = 1;

    string name = 2;

    string path = 3;
  }

  message CoreInstanceGroup {
    string autoscaling_policy = 1 [json_name = "autoscaling_policy"];

    string bid_price = 2 [json_name = "bid_price"];

    string id = 3;

    int64 instance_count = 4 [json_name = "instance_count"];

    string instance_type = 5 [json_name = "instance_type"];

    string name = 6;

    EbsConfig ebs_config = 7 [json_name = "ebs_config"];

    message EbsConfig {
      int64 iops = 1;

      int64 size = 2;

      string type = 3;

      int64 volumes_per_instance = 4 [json_name = "volumes_per_instance"];
    }
  }
}

//AwsEmrInstanceGroup version is 0
message AwsEmrInstanceGroup {
  string autoscaling_policy = 1 [json_name = "autoscaling_policy"];

  string bid_price = 2 [json_name = "bid_price"];

  string cluster_id = 3 [json_name = "cluster_id"];

  string configurations_json = 4 [json_name = "configurations_json"];

  bool ebs_optimized = 5 [json_name = "ebs_optimized"];

  string id = 6;

  int64 instance_count = 7 [json_name = "instance_count"];

  string instance_type = 8 [json_name = "instance_type"];

  string name = 9;

  int64 running_instance_count = 10 [json_name = "running_instance_count"];

  string status = 11;

  EbsConfig ebs_config = 12 [json_name = "ebs_config"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 13;

  int32 count = 14;

  terraform.meta.MetaFields.ForEachEntry for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message EbsConfig {
    int64 iops = 1;

    int64 size = 2;

    string type = 3;

    int64 volumes_per_instance = 4 [json_name = "volumes_per_instance"];
  }
}

//AwsEmrSecurityConfiguration version is 0
message AwsEmrSecurityConfiguration {
  string configuration = 1;

  string creation_date = 2 [json_name = "creation_date"];

  string id = 3;

  string name = 4;

  string name_prefix = 5 [json_name = "name_prefix"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsFlowLog version is 0
message AwsFlowLog {
  string eni_id = 1 [json_name = "eni_id"];

  string iam_role_arn = 2 [json_name = "iam_role_arn"];

  string id = 3;

  string log_destination = 4 [json_name = "log_destination"];

  string log_destination_type = 5 [json_name = "log_destination_type"];

  string log_format = 6 [json_name = "log_format"];

  string log_group_name = 7 [json_name = "log_group_name"];

  int64 max_aggregation_interval = 8 [json_name = "max_aggregation_interval"];

  string subnet_id = 9 [json_name = "subnet_id"];

  map<string, string> tags = 10;

  string traffic_type = 11 [json_name = "traffic_type"];

  string vpc_id = 12 [json_name = "vpc_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 13;

  int32 count = 14;

  terraform.meta.MetaFields.ForEachEntry for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;
}

//AwsFmsAdminAccount version is 0
message AwsFmsAdminAccount {
  string account_id = 1 [json_name = "account_id"];

  string id = 2;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 3;

  int32 count = 4;

  terraform.meta.MetaFields.ForEachEntry for_each = 5;

  string provider = 6;

  terraform.meta.Lifecycle lifecycle = 7;
}

//AwsFsxLustreFileSystem version is 0
message AwsFsxLustreFileSystem {
  string arn = 1;

  string dns_name = 2 [json_name = "dns_name"];

  string export_path = 3 [json_name = "export_path"];

  string id = 4;

  string import_path = 5 [json_name = "import_path"];

  int64 imported_file_chunk_size = 6 [json_name = "imported_file_chunk_size"];

  repeated string network_interface_ids = 7 [json_name = "network_interface_ids"];

  string owner_id = 8 [json_name = "owner_id"];

  repeated string security_group_ids = 9 [json_name = "security_group_ids"];

  int64 storage_capacity = 10 [json_name = "storage_capacity"];

  repeated string subnet_ids = 11 [json_name = "subnet_ids"];

  map<string, string> tags = 12;

  string vpc_id = 13 [json_name = "vpc_id"];

  string weekly_maintenance_start_time = 14 [json_name = "weekly_maintenance_start_time"];

  Timeouts timeouts = 15;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 16;

  int32 count = 17;

  terraform.meta.MetaFields.ForEachEntry for_each = 18;

  string provider = 19;

  terraform.meta.Lifecycle lifecycle = 20;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsFsxWindowsFileSystem version is 0
message AwsFsxWindowsFileSystem {
  string active_directory_id = 1 [json_name = "active_directory_id"];

  string arn = 2;

  int64 automatic_backup_retention_days = 3 [json_name = "automatic_backup_retention_days"];

  bool copy_tags_to_backups = 4 [json_name = "copy_tags_to_backups"];

  string daily_automatic_backup_start_time = 5 [json_name = "daily_automatic_backup_start_time"];

  string dns_name = 6 [json_name = "dns_name"];

  string id = 7;

  string kms_key_id = 8 [json_name = "kms_key_id"];

  repeated string network_interface_ids = 9 [json_name = "network_interface_ids"];

  string owner_id = 10 [json_name = "owner_id"];

  repeated string security_group_ids = 11 [json_name = "security_group_ids"];

  bool skip_final_backup = 12 [json_name = "skip_final_backup"];

  int64 storage_capacity = 13 [json_name = "storage_capacity"];

  repeated string subnet_ids = 14 [json_name = "subnet_ids"];

  map<string, string> tags = 15;

  int64 throughput_capacity = 16 [json_name = "throughput_capacity"];

  string vpc_id = 17 [json_name = "vpc_id"];

  string weekly_maintenance_start_time = 18 [json_name = "weekly_maintenance_start_time"];

  SelfManagedActiveDirectory self_managed_active_directory = 19 [json_name = "self_managed_active_directory"];

  Timeouts timeouts = 20;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 21;

  int32 count = 22;

  terraform.meta.MetaFields.ForEachEntry for_each = 23;

  string provider = 24;

  terraform.meta.Lifecycle lifecycle = 25;

  message SelfManagedActiveDirectory {
    repeated string dns_ips = 1 [json_name = "dns_ips"];

    string domain_name = 2 [json_name = "domain_name"];

    string file_system_administrators_group = 3 [json_name = "file_system_administrators_group"];

    string organizational_unit_distinguished_name = 4 [json_name = "organizational_unit_distinguished_name"];

    string password = 5;

    string username = 6;
  }

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsGameliftAlias version is 0
message AwsGameliftAlias {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  map<string, string> tags = 5;

  RoutingStrategy routing_strategy = 6 [json_name = "routing_strategy"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message RoutingStrategy {
    string fleet_id = 1 [json_name = "fleet_id"];

    string message = 2;

    string type = 3;
  }
}

//AwsGameliftBuild version is 0
message AwsGameliftBuild {
  string arn = 1;

  string id = 2;

  string name = 3;

  string operating_system = 4 [json_name = "operating_system"];

  map<string, string> tags = 5;

  string version = 6;

  StorageLocation storage_location = 7 [json_name = "storage_location"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message StorageLocation {
    string bucket = 1;

    string key = 2;

    string role_arn = 3 [json_name = "role_arn"];
  }
}

//AwsGameliftFleet version is 0
message AwsGameliftFleet {
  string arn = 1;

  string build_id = 2 [json_name = "build_id"];

  string description = 3;

  string ec2_instance_type = 4 [json_name = "ec2_instance_type"];

  string fleet_type = 5 [json_name = "fleet_type"];

  string id = 6;

  string instance_role_arn = 7 [json_name = "instance_role_arn"];

  repeated string log_paths = 8 [json_name = "log_paths"];

  repeated string metric_groups = 9 [json_name = "metric_groups"];

  string name = 10;

  string new_game_session_protection_policy = 11 [json_name = "new_game_session_protection_policy"];

  string operating_system = 12 [json_name = "operating_system"];

  map<string, string> tags = 13;

  Ec2InboundPermission ec2_inbound_permission = 14 [json_name = "ec2_inbound_permission"];

  ResourceCreationLimitPolicy resource_creation_limit_policy = 15 [json_name = "resource_creation_limit_policy"];

  RuntimeConfiguration runtime_configuration = 16 [json_name = "runtime_configuration"];

  Timeouts timeouts = 17;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 18;

  int32 count = 19;

  terraform.meta.MetaFields.ForEachEntry for_each = 20;

  string provider = 21;

  terraform.meta.Lifecycle lifecycle = 22;

  message Ec2InboundPermission {
    int64 from_port = 1 [json_name = "from_port"];

    string ip_range = 2 [json_name = "ip_range"];

    string protocol = 3;

    int64 to_port = 4 [json_name = "to_port"];
  }

  message ResourceCreationLimitPolicy {
    int64 new_game_sessions_per_creator = 1 [json_name = "new_game_sessions_per_creator"];

    int64 policy_period_in_minutes = 2 [json_name = "policy_period_in_minutes"];
  }

  message RuntimeConfiguration {
    int64 game_session_activation_timeout_seconds = 1 [json_name = "game_session_activation_timeout_seconds"];

    int64 max_concurrent_game_session_activations = 2 [json_name = "max_concurrent_game_session_activations"];

    ServerProcess server_process = 3 [json_name = "server_process"];

    message ServerProcess {
      int64 concurrent_executions = 1 [json_name = "concurrent_executions"];

      string launch_path = 2 [json_name = "launch_path"];

      string parameters = 3;
    }
  }

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsGameliftGameSessionQueue version is 0
message AwsGameliftGameSessionQueue {
  string arn = 1;

  repeated string destinations = 2;

  string id = 3;

  string name = 4;

  map<string, string> tags = 5;

  int64 timeout_in_seconds = 6 [json_name = "timeout_in_seconds"];

  PlayerLatencyPolicy player_latency_policy = 7 [json_name = "player_latency_policy"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message PlayerLatencyPolicy {
    int64 maximum_individual_player_latency_milliseconds = 1 [json_name = "maximum_individual_player_latency_milliseconds"];

    int64 policy_duration_seconds = 2 [json_name = "policy_duration_seconds"];
  }
}

//AwsGlacierVault version is 0
message AwsGlacierVault {
  string access_policy = 1 [json_name = "access_policy"];

  string arn = 2;

  string id = 3;

  string location = 4;

  string name = 5;

  map<string, string> tags = 6;

  Notification notification = 7;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message Notification {
    repeated string events = 1;

    string sns_topic = 2 [json_name = "sns_topic"];
  }
}

//AwsGlacierVaultLock version is 0
message AwsGlacierVaultLock {
  bool complete_lock = 1 [json_name = "complete_lock"];

  string id = 2;

  bool ignore_deletion_error = 3 [json_name = "ignore_deletion_error"];

  string policy = 4;

  string vault_name = 5 [json_name = "vault_name"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsGlobalacceleratorAccelerator version is 0
message AwsGlobalacceleratorAccelerator {
  string dns_name = 1 [json_name = "dns_name"];

  bool enabled = 2;

  string hosted_zone_id = 3 [json_name = "hosted_zone_id"];

  string id = 4;

  string ip_address_type = 5 [json_name = "ip_address_type"];

  repeated IpSets ip_sets = 6 [json_name = "ip_sets"];

  string name = 7;

  map<string, string> tags = 8;

  Attributes attributes = 9;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 10;

  int32 count = 11;

  terraform.meta.MetaFields.ForEachEntry for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message IpSets {
    //ip_addresses: list of string
    repeated string ip_addresses = 1 [json_name = "ip_addresses"];

    //ip_family: string
    string ip_family = 2 [json_name = "ip_family"];
  }

  message Attributes {
    bool flow_logs_enabled = 1 [json_name = "flow_logs_enabled"];

    string flow_logs_s3_bucket = 2 [json_name = "flow_logs_s3_bucket"];

    string flow_logs_s3_prefix = 3 [json_name = "flow_logs_s3_prefix"];
  }
}

//AwsGlobalacceleratorEndpointGroup version is 0
message AwsGlobalacceleratorEndpointGroup {
  string endpoint_group_region = 1 [json_name = "endpoint_group_region"];

  int64 health_check_interval_seconds = 2 [json_name = "health_check_interval_seconds"];

  string health_check_path = 3 [json_name = "health_check_path"];

  int64 health_check_port = 4 [json_name = "health_check_port"];

  string health_check_protocol = 5 [json_name = "health_check_protocol"];

  string id = 6;

  string listener_arn = 7 [json_name = "listener_arn"];

  int64 threshold_count = 8 [json_name = "threshold_count"];

  int64 traffic_dial_percentage = 9 [json_name = "traffic_dial_percentage"];

  EndpointConfiguration endpoint_configuration = 10 [json_name = "endpoint_configuration"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 11;

  int32 count = 12;

  terraform.meta.MetaFields.ForEachEntry for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message EndpointConfiguration {
    string endpoint_id = 1 [json_name = "endpoint_id"];

    int64 weight = 2;
  }
}

//AwsGlobalacceleratorListener version is 0
message AwsGlobalacceleratorListener {
  string accelerator_arn = 1 [json_name = "accelerator_arn"];

  string client_affinity = 2 [json_name = "client_affinity"];

  string id = 3;

  string protocol = 4;

  PortRange port_range = 5 [json_name = "port_range"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message PortRange {
    int64 from_port = 1 [json_name = "from_port"];

    int64 to_port = 2 [json_name = "to_port"];
  }
}

//AwsGlueCatalogDatabase version is 0
message AwsGlueCatalogDatabase {
  string catalog_id = 1 [json_name = "catalog_id"];

  string description = 2;

  string id = 3;

  string location_uri = 4 [json_name = "location_uri"];

  string name = 5;

  map<string, string> parameters = 6;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsGlueCatalogTable version is 0
message AwsGlueCatalogTable {
  string catalog_id = 1 [json_name = "catalog_id"];

  string database_name = 2 [json_name = "database_name"];

  string description = 3;

  string id = 4;

  string name = 5;

  string owner = 6;

  map<string, string> parameters = 7;

  int64 retention = 8;

  string table_type = 9 [json_name = "table_type"];

  string view_expanded_text = 10 [json_name = "view_expanded_text"];

  string view_original_text = 11 [json_name = "view_original_text"];

  PartitionKeys partition_keys = 12 [json_name = "partition_keys"];

  StorageDescriptor storage_descriptor = 13 [json_name = "storage_descriptor"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 14;

  int32 count = 15;

  terraform.meta.MetaFields.ForEachEntry for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;

  message PartitionKeys {
    string comment = 1;

    string name = 2;

    string type = 3;
  }

  message StorageDescriptor {
    repeated string bucket_columns = 1 [json_name = "bucket_columns"];

    bool compressed = 2;

    string input_format = 3 [json_name = "input_format"];

    string location = 4;

    int64 number_of_buckets = 5 [json_name = "number_of_buckets"];

    string output_format = 6 [json_name = "output_format"];

    map<string, string> parameters = 7;

    bool stored_as_sub_directories = 8 [json_name = "stored_as_sub_directories"];

    SkewedInfo skewed_info = 9 [json_name = "skewed_info"];

    SortColumns sort_columns = 10 [json_name = "sort_columns"];

    Columns columns = 11;

    SerDeInfo ser_de_info = 12 [json_name = "ser_de_info"];

    message SkewedInfo {
      repeated string skewed_column_names = 1 [json_name = "skewed_column_names"];

      map<string, string> skewed_column_value_location_maps = 2;

      repeated string skewed_column_values = 3 [json_name = "skewed_column_values"];
    }

    message SortColumns {
      string column = 1;

      int64 sort_order = 2 [json_name = "sort_order"];
    }

    message Columns {
      string comment = 1;

      string name = 2;

      string type = 3;
    }

    message SerDeInfo {
      string name = 1;

      map<string, string> parameters = 2;

      string serialization_library = 3 [json_name = "serialization_library"];
    }
  }
}

//AwsGlueClassifier version is 0
message AwsGlueClassifier {
  string id = 1;

  string name = 2;

  CsvClassifier csv_classifier = 3 [json_name = "csv_classifier"];

  GrokClassifier grok_classifier = 4 [json_name = "grok_classifier"];

  JsonClassifier json_classifier = 5 [json_name = "json_classifier"];

  XmlClassifier xml_classifier = 6 [json_name = "xml_classifier"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message CsvClassifier {
    bool allow_single_column = 1 [json_name = "allow_single_column"];

    string contains_header = 2 [json_name = "contains_header"];

    string delimiter = 3;

    bool disable_value_trimming = 4 [json_name = "disable_value_trimming"];

    repeated string header = 5;

    string quote_symbol = 6 [json_name = "quote_symbol"];
  }

  message GrokClassifier {
    string classification = 1;

    string custom_patterns = 2 [json_name = "custom_patterns"];

    string grok_pattern = 3 [json_name = "grok_pattern"];
  }

  message JsonClassifier {
    string json_path = 1 [json_name = "json_path"];
  }

  message XmlClassifier {
    string classification = 1;

    string row_tag = 2 [json_name = "row_tag"];
  }
}

//AwsGlueConnection version is 0
message AwsGlueConnection {
  string catalog_id = 1 [json_name = "catalog_id"];

  map<string, string> connection_properties = 2;

  string connection_type = 3 [json_name = "connection_type"];

  string description = 4;

  string id = 5;

  repeated string match_criteria = 6 [json_name = "match_criteria"];

  string name = 7;

  PhysicalConnectionRequirements physical_connection_requirements = 8 [json_name = "physical_connection_requirements"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message PhysicalConnectionRequirements {
    string availability_zone = 1 [json_name = "availability_zone"];

    repeated string security_group_id_list = 2 [json_name = "security_group_id_list"];

    string subnet_id = 3 [json_name = "subnet_id"];
  }
}

//AwsGlueCrawler version is 0
message AwsGlueCrawler {
  string arn = 1;

  repeated string classifiers = 2;

  string configuration = 3;

  string database_name = 4 [json_name = "database_name"];

  string description = 5;

  string id = 6;

  string name = 7;

  string role = 8;

  string schedule = 9;

  string security_configuration = 10 [json_name = "security_configuration"];

  string table_prefix = 11 [json_name = "table_prefix"];

  map<string, string> tags = 12;

  DynamodbTarget dynamodb_target = 13 [json_name = "dynamodb_target"];

  JdbcTarget jdbc_target = 14 [json_name = "jdbc_target"];

  S3Target s3_target = 15 [json_name = "s3_target"];

  SchemaChangePolicy schema_change_policy = 16 [json_name = "schema_change_policy"];

  CatalogTarget catalog_target = 17 [json_name = "catalog_target"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 18;

  int32 count = 19;

  terraform.meta.MetaFields.ForEachEntry for_each = 20;

  string provider = 21;

  terraform.meta.Lifecycle lifecycle = 22;

  message DynamodbTarget {
    string path = 1;
  }

  message JdbcTarget {
    string connection_name = 1 [json_name = "connection_name"];

    repeated string exclusions = 2;

    string path = 3;
  }

  message S3Target {
    repeated string exclusions = 1;

    string path = 2;
  }

  message SchemaChangePolicy {
    string delete_behavior = 1 [json_name = "delete_behavior"];

    string update_behavior = 2 [json_name = "update_behavior"];
  }

  message CatalogTarget {
    string database_name = 1 [json_name = "database_name"];

    repeated string tables = 2;
  }
}

//AwsGlueJob version is 0
message AwsGlueJob {
  int64 allocated_capacity = 1 [json_name = "allocated_capacity"];

  string arn = 2;

  repeated string connections = 3;

  map<string, string> default_arguments = 4;

  string description = 5;

  string glue_version = 6 [json_name = "glue_version"];

  string id = 7;

  int64 max_capacity = 8 [json_name = "max_capacity"];

  int64 max_retries = 9 [json_name = "max_retries"];

  string name = 10;

  int64 number_of_workers = 11 [json_name = "number_of_workers"];

  string role_arn = 12 [json_name = "role_arn"];

  string security_configuration = 13 [json_name = "security_configuration"];

  map<string, string> tags = 14;

  int64 timeout = 15;

  string worker_type = 16 [json_name = "worker_type"];

  NotificationProperty notification_property = 17 [json_name = "notification_property"];

  Command command = 18;

  ExecutionProperty execution_property = 19 [json_name = "execution_property"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 20;

  int32 count = 21;

  terraform.meta.MetaFields.ForEachEntry for_each = 22;

  string provider = 23;

  terraform.meta.Lifecycle lifecycle = 24;

  message NotificationProperty {
    int64 notify_delay_after = 1 [json_name = "notify_delay_after"];
  }

  message Command {
    string name = 1;

    string python_version = 2 [json_name = "python_version"];

    string script_location = 3 [json_name = "script_location"];
  }

  message ExecutionProperty {
    int64 max_concurrent_runs = 1 [json_name = "max_concurrent_runs"];
  }
}

//AwsGlueSecurityConfiguration version is 0
message AwsGlueSecurityConfiguration {
  string id = 1;

  string name = 2;

  EncryptionConfiguration encryption_configuration = 3 [json_name = "encryption_configuration"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message EncryptionConfiguration {
    CloudwatchEncryption cloudwatch_encryption = 1 [json_name = "cloudwatch_encryption"];

    JobBookmarksEncryption job_bookmarks_encryption = 2 [json_name = "job_bookmarks_encryption"];

    S3Encryption s3_encryption = 3 [json_name = "s3_encryption"];

    message CloudwatchEncryption {
      string cloudwatch_encryption_mode = 1 [json_name = "cloudwatch_encryption_mode"];

      string kms_key_arn = 2 [json_name = "kms_key_arn"];
    }

    message JobBookmarksEncryption {
      string job_bookmarks_encryption_mode = 1 [json_name = "job_bookmarks_encryption_mode"];

      string kms_key_arn = 2 [json_name = "kms_key_arn"];
    }

    message S3Encryption {
      string kms_key_arn = 1 [json_name = "kms_key_arn"];

      string s3_encryption_mode = 2 [json_name = "s3_encryption_mode"];
    }
  }
}

//AwsGlueTrigger version is 0
message AwsGlueTrigger {
  string arn = 1;

  string description = 2;

  bool enabled = 3;

  string id = 4;

  string name = 5;

  string schedule = 6;

  map<string, string> tags = 7;

  string type = 8;

  string workflow_name = 9 [json_name = "workflow_name"];

  Timeouts timeouts = 10;

  Actions actions = 11;

  Predicate predicate = 12;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 13;

  int32 count = 14;

  terraform.meta.MetaFields.ForEachEntry for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }

  message Actions {
    map<string, string> arguments = 1;

    string crawler_name = 2 [json_name = "crawler_name"];

    string job_name = 3 [json_name = "job_name"];

    int64 timeout = 4;
  }

  message Predicate {
    string logical = 1;

    Conditions conditions = 2;

    message Conditions {
      string crawl_state = 1 [json_name = "crawl_state"];

      string crawler_name = 2 [json_name = "crawler_name"];

      string job_name = 3 [json_name = "job_name"];

      string logical_operator = 4 [json_name = "logical_operator"];

      string state = 5;
    }
  }
}

//AwsGlueWorkflow version is 0
message AwsGlueWorkflow {
  map<string, string> default_run_properties = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsGuarddutyDetector version is 0
message AwsGuarddutyDetector {
  string account_id = 1 [json_name = "account_id"];

  bool enable = 2;

  string finding_publishing_frequency = 3 [json_name = "finding_publishing_frequency"];

  string id = 4;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsGuarddutyInviteAccepter version is 0
message AwsGuarddutyInviteAccepter {
  string detector_id = 1 [json_name = "detector_id"];

  string id = 2;

  string master_account_id = 3 [json_name = "master_account_id"];

  Timeouts timeouts = 4;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message Timeouts {
    string create = 1;
  }
}

//AwsGuarddutyIpset version is 0
message AwsGuarddutyIpset {
  bool activate = 1;

  string detector_id = 2 [json_name = "detector_id"];

  string format = 3;

  string id = 4;

  string location = 5;

  string name = 6;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsGuarddutyMember version is 0
message AwsGuarddutyMember {
  string account_id = 1 [json_name = "account_id"];

  string detector_id = 2 [json_name = "detector_id"];

  bool disable_email_notification = 3 [json_name = "disable_email_notification"];

  string email = 4;

  string id = 5;

  string invitation_message = 6 [json_name = "invitation_message"];

  bool invite = 7;

  string relationship_status = 8 [json_name = "relationship_status"];

  Timeouts timeouts = 9;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 10;

  int32 count = 11;

  terraform.meta.MetaFields.ForEachEntry for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message Timeouts {
    string create = 1;

    string update = 2;
  }
}

//AwsGuarddutyThreatintelset version is 0
message AwsGuarddutyThreatintelset {
  bool activate = 1;

  string detector_id = 2 [json_name = "detector_id"];

  string format = 3;

  string id = 4;

  string location = 5;

  string name = 6;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsIamAccessKey version is 0
message AwsIamAccessKey {
  string encrypted_secret = 1 [json_name = "encrypted_secret"];

  string id = 2;

  string key_fingerprint = 3 [json_name = "key_fingerprint"];

  string pgp_key = 4 [json_name = "pgp_key"];

  string secret = 5;

  string ses_smtp_password = 6 [json_name = "ses_smtp_password"];

  string ses_smtp_password_v4 = 7 [json_name = "ses_smtp_password_v4"];

  string status = 8;

  string user = 9;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 10;

  int32 count = 11;

  terraform.meta.MetaFields.ForEachEntry for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;
}

//AwsIamAccountAlias version is 0
message AwsIamAccountAlias {
  string account_alias = 1 [json_name = "account_alias"];

  string id = 2;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 3;

  int32 count = 4;

  terraform.meta.MetaFields.ForEachEntry for_each = 5;

  string provider = 6;

  terraform.meta.Lifecycle lifecycle = 7;
}

//AwsIamAccountPasswordPolicy version is 0
message AwsIamAccountPasswordPolicy {
  bool allow_users_to_change_password = 1 [json_name = "allow_users_to_change_password"];

  bool expire_passwords = 2 [json_name = "expire_passwords"];

  bool hard_expiry = 3 [json_name = "hard_expiry"];

  string id = 4;

  int64 max_password_age = 5 [json_name = "max_password_age"];

  int64 minimum_password_length = 6 [json_name = "minimum_password_length"];

  int64 password_reuse_prevention = 7 [json_name = "password_reuse_prevention"];

  bool require_lowercase_characters = 8 [json_name = "require_lowercase_characters"];

  bool require_numbers = 9 [json_name = "require_numbers"];

  bool require_symbols = 10 [json_name = "require_symbols"];

  bool require_uppercase_characters = 11 [json_name = "require_uppercase_characters"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 12;

  int32 count = 13;

  terraform.meta.MetaFields.ForEachEntry for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;
}

//AwsIamGroup version is 0
message AwsIamGroup {
  string arn = 1;

  string id = 2;

  string name = 3;

  string path = 4;

  string unique_id = 5 [json_name = "unique_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsIamGroupMembership version is 0
message AwsIamGroupMembership {
  string group = 1;

  string id = 2;

  string name = 3;

  repeated string users = 4;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsIamGroupPolicy version is 0
message AwsIamGroupPolicy {
  string group = 1;

  string id = 2;

  string name = 3;

  string name_prefix = 4 [json_name = "name_prefix"];

  string policy = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsIamGroupPolicyAttachment version is 0
message AwsIamGroupPolicyAttachment {
  string group = 1;

  string id = 2;

  string policy_arn = 3 [json_name = "policy_arn"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsIamInstanceProfile version is 0
message AwsIamInstanceProfile {
  string arn = 1;

  string create_date = 2 [json_name = "create_date"];

  string id = 3;

  string name = 4;

  string name_prefix = 5 [json_name = "name_prefix"];

  string path = 6;

  string role = 7;

  repeated string roles = 8;

  string unique_id = 9 [json_name = "unique_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 10;

  int32 count = 11;

  terraform.meta.MetaFields.ForEachEntry for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;
}

//AwsIamOpenidConnectProvider version is 0
message AwsIamOpenidConnectProvider {
  string arn = 1;

  repeated string client_id_list = 2 [json_name = "client_id_list"];

  string id = 3;

  repeated string thumbprint_list = 4 [json_name = "thumbprint_list"];

  string url = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsIamPolicy version is 0
message AwsIamPolicy {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  string name_prefix = 5 [json_name = "name_prefix"];

  string path = 6;

  string policy = 7;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsIamPolicyAttachment version is 0
message AwsIamPolicyAttachment {
  repeated string groups = 1;

  string id = 2;

  string name = 3;

  string policy_arn = 4 [json_name = "policy_arn"];

  repeated string roles = 5;

  repeated string users = 6;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsIamRole version is 0
message AwsIamRole {
  string arn = 1;

  string assume_role_policy = 2 [json_name = "assume_role_policy"];

  string create_date = 3 [json_name = "create_date"];

  string description = 4;

  bool force_detach_policies = 5 [json_name = "force_detach_policies"];

  string id = 6;

  int64 max_session_duration = 7 [json_name = "max_session_duration"];

  string name = 8;

  string name_prefix = 9 [json_name = "name_prefix"];

  string path = 10;

  string permissions_boundary = 11 [json_name = "permissions_boundary"];

  map<string, string> tags = 12;

  string unique_id = 13 [json_name = "unique_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 14;

  int32 count = 15;

  terraform.meta.MetaFields.ForEachEntry for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;
}

//AwsIamRolePolicy version is 0
message AwsIamRolePolicy {
  string id = 1;

  string name = 2;

  string name_prefix = 3 [json_name = "name_prefix"];

  string policy = 4;

  string role = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsIamRolePolicyAttachment version is 0
message AwsIamRolePolicyAttachment {
  string id = 1;

  string policy_arn = 2 [json_name = "policy_arn"];

  string role = 3;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsIamSamlProvider version is 0
message AwsIamSamlProvider {
  string arn = 1;

  string id = 2;

  string name = 3;

  string saml_metadata_document = 4 [json_name = "saml_metadata_document"];

  string valid_until = 5 [json_name = "valid_until"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsIamServerCertificate version is 0
message AwsIamServerCertificate {
  string arn = 1;

  string certificate_body = 2 [json_name = "certificate_body"];

  string certificate_chain = 3 [json_name = "certificate_chain"];

  string id = 4;

  string name = 5;

  string name_prefix = 6 [json_name = "name_prefix"];

  string path = 7;

  string private_key = 8 [json_name = "private_key"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsIamServiceLinkedRole version is 0
message AwsIamServiceLinkedRole {
  string arn = 1;

  string aws_service_name = 2 [json_name = "aws_service_name"];

  string create_date = 3 [json_name = "create_date"];

  string custom_suffix = 4 [json_name = "custom_suffix"];

  string description = 5;

  string id = 6;

  string name = 7;

  string path = 8;

  string unique_id = 9 [json_name = "unique_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 10;

  int32 count = 11;

  terraform.meta.MetaFields.ForEachEntry for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;
}

//AwsIamUser version is 0
message AwsIamUser {
  string arn = 1;

  //Delete user even if it has non-Terraform-managed IAM access keys, login profile or MFA devices
  bool force_destroy = 2 [json_name = "force_destroy"];

  string id = 3;

  string name = 4;

  string path = 5;

  string permissions_boundary = 6 [json_name = "permissions_boundary"];

  map<string, string> tags = 7;

  string unique_id = 8 [json_name = "unique_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsIamUserGroupMembership version is 0
message AwsIamUserGroupMembership {
  repeated string groups = 1;

  string id = 2;

  string user = 3;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsIamUserLoginProfile version is 0
message AwsIamUserLoginProfile {
  string encrypted_password = 1 [json_name = "encrypted_password"];

  string id = 2;

  string key_fingerprint = 3 [json_name = "key_fingerprint"];

  int64 password_length = 4 [json_name = "password_length"];

  bool password_reset_required = 5 [json_name = "password_reset_required"];

  string pgp_key = 6 [json_name = "pgp_key"];

  string user = 7;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsIamUserPolicy version is 0
message AwsIamUserPolicy {
  string id = 1;

  string name = 2;

  string name_prefix = 3 [json_name = "name_prefix"];

  string policy = 4;

  string user = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsIamUserPolicyAttachment version is 0
message AwsIamUserPolicyAttachment {
  string id = 1;

  string policy_arn = 2 [json_name = "policy_arn"];

  string user = 3;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsIamUserSshKey version is 0
message AwsIamUserSshKey {
  string encoding = 1;

  string fingerprint = 2;

  string id = 3;

  string public_key = 4 [json_name = "public_key"];

  string ssh_public_key_id = 5 [json_name = "ssh_public_key_id"];

  string status = 6;

  string username = 7;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsInspectorAssessmentTarget version is 0
message AwsInspectorAssessmentTarget {
  string arn = 1;

  string id = 2;

  string name = 3;

  string resource_group_arn = 4 [json_name = "resource_group_arn"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsInspectorAssessmentTemplate version is 0
message AwsInspectorAssessmentTemplate {
  string arn = 1;

  int64 duration = 2;

  string id = 3;

  string name = 4;

  repeated string rules_package_arns = 5 [json_name = "rules_package_arns"];

  map<string, string> tags = 6;

  string target_arn = 7 [json_name = "target_arn"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsInspectorResourceGroup version is 0
message AwsInspectorResourceGroup {
  string arn = 1;

  string id = 2;

  map<string, string> tags = 3;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsInstance version is 1
message AwsInstance {
  string ami = 1;

  string arn = 2;

  bool associate_public_ip_address = 3 [json_name = "associate_public_ip_address"];

  string availability_zone = 4 [json_name = "availability_zone"];

  int64 cpu_core_count = 5 [json_name = "cpu_core_count"];

  int64 cpu_threads_per_core = 6 [json_name = "cpu_threads_per_core"];

  bool disable_api_termination = 7 [json_name = "disable_api_termination"];

  bool ebs_optimized = 8 [json_name = "ebs_optimized"];

  bool get_password_data = 9 [json_name = "get_password_data"];

  bool hibernation = 10;

  string host_id = 11 [json_name = "host_id"];

  string iam_instance_profile = 12 [json_name = "iam_instance_profile"];

  string id = 13;

  string instance_initiated_shutdown_behavior = 14 [json_name = "instance_initiated_shutdown_behavior"];

  string instance_state = 15 [json_name = "instance_state"];

  string instance_type = 16 [json_name = "instance_type"];

  int64 ipv6_address_count = 17 [json_name = "ipv6_address_count"];

  repeated string ipv6_addresses = 18 [json_name = "ipv6_addresses"];

  string key_name = 19 [json_name = "key_name"];

  bool monitoring = 20;

  string network_interface_id = 21 [json_name = "network_interface_id"];

  string password_data = 22 [json_name = "password_data"];

  string placement_group = 23 [json_name = "placement_group"];

  string primary_network_interface_id = 24 [json_name = "primary_network_interface_id"];

  string private_dns = 25 [json_name = "private_dns"];

  string private_ip = 26 [json_name = "private_ip"];

  string public_dns = 27 [json_name = "public_dns"];

  string public_ip = 28 [json_name = "public_ip"];

  repeated string security_groups = 29 [json_name = "security_groups"];

  bool source_dest_check = 30 [json_name = "source_dest_check"];

  string subnet_id = 31 [json_name = "subnet_id"];

  map<string, string> tags = 32;

  string tenancy = 33;

  string user_data = 34 [json_name = "user_data"];

  string user_data_base64 = 35 [json_name = "user_data_base64"];

  map<string, string> volume_tags = 36;

  repeated string vpc_security_group_ids = 37 [json_name = "vpc_security_group_ids"];

  RootBlockDevice root_block_device = 38 [json_name = "root_block_device"];

  Timeouts timeouts = 39;

  CreditSpecification credit_specification = 40 [json_name = "credit_specification"];

  EbsBlockDevice ebs_block_device = 41 [json_name = "ebs_block_device"];

  EphemeralBlockDevice ephemeral_block_device = 42 [json_name = "ephemeral_block_device"];

  MetadataOptions metadata_options = 43 [json_name = "metadata_options"];

  NetworkInterface network_interface = 44 [json_name = "network_interface"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 45;

  int32 count = 46;

  terraform.meta.MetaFields.ForEachEntry for_each = 47;

  string provider = 48;

  terraform.meta.Lifecycle lifecycle = 49;

  message RootBlockDevice {
    bool delete_on_termination = 1 [json_name = "delete_on_termination"];

    string device_name = 2 [json_name = "device_name"];

    bool encrypted = 3;

    int64 iops = 4;

    string kms_key_id = 5 [json_name = "kms_key_id"];

    string volume_id = 6 [json_name = "volume_id"];

    int64 volume_size = 7 [json_name = "volume_size"];

    string volume_type = 8 [json_name = "volume_type"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }

  message CreditSpecification {
    string cpu_credits = 1 [json_name = "cpu_credits"];
  }

  message EbsBlockDevice {
    bool delete_on_termination = 1 [json_name = "delete_on_termination"];

    string device_name = 2 [json_name = "device_name"];

    bool encrypted = 3;

    int64 iops = 4;

    string kms_key_id = 5 [json_name = "kms_key_id"];

    string snapshot_id = 6 [json_name = "snapshot_id"];

    string volume_id = 7 [json_name = "volume_id"];

    int64 volume_size = 8 [json_name = "volume_size"];

    string volume_type = 9 [json_name = "volume_type"];
  }

  message EphemeralBlockDevice {
    string device_name = 1 [json_name = "device_name"];

    bool no_device = 2 [json_name = "no_device"];

    string virtual_name = 3 [json_name = "virtual_name"];
  }

  message MetadataOptions {
    string http_endpoint = 1 [json_name = "http_endpoint"];

    int64 http_put_response_hop_limit = 2 [json_name = "http_put_response_hop_limit"];

    string http_tokens = 3 [json_name = "http_tokens"];
  }

  message NetworkInterface {
    bool delete_on_termination = 1 [json_name = "delete_on_termination"];

    int64 device_index = 2 [json_name = "device_index"];

    string network_interface_id = 3 [json_name = "network_interface_id"];
  }
}

//AwsInternetGateway version is 0
message AwsInternetGateway {
  string id = 1;

  string owner_id = 2 [json_name = "owner_id"];

  map<string, string> tags = 3;

  string vpc_id = 4 [json_name = "vpc_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsIotCertificate version is 0
message AwsIotCertificate {
  bool active = 1;

  string arn = 2;

  string certificate_pem = 3 [json_name = "certificate_pem"];

  string csr = 4;

  string id = 5;

  string private_key = 6 [json_name = "private_key"];

  string public_key = 7 [json_name = "public_key"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsIotPolicy version is 0
message AwsIotPolicy {
  string arn = 1;

  string default_version_id = 2 [json_name = "default_version_id"];

  string id = 3;

  string name = 4;

  string policy = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsIotPolicyAttachment version is 0
message AwsIotPolicyAttachment {
  string id = 1;

  string policy = 2;

  string target = 3;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsIotRoleAlias version is 0
message AwsIotRoleAlias {
  string alias = 1;

  string arn = 2;

  int64 credential_duration = 3 [json_name = "credential_duration"];

  string id = 4;

  string role_arn = 5 [json_name = "role_arn"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsIotThing version is 0
message AwsIotThing {
  string arn = 1;

  map<string, string> attributes = 2;

  string default_client_id = 3 [json_name = "default_client_id"];

  string id = 4;

  string name = 5;

  string thing_type_name = 6 [json_name = "thing_type_name"];

  int64 version = 7;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsIotThingPrincipalAttachment version is 0
message AwsIotThingPrincipalAttachment {
  string id = 1;

  string principal = 2;

  string thing = 3;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsIotThingType version is 0
message AwsIotThingType {
  string arn = 1;

  bool deprecated = 2;

  string id = 3;

  string name = 4;

  Properties properties = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message Properties {
    string description = 1;

    repeated string searchable_attributes = 2 [json_name = "searchable_attributes"];
  }
}

//AwsIotTopicRule version is 0
message AwsIotTopicRule {
  string arn = 1;

  string description = 2;

  bool enabled = 3;

  string id = 4;

  string name = 5;

  string sql = 6;

  string sql_version = 7 [json_name = "sql_version"];

  CloudwatchMetric cloudwatch_metric = 8 [json_name = "cloudwatch_metric"];

  Firehose firehose = 9;

  Kinesis kinesis = 10;

  Lambda lambda = 11;

  S3 s3 = 12;

  Sns sns = 13;

  Sqs sqs = 14;

  CloudwatchAlarm cloudwatch_alarm = 15 [json_name = "cloudwatch_alarm"];

  Dynamodb dynamodb = 16;

  Elasticsearch elasticsearch = 17;

  Republish republish = 18;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 19;

  int32 count = 20;

  terraform.meta.MetaFields.ForEachEntry for_each = 21;

  string provider = 22;

  terraform.meta.Lifecycle lifecycle = 23;

  message CloudwatchMetric {
    string metric_name = 1 [json_name = "metric_name"];

    string metric_namespace = 2 [json_name = "metric_namespace"];

    string metric_timestamp = 3 [json_name = "metric_timestamp"];

    string metric_unit = 4 [json_name = "metric_unit"];

    string metric_value = 5 [json_name = "metric_value"];

    string role_arn = 6 [json_name = "role_arn"];
  }

  message Firehose {
    string delivery_stream_name = 1 [json_name = "delivery_stream_name"];

    string role_arn = 2 [json_name = "role_arn"];

    string separator = 3;
  }

  message Kinesis {
    string partition_key = 1 [json_name = "partition_key"];

    string role_arn = 2 [json_name = "role_arn"];

    string stream_name = 3 [json_name = "stream_name"];
  }

  message Lambda {
    string function_arn = 1 [json_name = "function_arn"];
  }

  message S3 {
    string bucket_name = 1 [json_name = "bucket_name"];

    string key = 2;

    string role_arn = 3 [json_name = "role_arn"];
  }

  message Sns {
    string message_format = 1 [json_name = "message_format"];

    string role_arn = 2 [json_name = "role_arn"];

    string target_arn = 3 [json_name = "target_arn"];
  }

  message Sqs {
    string queue_url = 1 [json_name = "queue_url"];

    string role_arn = 2 [json_name = "role_arn"];

    bool use_base64 = 3 [json_name = "use_base64"];
  }

  message CloudwatchAlarm {
    string alarm_name = 1 [json_name = "alarm_name"];

    string role_arn = 2 [json_name = "role_arn"];

    string state_reason = 3 [json_name = "state_reason"];

    string state_value = 4 [json_name = "state_value"];
  }

  message Dynamodb {
    string hash_key_field = 1 [json_name = "hash_key_field"];

    string hash_key_type = 2 [json_name = "hash_key_type"];

    string hash_key_value = 3 [json_name = "hash_key_value"];

    string payload_field = 4 [json_name = "payload_field"];

    string range_key_field = 5 [json_name = "range_key_field"];

    string range_key_type = 6 [json_name = "range_key_type"];

    string range_key_value = 7 [json_name = "range_key_value"];

    string role_arn = 8 [json_name = "role_arn"];

    string table_name = 9 [json_name = "table_name"];
  }

  message Elasticsearch {
    string endpoint = 1;

    string id = 2;

    string index = 3;

    string role_arn = 4 [json_name = "role_arn"];

    string type = 5;
  }

  message Republish {
    string role_arn = 1 [json_name = "role_arn"];

    string topic = 2;
  }
}

//AwsKeyPair version is 1
message AwsKeyPair {
  string fingerprint = 1;

  string id = 2;

  string key_name = 3 [json_name = "key_name"];

  string key_name_prefix = 4 [json_name = "key_name_prefix"];

  string key_pair_id = 5 [json_name = "key_pair_id"];

  string public_key = 6 [json_name = "public_key"];

  map<string, string> tags = 7;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsKinesisAnalyticsApplication version is 0
message AwsKinesisAnalyticsApplication {
  string arn = 1;

  string code = 2;

  string create_timestamp = 3 [json_name = "create_timestamp"];

  string description = 4;

  string id = 5;

  string last_update_timestamp = 6 [json_name = "last_update_timestamp"];

  string name = 7;

  string status = 8;

  map<string, string> tags = 9;

  int64 version = 10;

  CloudwatchLoggingOptions cloudwatch_logging_options = 11 [json_name = "cloudwatch_logging_options"];

  Inputs inputs = 12;

  Outputs outputs = 13;

  ReferenceDataSources reference_data_sources = 14 [json_name = "reference_data_sources"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 15;

  int32 count = 16;

  terraform.meta.MetaFields.ForEachEntry for_each = 17;

  string provider = 18;

  terraform.meta.Lifecycle lifecycle = 19;

  message CloudwatchLoggingOptions {
    string id = 1;

    string log_stream_arn = 2 [json_name = "log_stream_arn"];

    string role_arn = 3 [json_name = "role_arn"];
  }

  message Inputs {
    string id = 1;

    string name_prefix = 2 [json_name = "name_prefix"];

    repeated StartingPositionConfiguration starting_position_configuration = 3 [json_name = "starting_position_configuration"];

    repeated string stream_names = 4 [json_name = "stream_names"];

    KinesisFirehose kinesis_firehose = 5 [json_name = "kinesis_firehose"];

    KinesisStream kinesis_stream = 6 [json_name = "kinesis_stream"];

    Parallelism parallelism = 7;

    ProcessingConfiguration processing_configuration = 8 [json_name = "processing_configuration"];

    Schema schema = 9;

    message StartingPositionConfiguration {
      //starting_position: string
      string starting_position = 1 [json_name = "starting_position"];
    }

    message KinesisFirehose {
      string resource_arn = 1 [json_name = "resource_arn"];

      string role_arn = 2 [json_name = "role_arn"];
    }

    message KinesisStream {
      string resource_arn = 1 [json_name = "resource_arn"];

      string role_arn = 2 [json_name = "role_arn"];
    }

    message Parallelism {
      int64 count = 1;
    }

    message ProcessingConfiguration {
      Lambda lambda = 1;

      message Lambda {
        string resource_arn = 1 [json_name = "resource_arn"];

        string role_arn = 2 [json_name = "role_arn"];
      }
    }

    message Schema {
      string record_encoding = 1 [json_name = "record_encoding"];

      RecordColumns record_columns = 2 [json_name = "record_columns"];

      RecordFormat record_format = 3 [json_name = "record_format"];

      message RecordColumns {
        string mapping = 1;

        string name = 2;

        string sql_type = 3 [json_name = "sql_type"];
      }

      message RecordFormat {
        string record_format_type = 1 [json_name = "record_format_type"];

        MappingParameters mapping_parameters = 2 [json_name = "mapping_parameters"];

        message MappingParameters {
          Csv csv = 1;

          Json json = 2;

          message Csv {
            string record_column_delimiter = 1 [json_name = "record_column_delimiter"];

            string record_row_delimiter = 2 [json_name = "record_row_delimiter"];
          }

          message Json {
            string record_row_path = 1 [json_name = "record_row_path"];
          }
        }
      }
    }
  }

  message Outputs {
    string id = 1;

    string name = 2;

    Lambda lambda = 3;

    Schema schema = 4;

    KinesisFirehose kinesis_firehose = 5 [json_name = "kinesis_firehose"];

    KinesisStream kinesis_stream = 6 [json_name = "kinesis_stream"];

    message Lambda {
      string resource_arn = 1 [json_name = "resource_arn"];

      string role_arn = 2 [json_name = "role_arn"];
    }

    message Schema {
      string record_format_type = 1 [json_name = "record_format_type"];
    }

    message KinesisFirehose {
      string resource_arn = 1 [json_name = "resource_arn"];

      string role_arn = 2 [json_name = "role_arn"];
    }

    message KinesisStream {
      string resource_arn = 1 [json_name = "resource_arn"];

      string role_arn = 2 [json_name = "role_arn"];
    }
  }

  message ReferenceDataSources {
    string id = 1;

    string table_name = 2 [json_name = "table_name"];

    S3 s3 = 3;

    Schema schema = 4;

    message S3 {
      string bucket_arn = 1 [json_name = "bucket_arn"];

      string file_key = 2 [json_name = "file_key"];

      string role_arn = 3 [json_name = "role_arn"];
    }

    message Schema {
      string record_encoding = 1 [json_name = "record_encoding"];

      RecordColumns record_columns = 2 [json_name = "record_columns"];

      RecordFormat record_format = 3 [json_name = "record_format"];

      message RecordColumns {
        string mapping = 1;

        string name = 2;

        string sql_type = 3 [json_name = "sql_type"];
      }

      message RecordFormat {
        string record_format_type = 1 [json_name = "record_format_type"];

        MappingParameters mapping_parameters = 2 [json_name = "mapping_parameters"];

        message MappingParameters {
          Csv csv = 1;

          Json json = 2;

          message Csv {
            string record_column_delimiter = 1 [json_name = "record_column_delimiter"];

            string record_row_delimiter = 2 [json_name = "record_row_delimiter"];
          }

          message Json {
            string record_row_path = 1 [json_name = "record_row_path"];
          }
        }
      }
    }
  }
}

//AwsKinesisFirehoseDeliveryStream version is 1
message AwsKinesisFirehoseDeliveryStream {
  string arn = 1;

  string destination = 2;

  string destination_id = 3 [json_name = "destination_id"];

  string id = 4;

  string name = 5;

  map<string, string> tags = 6;

  string version_id = 7 [json_name = "version_id"];

  ServerSideEncryption server_side_encryption = 8 [json_name = "server_side_encryption"];

  SplunkConfiguration splunk_configuration = 9 [json_name = "splunk_configuration"];

  ElasticsearchConfiguration elasticsearch_configuration = 10 [json_name = "elasticsearch_configuration"];

  ExtendedS3Configuration extended_s3_configuration = 11 [json_name = "extended_s3_configuration"];

  KinesisSourceConfiguration kinesis_source_configuration = 12 [json_name = "kinesis_source_configuration"];

  RedshiftConfiguration redshift_configuration = 13 [json_name = "redshift_configuration"];

  S3Configuration s3_configuration = 14 [json_name = "s3_configuration"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 15;

  int32 count = 16;

  terraform.meta.MetaFields.ForEachEntry for_each = 17;

  string provider = 18;

  terraform.meta.Lifecycle lifecycle = 19;

  message ServerSideEncryption {
    bool enabled = 1;
  }

  message SplunkConfiguration {
    int64 hec_acknowledgment_timeout = 1 [json_name = "hec_acknowledgment_timeout"];

    string hec_endpoint = 2 [json_name = "hec_endpoint"];

    string hec_endpoint_type = 3 [json_name = "hec_endpoint_type"];

    string hec_token = 4 [json_name = "hec_token"];

    int64 retry_duration = 5 [json_name = "retry_duration"];

    string s3_backup_mode = 6 [json_name = "s3_backup_mode"];

    CloudwatchLoggingOptions cloudwatch_logging_options = 7 [json_name = "cloudwatch_logging_options"];

    ProcessingConfiguration processing_configuration = 8 [json_name = "processing_configuration"];

    message CloudwatchLoggingOptions {
      bool enabled = 1;

      string log_group_name = 2 [json_name = "log_group_name"];

      string log_stream_name = 3 [json_name = "log_stream_name"];
    }

    message ProcessingConfiguration {
      bool enabled = 1;

      Processors processors = 2;

      message Processors {
        string type = 1;

        Parameters parameters = 2;

        message Parameters {
          string parameter_name = 1 [json_name = "parameter_name"];

          string parameter_value = 2 [json_name = "parameter_value"];
        }
      }
    }
  }

  message ElasticsearchConfiguration {
    int64 buffering_interval = 1 [json_name = "buffering_interval"];

    int64 buffering_size = 2 [json_name = "buffering_size"];

    string domain_arn = 3 [json_name = "domain_arn"];

    string index_name = 4 [json_name = "index_name"];

    string index_rotation_period = 5 [json_name = "index_rotation_period"];

    int64 retry_duration = 6 [json_name = "retry_duration"];

    string role_arn = 7 [json_name = "role_arn"];

    string s3_backup_mode = 8 [json_name = "s3_backup_mode"];

    string type_name = 9 [json_name = "type_name"];

    CloudwatchLoggingOptions cloudwatch_logging_options = 10 [json_name = "cloudwatch_logging_options"];

    ProcessingConfiguration processing_configuration = 11 [json_name = "processing_configuration"];

    message CloudwatchLoggingOptions {
      bool enabled = 1;

      string log_group_name = 2 [json_name = "log_group_name"];

      string log_stream_name = 3 [json_name = "log_stream_name"];
    }

    message ProcessingConfiguration {
      bool enabled = 1;

      Processors processors = 2;

      message Processors {
        string type = 1;

        Parameters parameters = 2;

        message Parameters {
          string parameter_name = 1 [json_name = "parameter_name"];

          string parameter_value = 2 [json_name = "parameter_value"];
        }
      }
    }
  }

  message ExtendedS3Configuration {
    string bucket_arn = 1 [json_name = "bucket_arn"];

    int64 buffer_interval = 2 [json_name = "buffer_interval"];

    int64 buffer_size = 3 [json_name = "buffer_size"];

    string compression_format = 4 [json_name = "compression_format"];

    string error_output_prefix = 5 [json_name = "error_output_prefix"];

    string kms_key_arn = 6 [json_name = "kms_key_arn"];

    string prefix = 7;

    string role_arn = 8 [json_name = "role_arn"];

    string s3_backup_mode = 9 [json_name = "s3_backup_mode"];

    CloudwatchLoggingOptions cloudwatch_logging_options = 10 [json_name = "cloudwatch_logging_options"];

    DataFormatConversionConfiguration data_format_conversion_configuration = 11 [json_name = "data_format_conversion_configuration"];

    ProcessingConfiguration processing_configuration = 12 [json_name = "processing_configuration"];

    S3BackupConfiguration s3_backup_configuration = 13 [json_name = "s3_backup_configuration"];

    message CloudwatchLoggingOptions {
      bool enabled = 1;

      string log_group_name = 2 [json_name = "log_group_name"];

      string log_stream_name = 3 [json_name = "log_stream_name"];
    }

    message DataFormatConversionConfiguration {
      bool enabled = 1;

      InputFormatConfiguration input_format_configuration = 2 [json_name = "input_format_configuration"];

      OutputFormatConfiguration output_format_configuration = 3 [json_name = "output_format_configuration"];

      SchemaConfiguration schema_configuration = 4 [json_name = "schema_configuration"];

      message InputFormatConfiguration {
        Deserializer deserializer = 1;

        message Deserializer {
          HiveJsonSerDe hive_json_ser_de = 1 [json_name = "hive_json_ser_de"];

          OpenXJsonSerDe open_x_json_ser_de = 2 [json_name = "open_x_json_ser_de"];

          message HiveJsonSerDe {
            repeated string timestamp_formats = 1 [json_name = "timestamp_formats"];
          }

          message OpenXJsonSerDe {
            bool case_insensitive = 1 [json_name = "case_insensitive"];

            map<string, string> column_to_json_key_mappings = 2;

            bool convert_dots_in_json_keys_to_underscores = 3 [json_name = "convert_dots_in_json_keys_to_underscores"];
          }
        }
      }

      message OutputFormatConfiguration {
        Serializer serializer = 1;

        message Serializer {
          OrcSerDe orc_ser_de = 1 [json_name = "orc_ser_de"];

          ParquetSerDe parquet_ser_de = 2 [json_name = "parquet_ser_de"];

          message OrcSerDe {
            int64 block_size_bytes = 1 [json_name = "block_size_bytes"];

            repeated string bloom_filter_columns = 2 [json_name = "bloom_filter_columns"];

            int64 bloom_filter_false_positive_probability = 3 [json_name = "bloom_filter_false_positive_probability"];

            string compression = 4;

            int64 dictionary_key_threshold = 5 [json_name = "dictionary_key_threshold"];

            bool enable_padding = 6 [json_name = "enable_padding"];

            string format_version = 7 [json_name = "format_version"];

            int64 padding_tolerance = 8 [json_name = "padding_tolerance"];

            int64 row_index_stride = 9 [json_name = "row_index_stride"];

            int64 stripe_size_bytes = 10 [json_name = "stripe_size_bytes"];
          }

          message ParquetSerDe {
            int64 block_size_bytes = 1 [json_name = "block_size_bytes"];

            string compression = 2;

            bool enable_dictionary_compression = 3 [json_name = "enable_dictionary_compression"];

            int64 max_padding_bytes = 4 [json_name = "max_padding_bytes"];

            int64 page_size_bytes = 5 [json_name = "page_size_bytes"];

            string writer_version = 6 [json_name = "writer_version"];
          }
        }
      }

      message SchemaConfiguration {
        string catalog_id = 1 [json_name = "catalog_id"];

        string database_name = 2 [json_name = "database_name"];

        string region = 3;

        string role_arn = 4 [json_name = "role_arn"];

        string table_name = 5 [json_name = "table_name"];

        string version_id = 6 [json_name = "version_id"];
      }
    }

    message ProcessingConfiguration {
      bool enabled = 1;

      Processors processors = 2;

      message Processors {
        string type = 1;

        Parameters parameters = 2;

        message Parameters {
          string parameter_name = 1 [json_name = "parameter_name"];

          string parameter_value = 2 [json_name = "parameter_value"];
        }
      }
    }

    message S3BackupConfiguration {
      string bucket_arn = 1 [json_name = "bucket_arn"];

      int64 buffer_interval = 2 [json_name = "buffer_interval"];

      int64 buffer_size = 3 [json_name = "buffer_size"];

      string compression_format = 4 [json_name = "compression_format"];

      string kms_key_arn = 5 [json_name = "kms_key_arn"];

      string prefix = 6;

      string role_arn = 7 [json_name = "role_arn"];

      CloudwatchLoggingOptions cloudwatch_logging_options = 8 [json_name = "cloudwatch_logging_options"];

      message CloudwatchLoggingOptions {
        bool enabled = 1;

        string log_group_name = 2 [json_name = "log_group_name"];

        string log_stream_name = 3 [json_name = "log_stream_name"];
      }
    }
  }

  message KinesisSourceConfiguration {
    string kinesis_stream_arn = 1 [json_name = "kinesis_stream_arn"];

    string role_arn = 2 [json_name = "role_arn"];
  }

  message RedshiftConfiguration {
    string cluster_jdbcurl = 1 [json_name = "cluster_jdbcurl"];

    string copy_options = 2 [json_name = "copy_options"];

    string data_table_columns = 3 [json_name = "data_table_columns"];

    string data_table_name = 4 [json_name = "data_table_name"];

    string password = 5;

    int64 retry_duration = 6 [json_name = "retry_duration"];

    string role_arn = 7 [json_name = "role_arn"];

    string s3_backup_mode = 8 [json_name = "s3_backup_mode"];

    string username = 9;

    CloudwatchLoggingOptions cloudwatch_logging_options = 10 [json_name = "cloudwatch_logging_options"];

    ProcessingConfiguration processing_configuration = 11 [json_name = "processing_configuration"];

    S3BackupConfiguration s3_backup_configuration = 12 [json_name = "s3_backup_configuration"];

    message CloudwatchLoggingOptions {
      bool enabled = 1;

      string log_group_name = 2 [json_name = "log_group_name"];

      string log_stream_name = 3 [json_name = "log_stream_name"];
    }

    message ProcessingConfiguration {
      bool enabled = 1;

      Processors processors = 2;

      message Processors {
        string type = 1;

        Parameters parameters = 2;

        message Parameters {
          string parameter_name = 1 [json_name = "parameter_name"];

          string parameter_value = 2 [json_name = "parameter_value"];
        }
      }
    }

    message S3BackupConfiguration {
      string bucket_arn = 1 [json_name = "bucket_arn"];

      int64 buffer_interval = 2 [json_name = "buffer_interval"];

      int64 buffer_size = 3 [json_name = "buffer_size"];

      string compression_format = 4 [json_name = "compression_format"];

      string kms_key_arn = 5 [json_name = "kms_key_arn"];

      string prefix = 6;

      string role_arn = 7 [json_name = "role_arn"];

      CloudwatchLoggingOptions cloudwatch_logging_options = 8 [json_name = "cloudwatch_logging_options"];

      message CloudwatchLoggingOptions {
        bool enabled = 1;

        string log_group_name = 2 [json_name = "log_group_name"];

        string log_stream_name = 3 [json_name = "log_stream_name"];
      }
    }
  }

  message S3Configuration {
    string bucket_arn = 1 [json_name = "bucket_arn"];

    int64 buffer_interval = 2 [json_name = "buffer_interval"];

    int64 buffer_size = 3 [json_name = "buffer_size"];

    string compression_format = 4 [json_name = "compression_format"];

    string kms_key_arn = 5 [json_name = "kms_key_arn"];

    string prefix = 6;

    string role_arn = 7 [json_name = "role_arn"];

    CloudwatchLoggingOptions cloudwatch_logging_options = 8 [json_name = "cloudwatch_logging_options"];

    message CloudwatchLoggingOptions {
      bool enabled = 1;

      string log_group_name = 2 [json_name = "log_group_name"];

      string log_stream_name = 3 [json_name = "log_stream_name"];
    }
  }
}

//AwsKinesisStream version is 1
message AwsKinesisStream {
  string arn = 1;

  string encryption_type = 2 [json_name = "encryption_type"];

  bool enforce_consumer_deletion = 3 [json_name = "enforce_consumer_deletion"];

  string id = 4;

  string kms_key_id = 5 [json_name = "kms_key_id"];

  string name = 6;

  int64 retention_period = 7 [json_name = "retention_period"];

  int64 shard_count = 8 [json_name = "shard_count"];

  repeated string shard_level_metrics = 9 [json_name = "shard_level_metrics"];

  map<string, string> tags = 10;

  Timeouts timeouts = 11;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 12;

  int32 count = 13;

  terraform.meta.MetaFields.ForEachEntry for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsKinesisVideoStream version is 0
message AwsKinesisVideoStream {
  string arn = 1;

  string creation_time = 2 [json_name = "creation_time"];

  int64 data_retention_in_hours = 3 [json_name = "data_retention_in_hours"];

  string device_name = 4 [json_name = "device_name"];

  string id = 5;

  string kms_key_id = 6 [json_name = "kms_key_id"];

  string media_type = 7 [json_name = "media_type"];

  string name = 8;

  map<string, string> tags = 9;

  string version = 10;

  Timeouts timeouts = 11;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 12;

  int32 count = 13;

  terraform.meta.MetaFields.ForEachEntry for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsKmsAlias version is 0
message AwsKmsAlias {
  string arn = 1;

  string id = 2;

  string name = 3;

  string name_prefix = 4 [json_name = "name_prefix"];

  string target_key_arn = 5 [json_name = "target_key_arn"];

  string target_key_id = 6 [json_name = "target_key_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsKmsCiphertext version is 0
message AwsKmsCiphertext {
  string ciphertext_blob = 1 [json_name = "ciphertext_blob"];

  map<string, string> context = 2;

  string id = 3;

  string key_id = 4 [json_name = "key_id"];

  string plaintext = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsKmsExternalKey version is 0
message AwsKmsExternalKey {
  string arn = 1;

  int64 deletion_window_in_days = 2 [json_name = "deletion_window_in_days"];

  string description = 3;

  bool enabled = 4;

  string expiration_model = 5 [json_name = "expiration_model"];

  string id = 6;

  string key_material_base64 = 7 [json_name = "key_material_base64"];

  string key_state = 8 [json_name = "key_state"];

  string key_usage = 9 [json_name = "key_usage"];

  string policy = 10;

  map<string, string> tags = 11;

  string valid_to = 12 [json_name = "valid_to"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 13;

  int32 count = 14;

  terraform.meta.MetaFields.ForEachEntry for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;
}

//AwsKmsGrant version is 0
message AwsKmsGrant {
  repeated string grant_creation_tokens = 1 [json_name = "grant_creation_tokens"];

  string grant_id = 2 [json_name = "grant_id"];

  string grant_token = 3 [json_name = "grant_token"];

  string grantee_principal = 4 [json_name = "grantee_principal"];

  string id = 5;

  string key_id = 6 [json_name = "key_id"];

  string name = 7;

  repeated string operations = 8;

  bool retire_on_delete = 9 [json_name = "retire_on_delete"];

  string retiring_principal = 10 [json_name = "retiring_principal"];

  Constraints constraints = 11;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 12;

  int32 count = 13;

  terraform.meta.MetaFields.ForEachEntry for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message Constraints {
    map<string, string> encryption_context_equals = 1;

    map<string, string> encryption_context_subset = 2;
  }
}

//AwsKmsKey version is 0
message AwsKmsKey {
  string arn = 1;

  string customer_master_key_spec = 2 [json_name = "customer_master_key_spec"];

  int64 deletion_window_in_days = 3 [json_name = "deletion_window_in_days"];

  string description = 4;

  bool enable_key_rotation = 5 [json_name = "enable_key_rotation"];

  string id = 6;

  bool is_enabled = 7 [json_name = "is_enabled"];

  string key_id = 8 [json_name = "key_id"];

  string key_usage = 9 [json_name = "key_usage"];

  string policy = 10;

  map<string, string> tags = 11;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 12;

  int32 count = 13;

  terraform.meta.MetaFields.ForEachEntry for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;
}

//AwsLambdaAlias version is 0
message AwsLambdaAlias {
  string arn = 1;

  string description = 2;

  string function_name = 3 [json_name = "function_name"];

  string function_version = 4 [json_name = "function_version"];

  string id = 5;

  string invoke_arn = 6 [json_name = "invoke_arn"];

  string name = 7;

  RoutingConfig routing_config = 8 [json_name = "routing_config"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message RoutingConfig {
    map<string, string> additional_version_weights = 1;
  }
}

//AwsLambdaEventSourceMapping version is 0
message AwsLambdaEventSourceMapping {
  int64 batch_size = 1 [json_name = "batch_size"];

  bool bisect_batch_on_function_error = 2 [json_name = "bisect_batch_on_function_error"];

  bool enabled = 3;

  string event_source_arn = 4 [json_name = "event_source_arn"];

  string function_arn = 5 [json_name = "function_arn"];

  string function_name = 6 [json_name = "function_name"];

  string id = 7;

  string last_modified = 8 [json_name = "last_modified"];

  string last_processing_result = 9 [json_name = "last_processing_result"];

  int64 maximum_batching_window_in_seconds = 10 [json_name = "maximum_batching_window_in_seconds"];

  int64 maximum_record_age_in_seconds = 11 [json_name = "maximum_record_age_in_seconds"];

  int64 maximum_retry_attempts = 12 [json_name = "maximum_retry_attempts"];

  int64 parallelization_factor = 13 [json_name = "parallelization_factor"];

  string starting_position = 14 [json_name = "starting_position"];

  string starting_position_timestamp = 15 [json_name = "starting_position_timestamp"];

  string state = 16;

  string state_transition_reason = 17 [json_name = "state_transition_reason"];

  string uuid = 18;

  DestinationConfig destination_config = 19 [json_name = "destination_config"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 20;

  int32 count = 21;

  terraform.meta.MetaFields.ForEachEntry for_each = 22;

  string provider = 23;

  terraform.meta.Lifecycle lifecycle = 24;

  message DestinationConfig {
    OnFailure on_failure = 1 [json_name = "on_failure"];

    message OnFailure {
      string destination_arn = 1 [json_name = "destination_arn"];
    }
  }
}

//AwsLambdaFunction version is 0
message AwsLambdaFunction {
  string arn = 1;

  string description = 2;

  string filename = 3;

  string function_name = 4 [json_name = "function_name"];

  string handler = 5;

  string id = 6;

  string invoke_arn = 7 [json_name = "invoke_arn"];

  string kms_key_arn = 8 [json_name = "kms_key_arn"];

  string last_modified = 9 [json_name = "last_modified"];

  repeated string layers = 10;

  int64 memory_size = 11 [json_name = "memory_size"];

  bool publish = 12;

  string qualified_arn = 13 [json_name = "qualified_arn"];

  int64 reserved_concurrent_executions = 14 [json_name = "reserved_concurrent_executions"];

  string role = 15;

  string runtime = 16;

  string s3_bucket = 17 [json_name = "s3_bucket"];

  string s3_key = 18 [json_name = "s3_key"];

  string s3_object_version = 19 [json_name = "s3_object_version"];

  string source_code_hash = 20 [json_name = "source_code_hash"];

  int64 source_code_size = 21 [json_name = "source_code_size"];

  map<string, string> tags = 22;

  int64 timeout = 23;

  string version = 24;

  TracingConfig tracing_config = 25 [json_name = "tracing_config"];

  VpcConfig vpc_config = 26 [json_name = "vpc_config"];

  DeadLetterConfig dead_letter_config = 27 [json_name = "dead_letter_config"];

  Environment environment = 28;

  Timeouts timeouts = 29;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 30;

  int32 count = 31;

  terraform.meta.MetaFields.ForEachEntry for_each = 32;

  string provider = 33;

  terraform.meta.Lifecycle lifecycle = 34;

  message TracingConfig {
    string mode = 1;
  }

  message VpcConfig {
    repeated string security_group_ids = 1 [json_name = "security_group_ids"];

    repeated string subnet_ids = 2 [json_name = "subnet_ids"];

    string vpc_id = 3 [json_name = "vpc_id"];
  }

  message DeadLetterConfig {
    string target_arn = 1 [json_name = "target_arn"];
  }

  message Environment {
    map<string, string> variables = 1;
  }

  message Timeouts {
    string create = 1;
  }
}

//AwsLambdaFunctionEventInvokeConfig version is 0
message AwsLambdaFunctionEventInvokeConfig {
  string function_name = 1 [json_name = "function_name"];

  string id = 2;

  int64 maximum_event_age_in_seconds = 3 [json_name = "maximum_event_age_in_seconds"];

  int64 maximum_retry_attempts = 4 [json_name = "maximum_retry_attempts"];

  string qualifier = 5;

  DestinationConfig destination_config = 6 [json_name = "destination_config"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message DestinationConfig {
    OnFailure on_failure = 1 [json_name = "on_failure"];

    OnSuccess on_success = 2 [json_name = "on_success"];

    message OnFailure {
      string destination = 1;
    }

    message OnSuccess {
      string destination = 1;
    }
  }
}

//AwsLambdaLayerVersion version is 0
message AwsLambdaLayerVersion {
  string arn = 1;

  repeated string compatible_runtimes = 2 [json_name = "compatible_runtimes"];

  string created_date = 3 [json_name = "created_date"];

  string description = 4;

  string filename = 5;

  string id = 6;

  string layer_arn = 7 [json_name = "layer_arn"];

  string layer_name = 8 [json_name = "layer_name"];

  string license_info = 9 [json_name = "license_info"];

  string s3_bucket = 10 [json_name = "s3_bucket"];

  string s3_key = 11 [json_name = "s3_key"];

  string s3_object_version = 12 [json_name = "s3_object_version"];

  string source_code_hash = 13 [json_name = "source_code_hash"];

  int64 source_code_size = 14 [json_name = "source_code_size"];

  string version = 15;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 16;

  int32 count = 17;

  terraform.meta.MetaFields.ForEachEntry for_each = 18;

  string provider = 19;

  terraform.meta.Lifecycle lifecycle = 20;
}

//AwsLambdaPermission version is 0
message AwsLambdaPermission {
  string action = 1;

  string event_source_token = 2 [json_name = "event_source_token"];

  string function_name = 3 [json_name = "function_name"];

  string id = 4;

  string principal = 5;

  string qualifier = 6;

  string source_account = 7 [json_name = "source_account"];

  string source_arn = 8 [json_name = "source_arn"];

  string statement_id = 9 [json_name = "statement_id"];

  string statement_id_prefix = 10 [json_name = "statement_id_prefix"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 11;

  int32 count = 12;

  terraform.meta.MetaFields.ForEachEntry for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsLambdaProvisionedConcurrencyConfig version is 0
message AwsLambdaProvisionedConcurrencyConfig {
  string function_name = 1 [json_name = "function_name"];

  string id = 2;

  int64 provisioned_concurrent_executions = 3 [json_name = "provisioned_concurrent_executions"];

  string qualifier = 4;

  Timeouts timeouts = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message Timeouts {
    string create = 1;

    string update = 2;
  }
}

//AwsLaunchConfiguration version is 0
message AwsLaunchConfiguration {
  string arn = 1;

  bool associate_public_ip_address = 2 [json_name = "associate_public_ip_address"];

  bool ebs_optimized = 3 [json_name = "ebs_optimized"];

  bool enable_monitoring = 4 [json_name = "enable_monitoring"];

  string iam_instance_profile = 5 [json_name = "iam_instance_profile"];

  string id = 6;

  string image_id = 7 [json_name = "image_id"];

  string instance_type = 8 [json_name = "instance_type"];

  string key_name = 9 [json_name = "key_name"];

  string name = 10;

  string name_prefix = 11 [json_name = "name_prefix"];

  string placement_tenancy = 12 [json_name = "placement_tenancy"];

  repeated string security_groups = 13 [json_name = "security_groups"];

  string spot_price = 14 [json_name = "spot_price"];

  string user_data = 15 [json_name = "user_data"];

  string user_data_base64 = 16 [json_name = "user_data_base64"];

  string vpc_classic_link_id = 17 [json_name = "vpc_classic_link_id"];

  repeated string vpc_classic_link_security_groups = 18 [json_name = "vpc_classic_link_security_groups"];

  EbsBlockDevice ebs_block_device = 19 [json_name = "ebs_block_device"];

  EphemeralBlockDevice ephemeral_block_device = 20 [json_name = "ephemeral_block_device"];

  RootBlockDevice root_block_device = 21 [json_name = "root_block_device"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 22;

  int32 count = 23;

  terraform.meta.MetaFields.ForEachEntry for_each = 24;

  string provider = 25;

  terraform.meta.Lifecycle lifecycle = 26;

  message EbsBlockDevice {
    bool delete_on_termination = 1 [json_name = "delete_on_termination"];

    string device_name = 2 [json_name = "device_name"];

    bool encrypted = 3;

    int64 iops = 4;

    bool no_device = 5 [json_name = "no_device"];

    string snapshot_id = 6 [json_name = "snapshot_id"];

    int64 volume_size = 7 [json_name = "volume_size"];

    string volume_type = 8 [json_name = "volume_type"];
  }

  message EphemeralBlockDevice {
    string device_name = 1 [json_name = "device_name"];

    string virtual_name = 2 [json_name = "virtual_name"];
  }

  message RootBlockDevice {
    bool delete_on_termination = 1 [json_name = "delete_on_termination"];

    bool encrypted = 2;

    int64 iops = 3;

    int64 volume_size = 4 [json_name = "volume_size"];

    string volume_type = 5 [json_name = "volume_type"];
  }
}

//AwsLaunchTemplate version is 0
message AwsLaunchTemplate {
  string arn = 1;

  int64 default_version = 2 [json_name = "default_version"];

  string description = 3;

  bool disable_api_termination = 4 [json_name = "disable_api_termination"];

  string ebs_optimized = 5 [json_name = "ebs_optimized"];

  string id = 6;

  string image_id = 7 [json_name = "image_id"];

  string instance_initiated_shutdown_behavior = 8 [json_name = "instance_initiated_shutdown_behavior"];

  string instance_type = 9 [json_name = "instance_type"];

  string kernel_id = 10 [json_name = "kernel_id"];

  string key_name = 11 [json_name = "key_name"];

  int64 latest_version = 12 [json_name = "latest_version"];

  string name = 13;

  string name_prefix = 14 [json_name = "name_prefix"];

  string ram_disk_id = 15 [json_name = "ram_disk_id"];

  repeated string security_group_names = 16 [json_name = "security_group_names"];

  map<string, string> tags = 17;

  string user_data = 18 [json_name = "user_data"];

  repeated string vpc_security_group_ids = 19 [json_name = "vpc_security_group_ids"];

  TagSpecifications tag_specifications = 20 [json_name = "tag_specifications"];

  CapacityReservationSpecification capacity_reservation_specification = 21 [json_name = "capacity_reservation_specification"];

  CpuOptions cpu_options = 22 [json_name = "cpu_options"];

  ElasticInferenceAccelerator elastic_inference_accelerator = 23 [json_name = "elastic_inference_accelerator"];

  HibernationOptions hibernation_options = 24 [json_name = "hibernation_options"];

  MetadataOptions metadata_options = 25 [json_name = "metadata_options"];

  Placement placement = 26;

  LicenseSpecification license_specification = 27 [json_name = "license_specification"];

  Monitoring monitoring = 28;

  NetworkInterfaces network_interfaces = 29 [json_name = "network_interfaces"];

  BlockDeviceMappings block_device_mappings = 30 [json_name = "block_device_mappings"];

  InstanceMarketOptions instance_market_options = 31 [json_name = "instance_market_options"];

  CreditSpecification credit_specification = 32 [json_name = "credit_specification"];

  ElasticGpuSpecifications elastic_gpu_specifications = 33 [json_name = "elastic_gpu_specifications"];

  IamInstanceProfile iam_instance_profile = 34 [json_name = "iam_instance_profile"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 35;

  int32 count = 36;

  terraform.meta.MetaFields.ForEachEntry for_each = 37;

  string provider = 38;

  terraform.meta.Lifecycle lifecycle = 39;

  message TagSpecifications {
    string resource_type = 1 [json_name = "resource_type"];

    map<string, string> tags = 2;
  }

  message CapacityReservationSpecification {
    string capacity_reservation_preference = 1 [json_name = "capacity_reservation_preference"];

    CapacityReservationTarget capacity_reservation_target = 2 [json_name = "capacity_reservation_target"];

    message CapacityReservationTarget {
      string capacity_reservation_id = 1 [json_name = "capacity_reservation_id"];
    }
  }

  message CpuOptions {
    int64 core_count = 1 [json_name = "core_count"];

    int64 threads_per_core = 2 [json_name = "threads_per_core"];
  }

  message ElasticInferenceAccelerator {
    string type = 1;
  }

  message HibernationOptions {
    bool configured = 1;
  }

  message MetadataOptions {
    string http_endpoint = 1 [json_name = "http_endpoint"];

    int64 http_put_response_hop_limit = 2 [json_name = "http_put_response_hop_limit"];

    string http_tokens = 3 [json_name = "http_tokens"];
  }

  message Placement {
    string affinity = 1;

    string availability_zone = 2 [json_name = "availability_zone"];

    string group_name = 3 [json_name = "group_name"];

    string host_id = 4 [json_name = "host_id"];

    string spread_domain = 5 [json_name = "spread_domain"];

    string tenancy = 6;
  }

  message LicenseSpecification {
    string license_configuration_arn = 1 [json_name = "license_configuration_arn"];
  }

  message Monitoring {
    bool enabled = 1;
  }

  message NetworkInterfaces {
    string associate_public_ip_address = 1 [json_name = "associate_public_ip_address"];

    bool delete_on_termination = 2 [json_name = "delete_on_termination"];

    string description = 3;

    int64 device_index = 4 [json_name = "device_index"];

    int64 ipv4_address_count = 5 [json_name = "ipv4_address_count"];

    repeated string ipv4_addresses = 6 [json_name = "ipv4_addresses"];

    int64 ipv6_address_count = 7 [json_name = "ipv6_address_count"];

    repeated string ipv6_addresses = 8 [json_name = "ipv6_addresses"];

    string network_interface_id = 9 [json_name = "network_interface_id"];

    string private_ip_address = 10 [json_name = "private_ip_address"];

    repeated string security_groups = 11 [json_name = "security_groups"];

    string subnet_id = 12 [json_name = "subnet_id"];
  }

  message BlockDeviceMappings {
    string device_name = 1 [json_name = "device_name"];

    string no_device = 2 [json_name = "no_device"];

    string virtual_name = 3 [json_name = "virtual_name"];

    Ebs ebs = 4;

    message Ebs {
      string delete_on_termination = 1 [json_name = "delete_on_termination"];

      string encrypted = 2;

      int64 iops = 3;

      string kms_key_id = 4 [json_name = "kms_key_id"];

      string snapshot_id = 5 [json_name = "snapshot_id"];

      int64 volume_size = 6 [json_name = "volume_size"];

      string volume_type = 7 [json_name = "volume_type"];
    }
  }

  message InstanceMarketOptions {
    string market_type = 1 [json_name = "market_type"];

    SpotOptions spot_options = 2 [json_name = "spot_options"];

    message SpotOptions {
      int64 block_duration_minutes = 1 [json_name = "block_duration_minutes"];

      string instance_interruption_behavior = 2 [json_name = "instance_interruption_behavior"];

      string max_price = 3 [json_name = "max_price"];

      string spot_instance_type = 4 [json_name = "spot_instance_type"];

      string valid_until = 5 [json_name = "valid_until"];
    }
  }

  message CreditSpecification {
    string cpu_credits = 1 [json_name = "cpu_credits"];
  }

  message ElasticGpuSpecifications {
    string type = 1;
  }

  message IamInstanceProfile {
    string arn = 1;

    string name = 2;
  }
}

//AwsLb version is 0
message AwsLb {
  string arn = 1;

  string arn_suffix = 2 [json_name = "arn_suffix"];

  string dns_name = 3 [json_name = "dns_name"];

  bool drop_invalid_header_fields = 4 [json_name = "drop_invalid_header_fields"];

  bool enable_cross_zone_load_balancing = 5 [json_name = "enable_cross_zone_load_balancing"];

  bool enable_deletion_protection = 6 [json_name = "enable_deletion_protection"];

  bool enable_http2 = 7 [json_name = "enable_http2"];

  string id = 8;

  int64 idle_timeout = 9 [json_name = "idle_timeout"];

  bool internal = 10;

  string ip_address_type = 11 [json_name = "ip_address_type"];

  string load_balancer_type = 12 [json_name = "load_balancer_type"];

  string name = 13;

  string name_prefix = 14 [json_name = "name_prefix"];

  repeated string security_groups = 15 [json_name = "security_groups"];

  repeated string subnets = 16;

  map<string, string> tags = 17;

  string vpc_id = 18 [json_name = "vpc_id"];

  string zone_id = 19 [json_name = "zone_id"];

  AccessLogs access_logs = 20 [json_name = "access_logs"];

  SubnetMapping subnet_mapping = 21 [json_name = "subnet_mapping"];

  Timeouts timeouts = 22;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 23;

  int32 count = 24;

  terraform.meta.MetaFields.ForEachEntry for_each = 25;

  string provider = 26;

  terraform.meta.Lifecycle lifecycle = 27;

  message AccessLogs {
    string bucket = 1;

    bool enabled = 2;

    string prefix = 3;
  }

  message SubnetMapping {
    string allocation_id = 1 [json_name = "allocation_id"];

    string subnet_id = 2 [json_name = "subnet_id"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsLbCookieStickinessPolicy version is 0
message AwsLbCookieStickinessPolicy {
  int64 cookie_expiration_period = 1 [json_name = "cookie_expiration_period"];

  string id = 2;

  int64 lb_port = 3 [json_name = "lb_port"];

  string load_balancer = 4 [json_name = "load_balancer"];

  string name = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsLbListener version is 0
message AwsLbListener {
  string arn = 1;

  string certificate_arn = 2 [json_name = "certificate_arn"];

  string id = 3;

  string load_balancer_arn = 4 [json_name = "load_balancer_arn"];

  int64 port = 5;

  string protocol = 6;

  string ssl_policy = 7 [json_name = "ssl_policy"];

  DefaultAction default_action = 8 [json_name = "default_action"];

  Timeouts timeouts = 9;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 10;

  int32 count = 11;

  terraform.meta.MetaFields.ForEachEntry for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message DefaultAction {
    int64 order = 1;

    string target_group_arn = 2 [json_name = "target_group_arn"];

    string type = 3;

    AuthenticateCognito authenticate_cognito = 4 [json_name = "authenticate_cognito"];

    AuthenticateOidc authenticate_oidc = 5 [json_name = "authenticate_oidc"];

    FixedResponse fixed_response = 6 [json_name = "fixed_response"];

    Redirect redirect = 7;

    message AuthenticateCognito {
      map<string, string> authentication_request_extra_params = 1;

      string on_unauthenticated_request = 2 [json_name = "on_unauthenticated_request"];

      string scope = 3;

      string session_cookie_name = 4 [json_name = "session_cookie_name"];

      int64 session_timeout = 5 [json_name = "session_timeout"];

      string user_pool_arn = 6 [json_name = "user_pool_arn"];

      string user_pool_client_id = 7 [json_name = "user_pool_client_id"];

      string user_pool_domain = 8 [json_name = "user_pool_domain"];
    }

    message AuthenticateOidc {
      map<string, string> authentication_request_extra_params = 1;

      string authorization_endpoint = 2 [json_name = "authorization_endpoint"];

      string client_id = 3 [json_name = "client_id"];

      string client_secret = 4 [json_name = "client_secret"];

      string issuer = 5;

      string on_unauthenticated_request = 6 [json_name = "on_unauthenticated_request"];

      string scope = 7;

      string session_cookie_name = 8 [json_name = "session_cookie_name"];

      int64 session_timeout = 9 [json_name = "session_timeout"];

      string token_endpoint = 10 [json_name = "token_endpoint"];

      string user_info_endpoint = 11 [json_name = "user_info_endpoint"];
    }

    message FixedResponse {
      string content_type = 1 [json_name = "content_type"];

      string message_body = 2 [json_name = "message_body"];

      string status_code = 3 [json_name = "status_code"];
    }

    message Redirect {
      string host = 1;

      string path = 2;

      string port = 3;

      string protocol = 4;

      string query = 5;

      string status_code = 6 [json_name = "status_code"];
    }
  }

  message Timeouts {
    string read = 1;
  }
}

//AwsLbListenerCertificate version is 0
message AwsLbListenerCertificate {
  string certificate_arn = 1 [json_name = "certificate_arn"];

  string id = 2;

  string listener_arn = 3 [json_name = "listener_arn"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsLbListenerRule version is 0
message AwsLbListenerRule {
  string arn = 1;

  string id = 2;

  string listener_arn = 3 [json_name = "listener_arn"];

  int64 priority = 4;

  Action action = 5;

  Condition condition = 6;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message Action {
    int64 order = 1;

    string target_group_arn = 2 [json_name = "target_group_arn"];

    string type = 3;

    AuthenticateOidc authenticate_oidc = 4 [json_name = "authenticate_oidc"];

    FixedResponse fixed_response = 5 [json_name = "fixed_response"];

    Redirect redirect = 6;

    AuthenticateCognito authenticate_cognito = 7 [json_name = "authenticate_cognito"];

    message AuthenticateOidc {
      map<string, string> authentication_request_extra_params = 1;

      string authorization_endpoint = 2 [json_name = "authorization_endpoint"];

      string client_id = 3 [json_name = "client_id"];

      string client_secret = 4 [json_name = "client_secret"];

      string issuer = 5;

      string on_unauthenticated_request = 6 [json_name = "on_unauthenticated_request"];

      string scope = 7;

      string session_cookie_name = 8 [json_name = "session_cookie_name"];

      int64 session_timeout = 9 [json_name = "session_timeout"];

      string token_endpoint = 10 [json_name = "token_endpoint"];

      string user_info_endpoint = 11 [json_name = "user_info_endpoint"];
    }

    message FixedResponse {
      string content_type = 1 [json_name = "content_type"];

      string message_body = 2 [json_name = "message_body"];

      string status_code = 3 [json_name = "status_code"];
    }

    message Redirect {
      string host = 1;

      string path = 2;

      string port = 3;

      string protocol = 4;

      string query = 5;

      string status_code = 6 [json_name = "status_code"];
    }

    message AuthenticateCognito {
      map<string, string> authentication_request_extra_params = 1;

      string on_unauthenticated_request = 2 [json_name = "on_unauthenticated_request"];

      string scope = 3;

      string session_cookie_name = 4 [json_name = "session_cookie_name"];

      int64 session_timeout = 5 [json_name = "session_timeout"];

      string user_pool_arn = 6 [json_name = "user_pool_arn"];

      string user_pool_client_id = 7 [json_name = "user_pool_client_id"];

      string user_pool_domain = 8 [json_name = "user_pool_domain"];
    }
  }

  message Condition {
    string field = 1;

    repeated string values = 2;

    HostHeader host_header = 3 [json_name = "host_header"];

    HttpHeader http_header = 4 [json_name = "http_header"];

    HttpRequestMethod http_request_method = 5 [json_name = "http_request_method"];

    PathPattern path_pattern = 6 [json_name = "path_pattern"];

    QueryString query_string = 7 [json_name = "query_string"];

    SourceIp source_ip = 8 [json_name = "source_ip"];

    message HostHeader {
      repeated string values = 1;
    }

    message HttpHeader {
      string http_header_name = 1 [json_name = "http_header_name"];

      repeated string values = 2;
    }

    message HttpRequestMethod {
      repeated string values = 1;
    }

    message PathPattern {
      repeated string values = 1;
    }

    message QueryString {
      string key = 1;

      string value = 2;
    }

    message SourceIp {
      repeated string values = 1;
    }
  }
}

//AwsLbSslNegotiationPolicy version is 0
message AwsLbSslNegotiationPolicy {
  string id = 1;

  int64 lb_port = 2 [json_name = "lb_port"];

  string load_balancer = 3 [json_name = "load_balancer"];

  string name = 4;

  Attribute attribute = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message Attribute {
    string name = 1;

    string value = 2;
  }
}

//AwsLbTargetGroup version is 0
message AwsLbTargetGroup {
  string arn = 1;

  string arn_suffix = 2 [json_name = "arn_suffix"];

  int64 deregistration_delay = 3 [json_name = "deregistration_delay"];

  string id = 4;

  bool lambda_multi_value_headers_enabled = 5 [json_name = "lambda_multi_value_headers_enabled"];

  string load_balancing_algorithm_type = 6 [json_name = "load_balancing_algorithm_type"];

  string name = 7;

  string name_prefix = 8 [json_name = "name_prefix"];

  int64 port = 9;

  string protocol = 10;

  bool proxy_protocol_v2 = 11 [json_name = "proxy_protocol_v2"];

  int64 slow_start = 12 [json_name = "slow_start"];

  map<string, string> tags = 13;

  string target_type = 14 [json_name = "target_type"];

  string vpc_id = 15 [json_name = "vpc_id"];

  HealthCheck health_check = 16 [json_name = "health_check"];

  Stickiness stickiness = 17;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 18;

  int32 count = 19;

  terraform.meta.MetaFields.ForEachEntry for_each = 20;

  string provider = 21;

  terraform.meta.Lifecycle lifecycle = 22;

  message HealthCheck {
    bool enabled = 1;

    int64 healthy_threshold = 2 [json_name = "healthy_threshold"];

    int64 interval = 3;

    string matcher = 4;

    string path = 5;

    string port = 6;

    string protocol = 7;

    int64 timeout = 8;

    int64 unhealthy_threshold = 9 [json_name = "unhealthy_threshold"];
  }

  message Stickiness {
    int64 cookie_duration = 1 [json_name = "cookie_duration"];

    bool enabled = 2;

    string type = 3;
  }
}

//AwsLbTargetGroupAttachment version is 0
message AwsLbTargetGroupAttachment {
  string availability_zone = 1 [json_name = "availability_zone"];

  string id = 2;

  int64 port = 3;

  string target_group_arn = 4 [json_name = "target_group_arn"];

  string target_id = 5 [json_name = "target_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsLicensemanagerAssociation version is 0
message AwsLicensemanagerAssociation {
  string id = 1;

  string license_configuration_arn = 2 [json_name = "license_configuration_arn"];

  string resource_arn = 3 [json_name = "resource_arn"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsLicensemanagerLicenseConfiguration version is 0
message AwsLicensemanagerLicenseConfiguration {
  string description = 1;

  string id = 2;

  int64 license_count = 3 [json_name = "license_count"];

  bool license_count_hard_limit = 4 [json_name = "license_count_hard_limit"];

  string license_counting_type = 5 [json_name = "license_counting_type"];

  repeated string license_rules = 6 [json_name = "license_rules"];

  string name = 7;

  map<string, string> tags = 8;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsLightsailDomain version is 0
message AwsLightsailDomain {
  string arn = 1;

  string domain_name = 2 [json_name = "domain_name"];

  string id = 3;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsLightsailInstance version is 0
message AwsLightsailInstance {
  string arn = 1;

  string availability_zone = 2 [json_name = "availability_zone"];

  string blueprint_id = 3 [json_name = "blueprint_id"];

  string bundle_id = 4 [json_name = "bundle_id"];

  int64 cpu_count = 5 [json_name = "cpu_count"];

  string created_at = 6 [json_name = "created_at"];

  string id = 7;

  string ipv6_address = 8 [json_name = "ipv6_address"];

  bool is_static_ip = 9 [json_name = "is_static_ip"];

  string key_pair_name = 10 [json_name = "key_pair_name"];

  string name = 11;

  string private_ip_address = 12 [json_name = "private_ip_address"];

  string public_ip_address = 13 [json_name = "public_ip_address"];

  int64 ram_size = 14 [json_name = "ram_size"];

  map<string, string> tags = 15;

  string user_data = 16 [json_name = "user_data"];

  string username = 17;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 18;

  int32 count = 19;

  terraform.meta.MetaFields.ForEachEntry for_each = 20;

  string provider = 21;

  terraform.meta.Lifecycle lifecycle = 22;
}

//AwsLightsailKeyPair version is 0
message AwsLightsailKeyPair {
  string arn = 1;

  string encrypted_fingerprint = 2 [json_name = "encrypted_fingerprint"];

  string encrypted_private_key = 3 [json_name = "encrypted_private_key"];

  string fingerprint = 4;

  string id = 5;

  string name = 6;

  string name_prefix = 7 [json_name = "name_prefix"];

  string pgp_key = 8 [json_name = "pgp_key"];

  string private_key = 9 [json_name = "private_key"];

  string public_key = 10 [json_name = "public_key"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 11;

  int32 count = 12;

  terraform.meta.MetaFields.ForEachEntry for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsLightsailStaticIp version is 0
message AwsLightsailStaticIp {
  string arn = 1;

  string id = 2;

  string ip_address = 3 [json_name = "ip_address"];

  string name = 4;

  string support_code = 5 [json_name = "support_code"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsLightsailStaticIpAttachment version is 0
message AwsLightsailStaticIpAttachment {
  string id = 1;

  string instance_name = 2 [json_name = "instance_name"];

  string ip_address = 3 [json_name = "ip_address"];

  string static_ip_name = 4 [json_name = "static_ip_name"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsLoadBalancerBackendServerPolicy version is 0
message AwsLoadBalancerBackendServerPolicy {
  string id = 1;

  int64 instance_port = 2 [json_name = "instance_port"];

  string load_balancer_name = 3 [json_name = "load_balancer_name"];

  repeated string policy_names = 4 [json_name = "policy_names"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsLoadBalancerListenerPolicy version is 0
message AwsLoadBalancerListenerPolicy {
  string id = 1;

  string load_balancer_name = 2 [json_name = "load_balancer_name"];

  int64 load_balancer_port = 3 [json_name = "load_balancer_port"];

  repeated string policy_names = 4 [json_name = "policy_names"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsLoadBalancerPolicy version is 0
message AwsLoadBalancerPolicy {
  string id = 1;

  string load_balancer_name = 2 [json_name = "load_balancer_name"];

  string policy_name = 3 [json_name = "policy_name"];

  string policy_type_name = 4 [json_name = "policy_type_name"];

  PolicyAttribute policy_attribute = 5 [json_name = "policy_attribute"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message PolicyAttribute {
    string name = 1;

    string value = 2;
  }
}

//AwsMacieMemberAccountAssociation version is 0
message AwsMacieMemberAccountAssociation {
  string id = 1;

  string member_account_id = 2 [json_name = "member_account_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 3;

  int32 count = 4;

  terraform.meta.MetaFields.ForEachEntry for_each = 5;

  string provider = 6;

  terraform.meta.Lifecycle lifecycle = 7;
}

//AwsMacieS3BucketAssociation version is 0
message AwsMacieS3BucketAssociation {
  string bucket_name = 1 [json_name = "bucket_name"];

  string id = 2;

  string member_account_id = 3 [json_name = "member_account_id"];

  string prefix = 4;

  ClassificationType classification_type = 5 [json_name = "classification_type"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message ClassificationType {
    string continuous = 1;

    string one_time = 2 [json_name = "one_time"];
  }
}

//AwsMainRouteTableAssociation version is 0
message AwsMainRouteTableAssociation {
  string id = 1;

  string original_route_table_id = 2 [json_name = "original_route_table_id"];

  string route_table_id = 3 [json_name = "route_table_id"];

  string vpc_id = 4 [json_name = "vpc_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsMediaConvertQueue version is 0
message AwsMediaConvertQueue {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  string pricing_plan = 5 [json_name = "pricing_plan"];

  string status = 6;

  map<string, string> tags = 7;

  ReservationPlanSettings reservation_plan_settings = 8 [json_name = "reservation_plan_settings"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message ReservationPlanSettings {
    string commitment = 1;

    string renewal_type = 2 [json_name = "renewal_type"];

    int64 reserved_slots = 3 [json_name = "reserved_slots"];
  }
}

//AwsMediaPackageChannel version is 0
message AwsMediaPackageChannel {
  string arn = 1;

  string channel_id = 2 [json_name = "channel_id"];

  string description = 3;

  repeated HlsIngest hls_ingest = 4 [json_name = "hls_ingest"];

  string id = 5;

  map<string, string> tags = 6;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message HlsIngest {
    //ingest_endpoints: list of object
    repeated IngestEndpoints ingest_endpoints = 1 [json_name = "ingest_endpoints"];

    message IngestEndpoints {
      //password: string
      string password = 1;

      //url: string
      string url = 2;

      //username: string
      string username = 3;
    }
  }
}

//AwsMediaStoreContainer version is 0
message AwsMediaStoreContainer {
  string arn = 1;

  string endpoint = 2;

  string id = 3;

  string name = 4;

  map<string, string> tags = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsMediaStoreContainerPolicy version is 0
message AwsMediaStoreContainerPolicy {
  string container_name = 1 [json_name = "container_name"];

  string id = 2;

  string policy = 3;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsMqBroker version is 0
message AwsMqBroker {
  bool apply_immediately = 1 [json_name = "apply_immediately"];

  string arn = 2;

  bool auto_minor_version_upgrade = 3 [json_name = "auto_minor_version_upgrade"];

  string broker_name = 4 [json_name = "broker_name"];

  string deployment_mode = 5 [json_name = "deployment_mode"];

  string engine_type = 6 [json_name = "engine_type"];

  string engine_version = 7 [json_name = "engine_version"];

  string host_instance_type = 8 [json_name = "host_instance_type"];

  string id = 9;

  repeated Instances instances = 10;

  bool publicly_accessible = 11 [json_name = "publicly_accessible"];

  repeated string security_groups = 12 [json_name = "security_groups"];

  repeated string subnet_ids = 13 [json_name = "subnet_ids"];

  map<string, string> tags = 14;

  EncryptionOptions encryption_options = 15 [json_name = "encryption_options"];

  Logs logs = 16;

  MaintenanceWindowStartTime maintenance_window_start_time = 17 [json_name = "maintenance_window_start_time"];

  User user = 18;

  Configuration configuration = 19;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 20;

  int32 count = 21;

  terraform.meta.MetaFields.ForEachEntry for_each = 22;

  string provider = 23;

  terraform.meta.Lifecycle lifecycle = 24;

  message Instances {
    //console_url: string
    string console_url = 1 [json_name = "console_url"];

    //endpoints: list of string
    repeated string endpoints = 2;

    //ip_address: string
    string ip_address = 3 [json_name = "ip_address"];
  }

  message EncryptionOptions {
    string kms_key_id = 1 [json_name = "kms_key_id"];

    bool use_aws_owned_key = 2 [json_name = "use_aws_owned_key"];
  }

  message Logs {
    bool audit = 1;

    bool general = 2;
  }

  message MaintenanceWindowStartTime {
    string day_of_week = 1 [json_name = "day_of_week"];

    string time_of_day = 2 [json_name = "time_of_day"];

    string time_zone = 3 [json_name = "time_zone"];
  }

  message User {
    bool console_access = 1 [json_name = "console_access"];

    repeated string groups = 2;

    string password = 3;

    string username = 4;
  }

  message Configuration {
    string id = 1;

    int64 revision = 2;
  }
}

//AwsMqConfiguration version is 0
message AwsMqConfiguration {
  string arn = 1;

  string data = 2;

  string description = 3;

  string engine_type = 4 [json_name = "engine_type"];

  string engine_version = 5 [json_name = "engine_version"];

  string id = 6;

  int64 latest_revision = 7 [json_name = "latest_revision"];

  string name = 8;

  map<string, string> tags = 9;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 10;

  int32 count = 11;

  terraform.meta.MetaFields.ForEachEntry for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;
}

//AwsMskCluster version is 0
message AwsMskCluster {
  string arn = 1;

  string bootstrap_brokers = 2 [json_name = "bootstrap_brokers"];

  string bootstrap_brokers_tls = 3 [json_name = "bootstrap_brokers_tls"];

  string cluster_name = 4 [json_name = "cluster_name"];

  string current_version = 5 [json_name = "current_version"];

  string enhanced_monitoring = 6 [json_name = "enhanced_monitoring"];

  string id = 7;

  string kafka_version = 8 [json_name = "kafka_version"];

  int64 number_of_broker_nodes = 9 [json_name = "number_of_broker_nodes"];

  map<string, string> tags = 10;

  string zookeeper_connect_string = 11 [json_name = "zookeeper_connect_string"];

  LoggingInfo logging_info = 12 [json_name = "logging_info"];

  OpenMonitoring open_monitoring = 13 [json_name = "open_monitoring"];

  BrokerNodeGroupInfo broker_node_group_info = 14 [json_name = "broker_node_group_info"];

  ClientAuthentication client_authentication = 15 [json_name = "client_authentication"];

  ConfigurationInfo configuration_info = 16 [json_name = "configuration_info"];

  EncryptionInfo encryption_info = 17 [json_name = "encryption_info"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 18;

  int32 count = 19;

  terraform.meta.MetaFields.ForEachEntry for_each = 20;

  string provider = 21;

  terraform.meta.Lifecycle lifecycle = 22;

  message LoggingInfo {
    BrokerLogs broker_logs = 1 [json_name = "broker_logs"];

    message BrokerLogs {
      CloudwatchLogs cloudwatch_logs = 1 [json_name = "cloudwatch_logs"];

      Firehose firehose = 2;

      S3 s3 = 3;

      message CloudwatchLogs {
        bool enabled = 1;

        string log_group = 2 [json_name = "log_group"];
      }

      message Firehose {
        string delivery_stream = 1 [json_name = "delivery_stream"];

        bool enabled = 2;
      }

      message S3 {
        string bucket = 1;

        bool enabled = 2;

        string prefix = 3;
      }
    }
  }

  message OpenMonitoring {
    Prometheus prometheus = 1;

    message Prometheus {
      JmxExporter jmx_exporter = 1 [json_name = "jmx_exporter"];

      NodeExporter node_exporter = 2 [json_name = "node_exporter"];

      message JmxExporter {
        bool enabled_in_broker = 1 [json_name = "enabled_in_broker"];
      }

      message NodeExporter {
        bool enabled_in_broker = 1 [json_name = "enabled_in_broker"];
      }
    }
  }

  message BrokerNodeGroupInfo {
    string az_distribution = 1 [json_name = "az_distribution"];

    repeated string client_subnets = 2 [json_name = "client_subnets"];

    int64 ebs_volume_size = 3 [json_name = "ebs_volume_size"];

    string instance_type = 4 [json_name = "instance_type"];

    repeated string security_groups = 5 [json_name = "security_groups"];
  }

  message ClientAuthentication {
    Tls tls = 1;

    message Tls {
      repeated string certificate_authority_arns = 1 [json_name = "certificate_authority_arns"];
    }
  }

  message ConfigurationInfo {
    string arn = 1;

    int64 revision = 2;
  }

  message EncryptionInfo {
    string encryption_at_rest_kms_key_arn = 1 [json_name = "encryption_at_rest_kms_key_arn"];

    EncryptionInTransit encryption_in_transit = 2 [json_name = "encryption_in_transit"];

    message EncryptionInTransit {
      string client_broker = 1 [json_name = "client_broker"];

      bool in_cluster = 2 [json_name = "in_cluster"];
    }
  }
}

//AwsMskConfiguration version is 0
message AwsMskConfiguration {
  string arn = 1;

  string description = 2;

  string id = 3;

  repeated string kafka_versions = 4 [json_name = "kafka_versions"];

  int64 latest_revision = 5 [json_name = "latest_revision"];

  string name = 6;

  string server_properties = 7 [json_name = "server_properties"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsNatGateway version is 0
message AwsNatGateway {
  string allocation_id = 1 [json_name = "allocation_id"];

  string id = 2;

  string network_interface_id = 3 [json_name = "network_interface_id"];

  string private_ip = 4 [json_name = "private_ip"];

  string public_ip = 5 [json_name = "public_ip"];

  string subnet_id = 6 [json_name = "subnet_id"];

  map<string, string> tags = 7;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsNeptuneCluster version is 0
message AwsNeptuneCluster {
  bool apply_immediately = 1 [json_name = "apply_immediately"];

  string arn = 2;

  repeated string availability_zones = 3 [json_name = "availability_zones"];

  int64 backup_retention_period = 4 [json_name = "backup_retention_period"];

  string cluster_identifier = 5 [json_name = "cluster_identifier"];

  string cluster_identifier_prefix = 6 [json_name = "cluster_identifier_prefix"];

  repeated string cluster_members = 7 [json_name = "cluster_members"];

  string cluster_resource_id = 8 [json_name = "cluster_resource_id"];

  bool deletion_protection = 9 [json_name = "deletion_protection"];

  repeated string enable_cloudwatch_logs_exports = 10 [json_name = "enable_cloudwatch_logs_exports"];

  string endpoint = 11;

  string engine = 12;

  string engine_version = 13 [json_name = "engine_version"];

  string final_snapshot_identifier = 14 [json_name = "final_snapshot_identifier"];

  string hosted_zone_id = 15 [json_name = "hosted_zone_id"];

  bool iam_database_authentication_enabled = 16 [json_name = "iam_database_authentication_enabled"];

  repeated string iam_roles = 17 [json_name = "iam_roles"];

  string id = 18;

  string kms_key_arn = 19 [json_name = "kms_key_arn"];

  string neptune_cluster_parameter_group_name = 20 [json_name = "neptune_cluster_parameter_group_name"];

  string neptune_subnet_group_name = 21 [json_name = "neptune_subnet_group_name"];

  int64 port = 22;

  string preferred_backup_window = 23 [json_name = "preferred_backup_window"];

  string preferred_maintenance_window = 24 [json_name = "preferred_maintenance_window"];

  string reader_endpoint = 25 [json_name = "reader_endpoint"];

  string replication_source_identifier = 26 [json_name = "replication_source_identifier"];

  bool skip_final_snapshot = 27 [json_name = "skip_final_snapshot"];

  string snapshot_identifier = 28 [json_name = "snapshot_identifier"];

  bool storage_encrypted = 29 [json_name = "storage_encrypted"];

  map<string, string> tags = 30;

  repeated string vpc_security_group_ids = 31 [json_name = "vpc_security_group_ids"];

  Timeouts timeouts = 32;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 33;

  int32 count = 34;

  terraform.meta.MetaFields.ForEachEntry for_each = 35;

  string provider = 36;

  terraform.meta.Lifecycle lifecycle = 37;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsNeptuneClusterInstance version is 0
message AwsNeptuneClusterInstance {
  string address = 1;

  bool apply_immediately = 2 [json_name = "apply_immediately"];

  string arn = 3;

  bool auto_minor_version_upgrade = 4 [json_name = "auto_minor_version_upgrade"];

  string availability_zone = 5 [json_name = "availability_zone"];

  string cluster_identifier = 6 [json_name = "cluster_identifier"];

  string dbi_resource_id = 7 [json_name = "dbi_resource_id"];

  string endpoint = 8;

  string engine = 9;

  string engine_version = 10 [json_name = "engine_version"];

  string id = 11;

  string identifier = 12;

  string identifier_prefix = 13 [json_name = "identifier_prefix"];

  string instance_class = 14 [json_name = "instance_class"];

  string kms_key_arn = 15 [json_name = "kms_key_arn"];

  string neptune_parameter_group_name = 16 [json_name = "neptune_parameter_group_name"];

  string neptune_subnet_group_name = 17 [json_name = "neptune_subnet_group_name"];

  int64 port = 18;

  string preferred_backup_window = 19 [json_name = "preferred_backup_window"];

  string preferred_maintenance_window = 20 [json_name = "preferred_maintenance_window"];

  int64 promotion_tier = 21 [json_name = "promotion_tier"];

  bool publicly_accessible = 22 [json_name = "publicly_accessible"];

  bool storage_encrypted = 23 [json_name = "storage_encrypted"];

  map<string, string> tags = 24;

  bool writer = 25;

  Timeouts timeouts = 26;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 27;

  int32 count = 28;

  terraform.meta.MetaFields.ForEachEntry for_each = 29;

  string provider = 30;

  terraform.meta.Lifecycle lifecycle = 31;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsNeptuneClusterParameterGroup version is 0
message AwsNeptuneClusterParameterGroup {
  string arn = 1;

  string description = 2;

  string family = 3;

  string id = 4;

  string name = 5;

  string name_prefix = 6 [json_name = "name_prefix"];

  map<string, string> tags = 7;

  Parameter parameter = 8;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message Parameter {
    string apply_method = 1 [json_name = "apply_method"];

    string name = 2;

    string value = 3;
  }
}

//AwsNeptuneClusterSnapshot version is 0
message AwsNeptuneClusterSnapshot {
  int64 allocated_storage = 1 [json_name = "allocated_storage"];

  repeated string availability_zones = 2 [json_name = "availability_zones"];

  string db_cluster_identifier = 3 [json_name = "db_cluster_identifier"];

  string db_cluster_snapshot_arn = 4 [json_name = "db_cluster_snapshot_arn"];

  string db_cluster_snapshot_identifier = 5 [json_name = "db_cluster_snapshot_identifier"];

  string engine = 6;

  string engine_version = 7 [json_name = "engine_version"];

  string id = 8;

  string kms_key_id = 9 [json_name = "kms_key_id"];

  string license_model = 10 [json_name = "license_model"];

  int64 port = 11;

  string snapshot_type = 12 [json_name = "snapshot_type"];

  string source_db_cluster_snapshot_arn = 13 [json_name = "source_db_cluster_snapshot_arn"];

  string status = 14;

  bool storage_encrypted = 15 [json_name = "storage_encrypted"];

  string vpc_id = 16 [json_name = "vpc_id"];

  Timeouts timeouts = 17;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 18;

  int32 count = 19;

  terraform.meta.MetaFields.ForEachEntry for_each = 20;

  string provider = 21;

  terraform.meta.Lifecycle lifecycle = 22;

  message Timeouts {
    string create = 1;
  }
}

//AwsNeptuneEventSubscription version is 0
message AwsNeptuneEventSubscription {
  string arn = 1;

  string customer_aws_id = 2 [json_name = "customer_aws_id"];

  bool enabled = 3;

  repeated string event_categories = 4 [json_name = "event_categories"];

  string id = 5;

  string name = 6;

  string name_prefix = 7 [json_name = "name_prefix"];

  string sns_topic_arn = 8 [json_name = "sns_topic_arn"];

  repeated string source_ids = 9 [json_name = "source_ids"];

  string source_type = 10 [json_name = "source_type"];

  map<string, string> tags = 11;

  Timeouts timeouts = 12;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 13;

  int32 count = 14;

  terraform.meta.MetaFields.ForEachEntry for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsNeptuneParameterGroup version is 0
message AwsNeptuneParameterGroup {
  string arn = 1;

  string description = 2;

  string family = 3;

  string id = 4;

  string name = 5;

  map<string, string> tags = 6;

  Parameter parameter = 7;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message Parameter {
    string apply_method = 1 [json_name = "apply_method"];

    string name = 2;

    string value = 3;
  }
}

//AwsNeptuneSubnetGroup version is 0
message AwsNeptuneSubnetGroup {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  string name_prefix = 5 [json_name = "name_prefix"];

  repeated string subnet_ids = 6 [json_name = "subnet_ids"];

  map<string, string> tags = 7;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsNetworkAcl version is 0
message AwsNetworkAcl {
  repeated Egress egress = 1;

  string id = 2;

  repeated Ingress ingress = 3;

  string owner_id = 4 [json_name = "owner_id"];

  string subnet_id = 5 [json_name = "subnet_id"];

  repeated string subnet_ids = 6 [json_name = "subnet_ids"];

  map<string, string> tags = 7;

  string vpc_id = 8 [json_name = "vpc_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message Egress {
    //action: string
    string action = 1;

    //cidr_block: string
    string cidr_block = 2 [json_name = "cidr_block"];

    //from_port: number
    int64 from_port = 3 [json_name = "from_port"];

    //icmp_code: number
    int64 icmp_code = 4 [json_name = "icmp_code"];

    //icmp_type: number
    int64 icmp_type = 5 [json_name = "icmp_type"];

    //ipv6_cidr_block: string
    string ipv6_cidr_block = 6 [json_name = "ipv6_cidr_block"];

    //protocol: string
    string protocol = 7;

    //rule_no: number
    int64 rule_no = 8 [json_name = "rule_no"];

    //to_port: number
    int64 to_port = 9 [json_name = "to_port"];
  }

  message Ingress {
    //action: string
    string action = 1;

    //cidr_block: string
    string cidr_block = 2 [json_name = "cidr_block"];

    //from_port: number
    int64 from_port = 3 [json_name = "from_port"];

    //icmp_code: number
    int64 icmp_code = 4 [json_name = "icmp_code"];

    //icmp_type: number
    int64 icmp_type = 5 [json_name = "icmp_type"];

    //ipv6_cidr_block: string
    string ipv6_cidr_block = 6 [json_name = "ipv6_cidr_block"];

    //protocol: string
    string protocol = 7;

    //rule_no: number
    int64 rule_no = 8 [json_name = "rule_no"];

    //to_port: number
    int64 to_port = 9 [json_name = "to_port"];
  }
}

//AwsNetworkAclRule version is 0
message AwsNetworkAclRule {
  string cidr_block = 1 [json_name = "cidr_block"];

  bool egress = 2;

  int64 from_port = 3 [json_name = "from_port"];

  string icmp_code = 4 [json_name = "icmp_code"];

  string icmp_type = 5 [json_name = "icmp_type"];

  string id = 6;

  string ipv6_cidr_block = 7 [json_name = "ipv6_cidr_block"];

  string network_acl_id = 8 [json_name = "network_acl_id"];

  string protocol = 9;

  string rule_action = 10 [json_name = "rule_action"];

  int64 rule_number = 11 [json_name = "rule_number"];

  int64 to_port = 12 [json_name = "to_port"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 13;

  int32 count = 14;

  terraform.meta.MetaFields.ForEachEntry for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;
}

//AwsNetworkInterface version is 0
message AwsNetworkInterface {
  string description = 1;

  string id = 2;

  string mac_address = 3 [json_name = "mac_address"];

  string private_dns_name = 4 [json_name = "private_dns_name"];

  string private_ip = 5 [json_name = "private_ip"];

  repeated string private_ips = 6 [json_name = "private_ips"];

  int64 private_ips_count = 7 [json_name = "private_ips_count"];

  repeated string security_groups = 8 [json_name = "security_groups"];

  bool source_dest_check = 9 [json_name = "source_dest_check"];

  string subnet_id = 10 [json_name = "subnet_id"];

  map<string, string> tags = 11;

  Attachment attachment = 12;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 13;

  int32 count = 14;

  terraform.meta.MetaFields.ForEachEntry for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message Attachment {
    string attachment_id = 1 [json_name = "attachment_id"];

    int64 device_index = 2 [json_name = "device_index"];

    string instance = 3;
  }
}

//AwsNetworkInterfaceAttachment version is 0
message AwsNetworkInterfaceAttachment {
  string attachment_id = 1 [json_name = "attachment_id"];

  int64 device_index = 2 [json_name = "device_index"];

  string id = 3;

  string instance_id = 4 [json_name = "instance_id"];

  string network_interface_id = 5 [json_name = "network_interface_id"];

  string status = 6;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsNetworkInterfaceSgAttachment version is 0
message AwsNetworkInterfaceSgAttachment {
  string id = 1;

  string network_interface_id = 2 [json_name = "network_interface_id"];

  string security_group_id = 3 [json_name = "security_group_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsOpsworksApplication version is 0
message AwsOpsworksApplication {
  string auto_bundle_on_deploy = 1 [json_name = "auto_bundle_on_deploy"];

  string aws_flow_ruby_settings = 2 [json_name = "aws_flow_ruby_settings"];

  string data_source_arn = 3 [json_name = "data_source_arn"];

  string data_source_database_name = 4 [json_name = "data_source_database_name"];

  string data_source_type = 5 [json_name = "data_source_type"];

  string description = 6;

  string document_root = 7 [json_name = "document_root"];

  repeated string domains = 8;

  bool enable_ssl = 9 [json_name = "enable_ssl"];

  string id = 10;

  string name = 11;

  string rails_env = 12 [json_name = "rails_env"];

  string short_name = 13 [json_name = "short_name"];

  string stack_id = 14 [json_name = "stack_id"];

  string type = 15;

  AppSource app_source = 16 [json_name = "app_source"];

  Environment environment = 17;

  SslConfiguration ssl_configuration = 18 [json_name = "ssl_configuration"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 19;

  int32 count = 20;

  terraform.meta.MetaFields.ForEachEntry for_each = 21;

  string provider = 22;

  terraform.meta.Lifecycle lifecycle = 23;

  message AppSource {
    string password = 1;

    string revision = 2;

    string ssh_key = 3 [json_name = "ssh_key"];

    string type = 4;

    string url = 5;

    string username = 6;
  }

  message Environment {
    string key = 1;

    bool secure = 2;

    string value = 3;
  }

  message SslConfiguration {
    string certificate = 1;

    string chain = 2;

    string private_key = 3 [json_name = "private_key"];
  }
}

//AwsOpsworksCustomLayer version is 0
message AwsOpsworksCustomLayer {
  string arn = 1;

  bool auto_assign_elastic_ips = 2 [json_name = "auto_assign_elastic_ips"];

  bool auto_assign_public_ips = 3 [json_name = "auto_assign_public_ips"];

  bool auto_healing = 4 [json_name = "auto_healing"];

  repeated string custom_configure_recipes = 5 [json_name = "custom_configure_recipes"];

  repeated string custom_deploy_recipes = 6 [json_name = "custom_deploy_recipes"];

  string custom_instance_profile_arn = 7 [json_name = "custom_instance_profile_arn"];

  string custom_json = 8 [json_name = "custom_json"];

  repeated string custom_security_group_ids = 9 [json_name = "custom_security_group_ids"];

  repeated string custom_setup_recipes = 10 [json_name = "custom_setup_recipes"];

  repeated string custom_shutdown_recipes = 11 [json_name = "custom_shutdown_recipes"];

  repeated string custom_undeploy_recipes = 12 [json_name = "custom_undeploy_recipes"];

  bool drain_elb_on_shutdown = 13 [json_name = "drain_elb_on_shutdown"];

  string elastic_load_balancer = 14 [json_name = "elastic_load_balancer"];

  string id = 15;

  bool install_updates_on_boot = 16 [json_name = "install_updates_on_boot"];

  int64 instance_shutdown_timeout = 17 [json_name = "instance_shutdown_timeout"];

  string name = 18;

  string short_name = 19 [json_name = "short_name"];

  string stack_id = 20 [json_name = "stack_id"];

  repeated string system_packages = 21 [json_name = "system_packages"];

  map<string, string> tags = 22;

  bool use_ebs_optimized_instances = 23 [json_name = "use_ebs_optimized_instances"];

  EbsVolume ebs_volume = 24 [json_name = "ebs_volume"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 25;

  int32 count = 26;

  terraform.meta.MetaFields.ForEachEntry for_each = 27;

  string provider = 28;

  terraform.meta.Lifecycle lifecycle = 29;

  message EbsVolume {
    bool encrypted = 1;

    int64 iops = 2;

    string mount_point = 3 [json_name = "mount_point"];

    int64 number_of_disks = 4 [json_name = "number_of_disks"];

    string raid_level = 5 [json_name = "raid_level"];

    int64 size = 6;

    string type = 7;
  }
}

//AwsOpsworksGangliaLayer version is 0
message AwsOpsworksGangliaLayer {
  string arn = 1;

  bool auto_assign_elastic_ips = 2 [json_name = "auto_assign_elastic_ips"];

  bool auto_assign_public_ips = 3 [json_name = "auto_assign_public_ips"];

  bool auto_healing = 4 [json_name = "auto_healing"];

  repeated string custom_configure_recipes = 5 [json_name = "custom_configure_recipes"];

  repeated string custom_deploy_recipes = 6 [json_name = "custom_deploy_recipes"];

  string custom_instance_profile_arn = 7 [json_name = "custom_instance_profile_arn"];

  string custom_json = 8 [json_name = "custom_json"];

  repeated string custom_security_group_ids = 9 [json_name = "custom_security_group_ids"];

  repeated string custom_setup_recipes = 10 [json_name = "custom_setup_recipes"];

  repeated string custom_shutdown_recipes = 11 [json_name = "custom_shutdown_recipes"];

  repeated string custom_undeploy_recipes = 12 [json_name = "custom_undeploy_recipes"];

  bool drain_elb_on_shutdown = 13 [json_name = "drain_elb_on_shutdown"];

  string elastic_load_balancer = 14 [json_name = "elastic_load_balancer"];

  string id = 15;

  bool install_updates_on_boot = 16 [json_name = "install_updates_on_boot"];

  int64 instance_shutdown_timeout = 17 [json_name = "instance_shutdown_timeout"];

  string name = 18;

  string password = 19;

  string stack_id = 20 [json_name = "stack_id"];

  repeated string system_packages = 21 [json_name = "system_packages"];

  map<string, string> tags = 22;

  string url = 23;

  bool use_ebs_optimized_instances = 24 [json_name = "use_ebs_optimized_instances"];

  string username = 25;

  EbsVolume ebs_volume = 26 [json_name = "ebs_volume"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 27;

  int32 count = 28;

  terraform.meta.MetaFields.ForEachEntry for_each = 29;

  string provider = 30;

  terraform.meta.Lifecycle lifecycle = 31;

  message EbsVolume {
    bool encrypted = 1;

    int64 iops = 2;

    string mount_point = 3 [json_name = "mount_point"];

    int64 number_of_disks = 4 [json_name = "number_of_disks"];

    string raid_level = 5 [json_name = "raid_level"];

    int64 size = 6;

    string type = 7;
  }
}

//AwsOpsworksHaproxyLayer version is 0
message AwsOpsworksHaproxyLayer {
  string arn = 1;

  bool auto_assign_elastic_ips = 2 [json_name = "auto_assign_elastic_ips"];

  bool auto_assign_public_ips = 3 [json_name = "auto_assign_public_ips"];

  bool auto_healing = 4 [json_name = "auto_healing"];

  repeated string custom_configure_recipes = 5 [json_name = "custom_configure_recipes"];

  repeated string custom_deploy_recipes = 6 [json_name = "custom_deploy_recipes"];

  string custom_instance_profile_arn = 7 [json_name = "custom_instance_profile_arn"];

  string custom_json = 8 [json_name = "custom_json"];

  repeated string custom_security_group_ids = 9 [json_name = "custom_security_group_ids"];

  repeated string custom_setup_recipes = 10 [json_name = "custom_setup_recipes"];

  repeated string custom_shutdown_recipes = 11 [json_name = "custom_shutdown_recipes"];

  repeated string custom_undeploy_recipes = 12 [json_name = "custom_undeploy_recipes"];

  bool drain_elb_on_shutdown = 13 [json_name = "drain_elb_on_shutdown"];

  string elastic_load_balancer = 14 [json_name = "elastic_load_balancer"];

  string healthcheck_method = 15 [json_name = "healthcheck_method"];

  string healthcheck_url = 16 [json_name = "healthcheck_url"];

  string id = 17;

  bool install_updates_on_boot = 18 [json_name = "install_updates_on_boot"];

  int64 instance_shutdown_timeout = 19 [json_name = "instance_shutdown_timeout"];

  string name = 20;

  string stack_id = 21 [json_name = "stack_id"];

  bool stats_enabled = 22 [json_name = "stats_enabled"];

  string stats_password = 23 [json_name = "stats_password"];

  string stats_url = 24 [json_name = "stats_url"];

  string stats_user = 25 [json_name = "stats_user"];

  repeated string system_packages = 26 [json_name = "system_packages"];

  map<string, string> tags = 27;

  bool use_ebs_optimized_instances = 28 [json_name = "use_ebs_optimized_instances"];

  EbsVolume ebs_volume = 29 [json_name = "ebs_volume"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 30;

  int32 count = 31;

  terraform.meta.MetaFields.ForEachEntry for_each = 32;

  string provider = 33;

  terraform.meta.Lifecycle lifecycle = 34;

  message EbsVolume {
    bool encrypted = 1;

    int64 iops = 2;

    string mount_point = 3 [json_name = "mount_point"];

    int64 number_of_disks = 4 [json_name = "number_of_disks"];

    string raid_level = 5 [json_name = "raid_level"];

    int64 size = 6;

    string type = 7;
  }
}

//AwsOpsworksInstance version is 0
message AwsOpsworksInstance {
  string agent_version = 1 [json_name = "agent_version"];

  string ami_id = 2 [json_name = "ami_id"];

  string architecture = 3;

  string auto_scaling_type = 4 [json_name = "auto_scaling_type"];

  string availability_zone = 5 [json_name = "availability_zone"];

  string created_at = 6 [json_name = "created_at"];

  bool delete_ebs = 7 [json_name = "delete_ebs"];

  bool delete_eip = 8 [json_name = "delete_eip"];

  bool ebs_optimized = 9 [json_name = "ebs_optimized"];

  string ec2_instance_id = 10 [json_name = "ec2_instance_id"];

  string ecs_cluster_arn = 11 [json_name = "ecs_cluster_arn"];

  string elastic_ip = 12 [json_name = "elastic_ip"];

  string hostname = 13;

  string id = 14;

  string infrastructure_class = 15 [json_name = "infrastructure_class"];

  bool install_updates_on_boot = 16 [json_name = "install_updates_on_boot"];

  string instance_profile_arn = 17 [json_name = "instance_profile_arn"];

  string instance_type = 18 [json_name = "instance_type"];

  string last_service_error_id = 19 [json_name = "last_service_error_id"];

  repeated string layer_ids = 20 [json_name = "layer_ids"];

  string os = 21;

  string platform = 22;

  string private_dns = 23 [json_name = "private_dns"];

  string private_ip = 24 [json_name = "private_ip"];

  string public_dns = 25 [json_name = "public_dns"];

  string public_ip = 26 [json_name = "public_ip"];

  string registered_by = 27 [json_name = "registered_by"];

  string reported_agent_version = 28 [json_name = "reported_agent_version"];

  string reported_os_family = 29 [json_name = "reported_os_family"];

  string reported_os_name = 30 [json_name = "reported_os_name"];

  string reported_os_version = 31 [json_name = "reported_os_version"];

  string root_device_type = 32 [json_name = "root_device_type"];

  string root_device_volume_id = 33 [json_name = "root_device_volume_id"];

  repeated string security_group_ids = 34 [json_name = "security_group_ids"];

  string ssh_host_dsa_key_fingerprint = 35 [json_name = "ssh_host_dsa_key_fingerprint"];

  string ssh_host_rsa_key_fingerprint = 36 [json_name = "ssh_host_rsa_key_fingerprint"];

  string ssh_key_name = 37 [json_name = "ssh_key_name"];

  string stack_id = 38 [json_name = "stack_id"];

  string state = 39;

  string status = 40;

  string subnet_id = 41 [json_name = "subnet_id"];

  string tenancy = 42;

  string virtualization_type = 43 [json_name = "virtualization_type"];

  Timeouts timeouts = 44;

  EbsBlockDevice ebs_block_device = 45 [json_name = "ebs_block_device"];

  EphemeralBlockDevice ephemeral_block_device = 46 [json_name = "ephemeral_block_device"];

  RootBlockDevice root_block_device = 47 [json_name = "root_block_device"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 48;

  int32 count = 49;

  terraform.meta.MetaFields.ForEachEntry for_each = 50;

  string provider = 51;

  terraform.meta.Lifecycle lifecycle = 52;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }

  message EbsBlockDevice {
    bool delete_on_termination = 1 [json_name = "delete_on_termination"];

    string device_name = 2 [json_name = "device_name"];

    int64 iops = 3;

    string snapshot_id = 4 [json_name = "snapshot_id"];

    int64 volume_size = 5 [json_name = "volume_size"];

    string volume_type = 6 [json_name = "volume_type"];
  }

  message EphemeralBlockDevice {
    string device_name = 1 [json_name = "device_name"];

    string virtual_name = 2 [json_name = "virtual_name"];
  }

  message RootBlockDevice {
    bool delete_on_termination = 1 [json_name = "delete_on_termination"];

    int64 iops = 2;

    int64 volume_size = 3 [json_name = "volume_size"];

    string volume_type = 4 [json_name = "volume_type"];
  }
}

//AwsOpsworksJavaAppLayer version is 0
message AwsOpsworksJavaAppLayer {
  string app_server = 1 [json_name = "app_server"];

  string app_server_version = 2 [json_name = "app_server_version"];

  string arn = 3;

  bool auto_assign_elastic_ips = 4 [json_name = "auto_assign_elastic_ips"];

  bool auto_assign_public_ips = 5 [json_name = "auto_assign_public_ips"];

  bool auto_healing = 6 [json_name = "auto_healing"];

  repeated string custom_configure_recipes = 7 [json_name = "custom_configure_recipes"];

  repeated string custom_deploy_recipes = 8 [json_name = "custom_deploy_recipes"];

  string custom_instance_profile_arn = 9 [json_name = "custom_instance_profile_arn"];

  string custom_json = 10 [json_name = "custom_json"];

  repeated string custom_security_group_ids = 11 [json_name = "custom_security_group_ids"];

  repeated string custom_setup_recipes = 12 [json_name = "custom_setup_recipes"];

  repeated string custom_shutdown_recipes = 13 [json_name = "custom_shutdown_recipes"];

  repeated string custom_undeploy_recipes = 14 [json_name = "custom_undeploy_recipes"];

  bool drain_elb_on_shutdown = 15 [json_name = "drain_elb_on_shutdown"];

  string elastic_load_balancer = 16 [json_name = "elastic_load_balancer"];

  string id = 17;

  bool install_updates_on_boot = 18 [json_name = "install_updates_on_boot"];

  int64 instance_shutdown_timeout = 19 [json_name = "instance_shutdown_timeout"];

  string jvm_options = 20 [json_name = "jvm_options"];

  string jvm_type = 21 [json_name = "jvm_type"];

  string jvm_version = 22 [json_name = "jvm_version"];

  string name = 23;

  string stack_id = 24 [json_name = "stack_id"];

  repeated string system_packages = 25 [json_name = "system_packages"];

  map<string, string> tags = 26;

  bool use_ebs_optimized_instances = 27 [json_name = "use_ebs_optimized_instances"];

  EbsVolume ebs_volume = 28 [json_name = "ebs_volume"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 29;

  int32 count = 30;

  terraform.meta.MetaFields.ForEachEntry for_each = 31;

  string provider = 32;

  terraform.meta.Lifecycle lifecycle = 33;

  message EbsVolume {
    bool encrypted = 1;

    int64 iops = 2;

    string mount_point = 3 [json_name = "mount_point"];

    int64 number_of_disks = 4 [json_name = "number_of_disks"];

    string raid_level = 5 [json_name = "raid_level"];

    int64 size = 6;

    string type = 7;
  }
}

//AwsOpsworksMemcachedLayer version is 0
message AwsOpsworksMemcachedLayer {
  int64 allocated_memory = 1 [json_name = "allocated_memory"];

  string arn = 2;

  bool auto_assign_elastic_ips = 3 [json_name = "auto_assign_elastic_ips"];

  bool auto_assign_public_ips = 4 [json_name = "auto_assign_public_ips"];

  bool auto_healing = 5 [json_name = "auto_healing"];

  repeated string custom_configure_recipes = 6 [json_name = "custom_configure_recipes"];

  repeated string custom_deploy_recipes = 7 [json_name = "custom_deploy_recipes"];

  string custom_instance_profile_arn = 8 [json_name = "custom_instance_profile_arn"];

  string custom_json = 9 [json_name = "custom_json"];

  repeated string custom_security_group_ids = 10 [json_name = "custom_security_group_ids"];

  repeated string custom_setup_recipes = 11 [json_name = "custom_setup_recipes"];

  repeated string custom_shutdown_recipes = 12 [json_name = "custom_shutdown_recipes"];

  repeated string custom_undeploy_recipes = 13 [json_name = "custom_undeploy_recipes"];

  bool drain_elb_on_shutdown = 14 [json_name = "drain_elb_on_shutdown"];

  string elastic_load_balancer = 15 [json_name = "elastic_load_balancer"];

  string id = 16;

  bool install_updates_on_boot = 17 [json_name = "install_updates_on_boot"];

  int64 instance_shutdown_timeout = 18 [json_name = "instance_shutdown_timeout"];

  string name = 19;

  string stack_id = 20 [json_name = "stack_id"];

  repeated string system_packages = 21 [json_name = "system_packages"];

  map<string, string> tags = 22;

  bool use_ebs_optimized_instances = 23 [json_name = "use_ebs_optimized_instances"];

  EbsVolume ebs_volume = 24 [json_name = "ebs_volume"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 25;

  int32 count = 26;

  terraform.meta.MetaFields.ForEachEntry for_each = 27;

  string provider = 28;

  terraform.meta.Lifecycle lifecycle = 29;

  message EbsVolume {
    bool encrypted = 1;

    int64 iops = 2;

    string mount_point = 3 [json_name = "mount_point"];

    int64 number_of_disks = 4 [json_name = "number_of_disks"];

    string raid_level = 5 [json_name = "raid_level"];

    int64 size = 6;

    string type = 7;
  }
}

//AwsOpsworksMysqlLayer version is 0
message AwsOpsworksMysqlLayer {
  string arn = 1;

  bool auto_assign_elastic_ips = 2 [json_name = "auto_assign_elastic_ips"];

  bool auto_assign_public_ips = 3 [json_name = "auto_assign_public_ips"];

  bool auto_healing = 4 [json_name = "auto_healing"];

  repeated string custom_configure_recipes = 5 [json_name = "custom_configure_recipes"];

  repeated string custom_deploy_recipes = 6 [json_name = "custom_deploy_recipes"];

  string custom_instance_profile_arn = 7 [json_name = "custom_instance_profile_arn"];

  string custom_json = 8 [json_name = "custom_json"];

  repeated string custom_security_group_ids = 9 [json_name = "custom_security_group_ids"];

  repeated string custom_setup_recipes = 10 [json_name = "custom_setup_recipes"];

  repeated string custom_shutdown_recipes = 11 [json_name = "custom_shutdown_recipes"];

  repeated string custom_undeploy_recipes = 12 [json_name = "custom_undeploy_recipes"];

  bool drain_elb_on_shutdown = 13 [json_name = "drain_elb_on_shutdown"];

  string elastic_load_balancer = 14 [json_name = "elastic_load_balancer"];

  string id = 15;

  bool install_updates_on_boot = 16 [json_name = "install_updates_on_boot"];

  int64 instance_shutdown_timeout = 17 [json_name = "instance_shutdown_timeout"];

  string name = 18;

  string root_password = 19 [json_name = "root_password"];

  bool root_password_on_all_instances = 20 [json_name = "root_password_on_all_instances"];

  string stack_id = 21 [json_name = "stack_id"];

  repeated string system_packages = 22 [json_name = "system_packages"];

  map<string, string> tags = 23;

  bool use_ebs_optimized_instances = 24 [json_name = "use_ebs_optimized_instances"];

  EbsVolume ebs_volume = 25 [json_name = "ebs_volume"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 26;

  int32 count = 27;

  terraform.meta.MetaFields.ForEachEntry for_each = 28;

  string provider = 29;

  terraform.meta.Lifecycle lifecycle = 30;

  message EbsVolume {
    bool encrypted = 1;

    int64 iops = 2;

    string mount_point = 3 [json_name = "mount_point"];

    int64 number_of_disks = 4 [json_name = "number_of_disks"];

    string raid_level = 5 [json_name = "raid_level"];

    int64 size = 6;

    string type = 7;
  }
}

//AwsOpsworksNodejsAppLayer version is 0
message AwsOpsworksNodejsAppLayer {
  string arn = 1;

  bool auto_assign_elastic_ips = 2 [json_name = "auto_assign_elastic_ips"];

  bool auto_assign_public_ips = 3 [json_name = "auto_assign_public_ips"];

  bool auto_healing = 4 [json_name = "auto_healing"];

  repeated string custom_configure_recipes = 5 [json_name = "custom_configure_recipes"];

  repeated string custom_deploy_recipes = 6 [json_name = "custom_deploy_recipes"];

  string custom_instance_profile_arn = 7 [json_name = "custom_instance_profile_arn"];

  string custom_json = 8 [json_name = "custom_json"];

  repeated string custom_security_group_ids = 9 [json_name = "custom_security_group_ids"];

  repeated string custom_setup_recipes = 10 [json_name = "custom_setup_recipes"];

  repeated string custom_shutdown_recipes = 11 [json_name = "custom_shutdown_recipes"];

  repeated string custom_undeploy_recipes = 12 [json_name = "custom_undeploy_recipes"];

  bool drain_elb_on_shutdown = 13 [json_name = "drain_elb_on_shutdown"];

  string elastic_load_balancer = 14 [json_name = "elastic_load_balancer"];

  string id = 15;

  bool install_updates_on_boot = 16 [json_name = "install_updates_on_boot"];

  int64 instance_shutdown_timeout = 17 [json_name = "instance_shutdown_timeout"];

  string name = 18;

  string nodejs_version = 19 [json_name = "nodejs_version"];

  string stack_id = 20 [json_name = "stack_id"];

  repeated string system_packages = 21 [json_name = "system_packages"];

  map<string, string> tags = 22;

  bool use_ebs_optimized_instances = 23 [json_name = "use_ebs_optimized_instances"];

  EbsVolume ebs_volume = 24 [json_name = "ebs_volume"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 25;

  int32 count = 26;

  terraform.meta.MetaFields.ForEachEntry for_each = 27;

  string provider = 28;

  terraform.meta.Lifecycle lifecycle = 29;

  message EbsVolume {
    bool encrypted = 1;

    int64 iops = 2;

    string mount_point = 3 [json_name = "mount_point"];

    int64 number_of_disks = 4 [json_name = "number_of_disks"];

    string raid_level = 5 [json_name = "raid_level"];

    int64 size = 6;

    string type = 7;
  }
}

//AwsOpsworksPermission version is 0
message AwsOpsworksPermission {
  bool allow_ssh = 1 [json_name = "allow_ssh"];

  bool allow_sudo = 2 [json_name = "allow_sudo"];

  string id = 3;

  string level = 4;

  string stack_id = 5 [json_name = "stack_id"];

  string user_arn = 6 [json_name = "user_arn"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsOpsworksPhpAppLayer version is 0
message AwsOpsworksPhpAppLayer {
  string arn = 1;

  bool auto_assign_elastic_ips = 2 [json_name = "auto_assign_elastic_ips"];

  bool auto_assign_public_ips = 3 [json_name = "auto_assign_public_ips"];

  bool auto_healing = 4 [json_name = "auto_healing"];

  repeated string custom_configure_recipes = 5 [json_name = "custom_configure_recipes"];

  repeated string custom_deploy_recipes = 6 [json_name = "custom_deploy_recipes"];

  string custom_instance_profile_arn = 7 [json_name = "custom_instance_profile_arn"];

  string custom_json = 8 [json_name = "custom_json"];

  repeated string custom_security_group_ids = 9 [json_name = "custom_security_group_ids"];

  repeated string custom_setup_recipes = 10 [json_name = "custom_setup_recipes"];

  repeated string custom_shutdown_recipes = 11 [json_name = "custom_shutdown_recipes"];

  repeated string custom_undeploy_recipes = 12 [json_name = "custom_undeploy_recipes"];

  bool drain_elb_on_shutdown = 13 [json_name = "drain_elb_on_shutdown"];

  string elastic_load_balancer = 14 [json_name = "elastic_load_balancer"];

  string id = 15;

  bool install_updates_on_boot = 16 [json_name = "install_updates_on_boot"];

  int64 instance_shutdown_timeout = 17 [json_name = "instance_shutdown_timeout"];

  string name = 18;

  string stack_id = 19 [json_name = "stack_id"];

  repeated string system_packages = 20 [json_name = "system_packages"];

  map<string, string> tags = 21;

  bool use_ebs_optimized_instances = 22 [json_name = "use_ebs_optimized_instances"];

  EbsVolume ebs_volume = 23 [json_name = "ebs_volume"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 24;

  int32 count = 25;

  terraform.meta.MetaFields.ForEachEntry for_each = 26;

  string provider = 27;

  terraform.meta.Lifecycle lifecycle = 28;

  message EbsVolume {
    bool encrypted = 1;

    int64 iops = 2;

    string mount_point = 3 [json_name = "mount_point"];

    int64 number_of_disks = 4 [json_name = "number_of_disks"];

    string raid_level = 5 [json_name = "raid_level"];

    int64 size = 6;

    string type = 7;
  }
}

//AwsOpsworksRailsAppLayer version is 0
message AwsOpsworksRailsAppLayer {
  string app_server = 1 [json_name = "app_server"];

  string arn = 2;

  bool auto_assign_elastic_ips = 3 [json_name = "auto_assign_elastic_ips"];

  bool auto_assign_public_ips = 4 [json_name = "auto_assign_public_ips"];

  bool auto_healing = 5 [json_name = "auto_healing"];

  string bundler_version = 6 [json_name = "bundler_version"];

  repeated string custom_configure_recipes = 7 [json_name = "custom_configure_recipes"];

  repeated string custom_deploy_recipes = 8 [json_name = "custom_deploy_recipes"];

  string custom_instance_profile_arn = 9 [json_name = "custom_instance_profile_arn"];

  string custom_json = 10 [json_name = "custom_json"];

  repeated string custom_security_group_ids = 11 [json_name = "custom_security_group_ids"];

  repeated string custom_setup_recipes = 12 [json_name = "custom_setup_recipes"];

  repeated string custom_shutdown_recipes = 13 [json_name = "custom_shutdown_recipes"];

  repeated string custom_undeploy_recipes = 14 [json_name = "custom_undeploy_recipes"];

  bool drain_elb_on_shutdown = 15 [json_name = "drain_elb_on_shutdown"];

  string elastic_load_balancer = 16 [json_name = "elastic_load_balancer"];

  string id = 17;

  bool install_updates_on_boot = 18 [json_name = "install_updates_on_boot"];

  int64 instance_shutdown_timeout = 19 [json_name = "instance_shutdown_timeout"];

  bool manage_bundler = 20 [json_name = "manage_bundler"];

  string name = 21;

  string passenger_version = 22 [json_name = "passenger_version"];

  string ruby_version = 23 [json_name = "ruby_version"];

  string rubygems_version = 24 [json_name = "rubygems_version"];

  string stack_id = 25 [json_name = "stack_id"];

  repeated string system_packages = 26 [json_name = "system_packages"];

  map<string, string> tags = 27;

  bool use_ebs_optimized_instances = 28 [json_name = "use_ebs_optimized_instances"];

  EbsVolume ebs_volume = 29 [json_name = "ebs_volume"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 30;

  int32 count = 31;

  terraform.meta.MetaFields.ForEachEntry for_each = 32;

  string provider = 33;

  terraform.meta.Lifecycle lifecycle = 34;

  message EbsVolume {
    bool encrypted = 1;

    int64 iops = 2;

    string mount_point = 3 [json_name = "mount_point"];

    int64 number_of_disks = 4 [json_name = "number_of_disks"];

    string raid_level = 5 [json_name = "raid_level"];

    int64 size = 6;

    string type = 7;
  }
}

//AwsOpsworksRdsDbInstance version is 0
message AwsOpsworksRdsDbInstance {
  string db_password = 1 [json_name = "db_password"];

  string db_user = 2 [json_name = "db_user"];

  string id = 3;

  string rds_db_instance_arn = 4 [json_name = "rds_db_instance_arn"];

  string stack_id = 5 [json_name = "stack_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsOpsworksStack version is 0
message AwsOpsworksStack {
  string agent_version = 1 [json_name = "agent_version"];

  string arn = 2;

  string berkshelf_version = 3 [json_name = "berkshelf_version"];

  string color = 4;

  string configuration_manager_name = 5 [json_name = "configuration_manager_name"];

  string configuration_manager_version = 6 [json_name = "configuration_manager_version"];

  string custom_json = 7 [json_name = "custom_json"];

  string default_availability_zone = 8 [json_name = "default_availability_zone"];

  string default_instance_profile_arn = 9 [json_name = "default_instance_profile_arn"];

  string default_os = 10 [json_name = "default_os"];

  string default_root_device_type = 11 [json_name = "default_root_device_type"];

  string default_ssh_key_name = 12 [json_name = "default_ssh_key_name"];

  string default_subnet_id = 13 [json_name = "default_subnet_id"];

  string hostname_theme = 14 [json_name = "hostname_theme"];

  string id = 15;

  bool manage_berkshelf = 16 [json_name = "manage_berkshelf"];

  string name = 17;

  string region = 18;

  string service_role_arn = 19 [json_name = "service_role_arn"];

  string stack_endpoint = 20 [json_name = "stack_endpoint"];

  map<string, string> tags = 21;

  bool use_custom_cookbooks = 22 [json_name = "use_custom_cookbooks"];

  bool use_opsworks_security_groups = 23 [json_name = "use_opsworks_security_groups"];

  string vpc_id = 24 [json_name = "vpc_id"];

  CustomCookbooksSource custom_cookbooks_source = 25 [json_name = "custom_cookbooks_source"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 26;

  int32 count = 27;

  terraform.meta.MetaFields.ForEachEntry for_each = 28;

  string provider = 29;

  terraform.meta.Lifecycle lifecycle = 30;

  message CustomCookbooksSource {
    string password = 1;

    string revision = 2;

    string ssh_key = 3 [json_name = "ssh_key"];

    string type = 4;

    string url = 5;

    string username = 6;
  }
}

//AwsOpsworksStaticWebLayer version is 0
message AwsOpsworksStaticWebLayer {
  string arn = 1;

  bool auto_assign_elastic_ips = 2 [json_name = "auto_assign_elastic_ips"];

  bool auto_assign_public_ips = 3 [json_name = "auto_assign_public_ips"];

  bool auto_healing = 4 [json_name = "auto_healing"];

  repeated string custom_configure_recipes = 5 [json_name = "custom_configure_recipes"];

  repeated string custom_deploy_recipes = 6 [json_name = "custom_deploy_recipes"];

  string custom_instance_profile_arn = 7 [json_name = "custom_instance_profile_arn"];

  string custom_json = 8 [json_name = "custom_json"];

  repeated string custom_security_group_ids = 9 [json_name = "custom_security_group_ids"];

  repeated string custom_setup_recipes = 10 [json_name = "custom_setup_recipes"];

  repeated string custom_shutdown_recipes = 11 [json_name = "custom_shutdown_recipes"];

  repeated string custom_undeploy_recipes = 12 [json_name = "custom_undeploy_recipes"];

  bool drain_elb_on_shutdown = 13 [json_name = "drain_elb_on_shutdown"];

  string elastic_load_balancer = 14 [json_name = "elastic_load_balancer"];

  string id = 15;

  bool install_updates_on_boot = 16 [json_name = "install_updates_on_boot"];

  int64 instance_shutdown_timeout = 17 [json_name = "instance_shutdown_timeout"];

  string name = 18;

  string stack_id = 19 [json_name = "stack_id"];

  repeated string system_packages = 20 [json_name = "system_packages"];

  map<string, string> tags = 21;

  bool use_ebs_optimized_instances = 22 [json_name = "use_ebs_optimized_instances"];

  EbsVolume ebs_volume = 23 [json_name = "ebs_volume"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 24;

  int32 count = 25;

  terraform.meta.MetaFields.ForEachEntry for_each = 26;

  string provider = 27;

  terraform.meta.Lifecycle lifecycle = 28;

  message EbsVolume {
    bool encrypted = 1;

    int64 iops = 2;

    string mount_point = 3 [json_name = "mount_point"];

    int64 number_of_disks = 4 [json_name = "number_of_disks"];

    string raid_level = 5 [json_name = "raid_level"];

    int64 size = 6;

    string type = 7;
  }
}

//AwsOpsworksUserProfile version is 0
message AwsOpsworksUserProfile {
  bool allow_self_management = 1 [json_name = "allow_self_management"];

  string id = 2;

  string ssh_public_key = 3 [json_name = "ssh_public_key"];

  string ssh_username = 4 [json_name = "ssh_username"];

  string user_arn = 5 [json_name = "user_arn"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsOrganizationsAccount version is 0
message AwsOrganizationsAccount {
  string arn = 1;

  string email = 2;

  string iam_user_access_to_billing = 3 [json_name = "iam_user_access_to_billing"];

  string id = 4;

  string joined_method = 5 [json_name = "joined_method"];

  string joined_timestamp = 6 [json_name = "joined_timestamp"];

  string name = 7;

  string parent_id = 8 [json_name = "parent_id"];

  string role_name = 9 [json_name = "role_name"];

  string status = 10;

  map<string, string> tags = 11;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 12;

  int32 count = 13;

  terraform.meta.MetaFields.ForEachEntry for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;
}

//AwsOrganizationsOrganization version is 0
message AwsOrganizationsOrganization {
  repeated Accounts accounts = 1;

  string arn = 2;

  repeated string aws_service_access_principals = 3 [json_name = "aws_service_access_principals"];

  repeated string enabled_policy_types = 4 [json_name = "enabled_policy_types"];

  string feature_set = 5 [json_name = "feature_set"];

  string id = 6;

  string master_account_arn = 7 [json_name = "master_account_arn"];

  string master_account_email = 8 [json_name = "master_account_email"];

  string master_account_id = 9 [json_name = "master_account_id"];

  repeated NonMasterAccounts non_master_accounts = 10 [json_name = "non_master_accounts"];

  repeated Roots roots = 11;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 12;

  int32 count = 13;

  terraform.meta.MetaFields.ForEachEntry for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message Accounts {
    //arn: string
    string arn = 1;

    //email: string
    string email = 2;

    //id: string
    string id = 3;

    //name: string
    string name = 4;

    //status: string
    string status = 5;
  }

  message NonMasterAccounts {
    //arn: string
    string arn = 1;

    //email: string
    string email = 2;

    //id: string
    string id = 3;

    //name: string
    string name = 4;

    //status: string
    string status = 5;
  }

  message Roots {
    //arn: string
    string arn = 1;

    //id: string
    string id = 2;

    //name: string
    string name = 3;

    //policy_types: list of object
    repeated PolicyTypes policy_types = 4 [json_name = "policy_types"];

    message PolicyTypes {
      //status: string
      string status = 1;

      //type: string
      string type = 2;
    }
  }
}

//AwsOrganizationsOrganizationalUnit version is 0
message AwsOrganizationsOrganizationalUnit {
  repeated Accounts accounts = 1;

  string arn = 2;

  string id = 3;

  string name = 4;

  string parent_id = 5 [json_name = "parent_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message Accounts {
    //arn: string
    string arn = 1;

    //email: string
    string email = 2;

    //id: string
    string id = 3;

    //name: string
    string name = 4;
  }
}

//AwsOrganizationsPolicy version is 0
message AwsOrganizationsPolicy {
  string arn = 1;

  string content = 2;

  string description = 3;

  string id = 4;

  string name = 5;

  string type = 6;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsOrganizationsPolicyAttachment version is 0
message AwsOrganizationsPolicyAttachment {
  string id = 1;

  string policy_id = 2 [json_name = "policy_id"];

  string target_id = 3 [json_name = "target_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsPinpointAdmChannel version is 0
message AwsPinpointAdmChannel {
  string application_id = 1 [json_name = "application_id"];

  string client_id = 2 [json_name = "client_id"];

  string client_secret = 3 [json_name = "client_secret"];

  bool enabled = 4;

  string id = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsPinpointApnsChannel version is 0
message AwsPinpointApnsChannel {
  string application_id = 1 [json_name = "application_id"];

  string bundle_id = 2 [json_name = "bundle_id"];

  string certificate = 3;

  string default_authentication_method = 4 [json_name = "default_authentication_method"];

  bool enabled = 5;

  string id = 6;

  string private_key = 7 [json_name = "private_key"];

  string team_id = 8 [json_name = "team_id"];

  string token_key = 9 [json_name = "token_key"];

  string token_key_id = 10 [json_name = "token_key_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 11;

  int32 count = 12;

  terraform.meta.MetaFields.ForEachEntry for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsPinpointApnsSandboxChannel version is 0
message AwsPinpointApnsSandboxChannel {
  string application_id = 1 [json_name = "application_id"];

  string bundle_id = 2 [json_name = "bundle_id"];

  string certificate = 3;

  string default_authentication_method = 4 [json_name = "default_authentication_method"];

  bool enabled = 5;

  string id = 6;

  string private_key = 7 [json_name = "private_key"];

  string team_id = 8 [json_name = "team_id"];

  string token_key = 9 [json_name = "token_key"];

  string token_key_id = 10 [json_name = "token_key_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 11;

  int32 count = 12;

  terraform.meta.MetaFields.ForEachEntry for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsPinpointApnsVoipChannel version is 0
message AwsPinpointApnsVoipChannel {
  string application_id = 1 [json_name = "application_id"];

  string bundle_id = 2 [json_name = "bundle_id"];

  string certificate = 3;

  string default_authentication_method = 4 [json_name = "default_authentication_method"];

  bool enabled = 5;

  string id = 6;

  string private_key = 7 [json_name = "private_key"];

  string team_id = 8 [json_name = "team_id"];

  string token_key = 9 [json_name = "token_key"];

  string token_key_id = 10 [json_name = "token_key_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 11;

  int32 count = 12;

  terraform.meta.MetaFields.ForEachEntry for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsPinpointApnsVoipSandboxChannel version is 0
message AwsPinpointApnsVoipSandboxChannel {
  string application_id = 1 [json_name = "application_id"];

  string bundle_id = 2 [json_name = "bundle_id"];

  string certificate = 3;

  string default_authentication_method = 4 [json_name = "default_authentication_method"];

  bool enabled = 5;

  string id = 6;

  string private_key = 7 [json_name = "private_key"];

  string team_id = 8 [json_name = "team_id"];

  string token_key = 9 [json_name = "token_key"];

  string token_key_id = 10 [json_name = "token_key_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 11;

  int32 count = 12;

  terraform.meta.MetaFields.ForEachEntry for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsPinpointApp version is 0
message AwsPinpointApp {
  string application_id = 1 [json_name = "application_id"];

  string arn = 2;

  string id = 3;

  string name = 4;

  string name_prefix = 5 [json_name = "name_prefix"];

  map<string, string> tags = 6;

  CampaignHook campaign_hook = 7 [json_name = "campaign_hook"];

  Limits limits = 8;

  QuietTime quiet_time = 9 [json_name = "quiet_time"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 10;

  int32 count = 11;

  terraform.meta.MetaFields.ForEachEntry for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message CampaignHook {
    string lambda_function_name = 1 [json_name = "lambda_function_name"];

    string mode = 2;

    string web_url = 3 [json_name = "web_url"];
  }

  message Limits {
    int64 daily = 1;

    int64 maximum_duration = 2 [json_name = "maximum_duration"];

    int64 messages_per_second = 3 [json_name = "messages_per_second"];

    int64 total = 4;
  }

  message QuietTime {
    string end = 1;

    string start = 2;
  }
}

//AwsPinpointBaiduChannel version is 0
message AwsPinpointBaiduChannel {
  string api_key = 1 [json_name = "api_key"];

  string application_id = 2 [json_name = "application_id"];

  bool enabled = 3;

  string id = 4;

  string secret_key = 5 [json_name = "secret_key"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsPinpointEmailChannel version is 0
message AwsPinpointEmailChannel {
  string application_id = 1 [json_name = "application_id"];

  bool enabled = 2;

  string from_address = 3 [json_name = "from_address"];

  string id = 4;

  string identity = 5;

  int64 messages_per_second = 6 [json_name = "messages_per_second"];

  string role_arn = 7 [json_name = "role_arn"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsPinpointEventStream version is 0
message AwsPinpointEventStream {
  string application_id = 1 [json_name = "application_id"];

  string destination_stream_arn = 2 [json_name = "destination_stream_arn"];

  string id = 3;

  string role_arn = 4 [json_name = "role_arn"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsPinpointGcmChannel version is 0
message AwsPinpointGcmChannel {
  string api_key = 1 [json_name = "api_key"];

  string application_id = 2 [json_name = "application_id"];

  bool enabled = 3;

  string id = 4;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsPinpointSmsChannel version is 0
message AwsPinpointSmsChannel {
  string application_id = 1 [json_name = "application_id"];

  bool enabled = 2;

  string id = 3;

  int64 promotional_messages_per_second = 4 [json_name = "promotional_messages_per_second"];

  string sender_id = 5 [json_name = "sender_id"];

  string short_code = 6 [json_name = "short_code"];

  int64 transactional_messages_per_second = 7 [json_name = "transactional_messages_per_second"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsPlacementGroup version is 0
message AwsPlacementGroup {
  string id = 1;

  string name = 2;

  string placement_group_id = 3 [json_name = "placement_group_id"];

  string strategy = 4;

  map<string, string> tags = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsProxyProtocolPolicy version is 0
message AwsProxyProtocolPolicy {
  string id = 1;

  repeated string instance_ports = 2 [json_name = "instance_ports"];

  string load_balancer = 3 [json_name = "load_balancer"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsQldbLedger version is 0
message AwsQldbLedger {
  string arn = 1;

  bool deletion_protection = 2 [json_name = "deletion_protection"];

  string id = 3;

  string name = 4;

  map<string, string> tags = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsQuicksightGroup version is 0
message AwsQuicksightGroup {
  string arn = 1;

  string aws_account_id = 2 [json_name = "aws_account_id"];

  string description = 3;

  string group_name = 4 [json_name = "group_name"];

  string id = 5;

  string namespace = 6;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsQuicksightUser version is 0
message AwsQuicksightUser {
  string arn = 1;

  string aws_account_id = 2 [json_name = "aws_account_id"];

  string email = 3;

  string iam_arn = 4 [json_name = "iam_arn"];

  string id = 5;

  string identity_type = 6 [json_name = "identity_type"];

  string namespace = 7;

  string session_name = 8 [json_name = "session_name"];

  string user_name = 9 [json_name = "user_name"];

  string user_role = 10 [json_name = "user_role"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 11;

  int32 count = 12;

  terraform.meta.MetaFields.ForEachEntry for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsRamPrincipalAssociation version is 0
message AwsRamPrincipalAssociation {
  string id = 1;

  string principal = 2;

  string resource_share_arn = 3 [json_name = "resource_share_arn"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsRamResourceAssociation version is 0
message AwsRamResourceAssociation {
  string id = 1;

  string resource_arn = 2 [json_name = "resource_arn"];

  string resource_share_arn = 3 [json_name = "resource_share_arn"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsRamResourceShare version is 0
message AwsRamResourceShare {
  bool allow_external_principals = 1 [json_name = "allow_external_principals"];

  string arn = 2;

  string id = 3;

  string name = 4;

  map<string, string> tags = 5;

  Timeouts timeouts = 6;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsRamResourceShareAccepter version is 0
message AwsRamResourceShareAccepter {
  string id = 1;

  string invitation_arn = 2 [json_name = "invitation_arn"];

  string receiver_account_id = 3 [json_name = "receiver_account_id"];

  repeated string resources = 4;

  string sender_account_id = 5 [json_name = "sender_account_id"];

  string share_arn = 6 [json_name = "share_arn"];

  string share_id = 7 [json_name = "share_id"];

  string share_name = 8 [json_name = "share_name"];

  string status = 9;

  Timeouts timeouts = 10;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 11;

  int32 count = 12;

  terraform.meta.MetaFields.ForEachEntry for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsRdsCluster version is 0
message AwsRdsCluster {
  bool apply_immediately = 1 [json_name = "apply_immediately"];

  string arn = 2;

  repeated string availability_zones = 3 [json_name = "availability_zones"];

  int64 backtrack_window = 4 [json_name = "backtrack_window"];

  int64 backup_retention_period = 5 [json_name = "backup_retention_period"];

  string cluster_identifier = 6 [json_name = "cluster_identifier"];

  string cluster_identifier_prefix = 7 [json_name = "cluster_identifier_prefix"];

  repeated string cluster_members = 8 [json_name = "cluster_members"];

  string cluster_resource_id = 9 [json_name = "cluster_resource_id"];

  bool copy_tags_to_snapshot = 10 [json_name = "copy_tags_to_snapshot"];

  string database_name = 11 [json_name = "database_name"];

  string db_cluster_parameter_group_name = 12 [json_name = "db_cluster_parameter_group_name"];

  string db_subnet_group_name = 13 [json_name = "db_subnet_group_name"];

  bool deletion_protection = 14 [json_name = "deletion_protection"];

  bool enable_http_endpoint = 15 [json_name = "enable_http_endpoint"];

  repeated string enabled_cloudwatch_logs_exports = 16 [json_name = "enabled_cloudwatch_logs_exports"];

  string endpoint = 17;

  string engine = 18;

  string engine_mode = 19 [json_name = "engine_mode"];

  string engine_version = 20 [json_name = "engine_version"];

  string final_snapshot_identifier = 21 [json_name = "final_snapshot_identifier"];

  string global_cluster_identifier = 22 [json_name = "global_cluster_identifier"];

  string hosted_zone_id = 23 [json_name = "hosted_zone_id"];

  bool iam_database_authentication_enabled = 24 [json_name = "iam_database_authentication_enabled"];

  repeated string iam_roles = 25 [json_name = "iam_roles"];

  string id = 26;

  string kms_key_id = 27 [json_name = "kms_key_id"];

  string master_password = 28 [json_name = "master_password"];

  string master_username = 29 [json_name = "master_username"];

  int64 port = 30;

  string preferred_backup_window = 31 [json_name = "preferred_backup_window"];

  string preferred_maintenance_window = 32 [json_name = "preferred_maintenance_window"];

  string reader_endpoint = 33 [json_name = "reader_endpoint"];

  string replication_source_identifier = 34 [json_name = "replication_source_identifier"];

  bool skip_final_snapshot = 35 [json_name = "skip_final_snapshot"];

  string snapshot_identifier = 36 [json_name = "snapshot_identifier"];

  string source_region = 37 [json_name = "source_region"];

  bool storage_encrypted = 38 [json_name = "storage_encrypted"];

  map<string, string> tags = 39;

  repeated string vpc_security_group_ids = 40 [json_name = "vpc_security_group_ids"];

  S3Import s3_import = 41 [json_name = "s3_import"];

  ScalingConfiguration scaling_configuration = 42 [json_name = "scaling_configuration"];

  Timeouts timeouts = 43;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 44;

  int32 count = 45;

  terraform.meta.MetaFields.ForEachEntry for_each = 46;

  string provider = 47;

  terraform.meta.Lifecycle lifecycle = 48;

  message S3Import {
    string bucket_name = 1 [json_name = "bucket_name"];

    string bucket_prefix = 2 [json_name = "bucket_prefix"];

    string ingestion_role = 3 [json_name = "ingestion_role"];

    string source_engine = 4 [json_name = "source_engine"];

    string source_engine_version = 5 [json_name = "source_engine_version"];
  }

  message ScalingConfiguration {
    bool auto_pause = 1 [json_name = "auto_pause"];

    int64 max_capacity = 2 [json_name = "max_capacity"];

    int64 min_capacity = 3 [json_name = "min_capacity"];

    int64 seconds_until_auto_pause = 4 [json_name = "seconds_until_auto_pause"];

    string timeout_action = 5 [json_name = "timeout_action"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsRdsClusterEndpoint version is 0
message AwsRdsClusterEndpoint {
  string arn = 1;

  string cluster_endpoint_identifier = 2 [json_name = "cluster_endpoint_identifier"];

  string cluster_identifier = 3 [json_name = "cluster_identifier"];

  string custom_endpoint_type = 4 [json_name = "custom_endpoint_type"];

  string endpoint = 5;

  repeated string excluded_members = 6 [json_name = "excluded_members"];

  string id = 7;

  repeated string static_members = 8 [json_name = "static_members"];

  map<string, string> tags = 9;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 10;

  int32 count = 11;

  terraform.meta.MetaFields.ForEachEntry for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;
}

//AwsRdsClusterInstance version is 0
message AwsRdsClusterInstance {
  bool apply_immediately = 1 [json_name = "apply_immediately"];

  string arn = 2;

  bool auto_minor_version_upgrade = 3 [json_name = "auto_minor_version_upgrade"];

  string availability_zone = 4 [json_name = "availability_zone"];

  string ca_cert_identifier = 5 [json_name = "ca_cert_identifier"];

  string cluster_identifier = 6 [json_name = "cluster_identifier"];

  bool copy_tags_to_snapshot = 7 [json_name = "copy_tags_to_snapshot"];

  string db_parameter_group_name = 8 [json_name = "db_parameter_group_name"];

  string db_subnet_group_name = 9 [json_name = "db_subnet_group_name"];

  string dbi_resource_id = 10 [json_name = "dbi_resource_id"];

  string endpoint = 11;

  string engine = 12;

  string engine_version = 13 [json_name = "engine_version"];

  string id = 14;

  string identifier = 15;

  string identifier_prefix = 16 [json_name = "identifier_prefix"];

  string instance_class = 17 [json_name = "instance_class"];

  string kms_key_id = 18 [json_name = "kms_key_id"];

  int64 monitoring_interval = 19 [json_name = "monitoring_interval"];

  string monitoring_role_arn = 20 [json_name = "monitoring_role_arn"];

  bool performance_insights_enabled = 21 [json_name = "performance_insights_enabled"];

  string performance_insights_kms_key_id = 22 [json_name = "performance_insights_kms_key_id"];

  int64 port = 23;

  string preferred_backup_window = 24 [json_name = "preferred_backup_window"];

  string preferred_maintenance_window = 25 [json_name = "preferred_maintenance_window"];

  int64 promotion_tier = 26 [json_name = "promotion_tier"];

  bool publicly_accessible = 27 [json_name = "publicly_accessible"];

  bool storage_encrypted = 28 [json_name = "storage_encrypted"];

  map<string, string> tags = 29;

  bool writer = 30;

  Timeouts timeouts = 31;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 32;

  int32 count = 33;

  terraform.meta.MetaFields.ForEachEntry for_each = 34;

  string provider = 35;

  terraform.meta.Lifecycle lifecycle = 36;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsRdsClusterParameterGroup version is 0
message AwsRdsClusterParameterGroup {
  string arn = 1;

  string description = 2;

  string family = 3;

  string id = 4;

  string name = 5;

  string name_prefix = 6 [json_name = "name_prefix"];

  map<string, string> tags = 7;

  Parameter parameter = 8;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message Parameter {
    string apply_method = 1 [json_name = "apply_method"];

    string name = 2;

    string value = 3;
  }
}

//AwsRdsGlobalCluster version is 0
message AwsRdsGlobalCluster {
  string arn = 1;

  string database_name = 2 [json_name = "database_name"];

  bool deletion_protection = 3 [json_name = "deletion_protection"];

  string engine = 4;

  string engine_version = 5 [json_name = "engine_version"];

  string global_cluster_identifier = 6 [json_name = "global_cluster_identifier"];

  string global_cluster_resource_id = 7 [json_name = "global_cluster_resource_id"];

  string id = 8;

  bool storage_encrypted = 9 [json_name = "storage_encrypted"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 10;

  int32 count = 11;

  terraform.meta.MetaFields.ForEachEntry for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;
}

//AwsRedshiftCluster version is 0
message AwsRedshiftCluster {
  bool allow_version_upgrade = 1 [json_name = "allow_version_upgrade"];

  string arn = 2;

  int64 automated_snapshot_retention_period = 3 [json_name = "automated_snapshot_retention_period"];

  string availability_zone = 4 [json_name = "availability_zone"];

  string bucket_name = 5 [json_name = "bucket_name"];

  string cluster_identifier = 6 [json_name = "cluster_identifier"];

  string cluster_parameter_group_name = 7 [json_name = "cluster_parameter_group_name"];

  string cluster_public_key = 8 [json_name = "cluster_public_key"];

  string cluster_revision_number = 9 [json_name = "cluster_revision_number"];

  repeated string cluster_security_groups = 10 [json_name = "cluster_security_groups"];

  string cluster_subnet_group_name = 11 [json_name = "cluster_subnet_group_name"];

  string cluster_type = 12 [json_name = "cluster_type"];

  string cluster_version = 13 [json_name = "cluster_version"];

  string database_name = 14 [json_name = "database_name"];

  string dns_name = 15 [json_name = "dns_name"];

  string elastic_ip = 16 [json_name = "elastic_ip"];

  bool enable_logging = 17 [json_name = "enable_logging"];

  bool encrypted = 18;

  string endpoint = 19;

  bool enhanced_vpc_routing = 20 [json_name = "enhanced_vpc_routing"];

  string final_snapshot_identifier = 21 [json_name = "final_snapshot_identifier"];

  repeated string iam_roles = 22 [json_name = "iam_roles"];

  string id = 23;

  string kms_key_id = 24 [json_name = "kms_key_id"];

  string master_password = 25 [json_name = "master_password"];

  string master_username = 26 [json_name = "master_username"];

  string node_type = 27 [json_name = "node_type"];

  int64 number_of_nodes = 28 [json_name = "number_of_nodes"];

  string owner_account = 29 [json_name = "owner_account"];

  int64 port = 30;

  string preferred_maintenance_window = 31 [json_name = "preferred_maintenance_window"];

  bool publicly_accessible = 32 [json_name = "publicly_accessible"];

  string s3_key_prefix = 33 [json_name = "s3_key_prefix"];

  bool skip_final_snapshot = 34 [json_name = "skip_final_snapshot"];

  string snapshot_cluster_identifier = 35 [json_name = "snapshot_cluster_identifier"];

  string snapshot_identifier = 36 [json_name = "snapshot_identifier"];

  map<string, string> tags = 37;

  repeated string vpc_security_group_ids = 38 [json_name = "vpc_security_group_ids"];

  Logging logging = 39;

  SnapshotCopy snapshot_copy = 40 [json_name = "snapshot_copy"];

  Timeouts timeouts = 41;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 42;

  int32 count = 43;

  terraform.meta.MetaFields.ForEachEntry for_each = 44;

  string provider = 45;

  terraform.meta.Lifecycle lifecycle = 46;

  message Logging {
    string bucket_name = 1 [json_name = "bucket_name"];

    bool enable = 2;

    string s3_key_prefix = 3 [json_name = "s3_key_prefix"];
  }

  message SnapshotCopy {
    string destination_region = 1 [json_name = "destination_region"];

    string grant_name = 2 [json_name = "grant_name"];

    int64 retention_period = 3 [json_name = "retention_period"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsRedshiftEventSubscription version is 0
message AwsRedshiftEventSubscription {
  string arn = 1;

  string customer_aws_id = 2 [json_name = "customer_aws_id"];

  bool enabled = 3;

  repeated string event_categories = 4 [json_name = "event_categories"];

  string id = 5;

  string name = 6;

  string severity = 7;

  string sns_topic_arn = 8 [json_name = "sns_topic_arn"];

  repeated string source_ids = 9 [json_name = "source_ids"];

  string source_type = 10 [json_name = "source_type"];

  string status = 11;

  map<string, string> tags = 12;

  Timeouts timeouts = 13;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 14;

  int32 count = 15;

  terraform.meta.MetaFields.ForEachEntry for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsRedshiftParameterGroup version is 0
message AwsRedshiftParameterGroup {
  string arn = 1;

  string description = 2;

  string family = 3;

  string id = 4;

  string name = 5;

  map<string, string> tags = 6;

  Parameter parameter = 7;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message Parameter {
    string name = 1;

    string value = 2;
  }
}

//AwsRedshiftSecurityGroup version is 0
message AwsRedshiftSecurityGroup {
  string description = 1;

  string id = 2;

  string name = 3;

  Ingress ingress = 4;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message Ingress {
    string cidr = 1;

    string security_group_name = 2 [json_name = "security_group_name"];

    string security_group_owner_id = 3 [json_name = "security_group_owner_id"];
  }
}

//AwsRedshiftSnapshotCopyGrant version is 0
message AwsRedshiftSnapshotCopyGrant {
  string arn = 1;

  string id = 2;

  string kms_key_id = 3 [json_name = "kms_key_id"];

  string snapshot_copy_grant_name = 4 [json_name = "snapshot_copy_grant_name"];

  map<string, string> tags = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsRedshiftSnapshotSchedule version is 0
message AwsRedshiftSnapshotSchedule {
  string arn = 1;

  repeated string definitions = 2;

  string description = 3;

  bool force_destroy = 4 [json_name = "force_destroy"];

  string id = 5;

  string identifier = 6;

  string identifier_prefix = 7 [json_name = "identifier_prefix"];

  map<string, string> tags = 8;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsRedshiftSnapshotScheduleAssociation version is 0
message AwsRedshiftSnapshotScheduleAssociation {
  string cluster_identifier = 1 [json_name = "cluster_identifier"];

  string id = 2;

  string schedule_identifier = 3 [json_name = "schedule_identifier"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsRedshiftSubnetGroup version is 0
message AwsRedshiftSubnetGroup {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  repeated string subnet_ids = 5 [json_name = "subnet_ids"];

  map<string, string> tags = 6;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsResourcegroupsGroup version is 0
message AwsResourcegroupsGroup {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  map<string, string> tags = 5;

  ResourceQuery resource_query = 6 [json_name = "resource_query"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message ResourceQuery {
    string query = 1;

    string type = 2;
  }
}

//AwsRoute version is 0
message AwsRoute {
  string destination_cidr_block = 1 [json_name = "destination_cidr_block"];

  string destination_ipv6_cidr_block = 2 [json_name = "destination_ipv6_cidr_block"];

  string destination_prefix_list_id = 3 [json_name = "destination_prefix_list_id"];

  string egress_only_gateway_id = 4 [json_name = "egress_only_gateway_id"];

  string gateway_id = 5 [json_name = "gateway_id"];

  string id = 6;

  string instance_id = 7 [json_name = "instance_id"];

  string instance_owner_id = 8 [json_name = "instance_owner_id"];

  string nat_gateway_id = 9 [json_name = "nat_gateway_id"];

  string network_interface_id = 10 [json_name = "network_interface_id"];

  string origin = 11;

  string route_table_id = 12 [json_name = "route_table_id"];

  string state = 13;

  string transit_gateway_id = 14 [json_name = "transit_gateway_id"];

  string vpc_peering_connection_id = 15 [json_name = "vpc_peering_connection_id"];

  Timeouts timeouts = 16;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 17;

  int32 count = 18;

  terraform.meta.MetaFields.ForEachEntry for_each = 19;

  string provider = 20;

  terraform.meta.Lifecycle lifecycle = 21;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsRoute53DelegationSet version is 0
message AwsRoute53DelegationSet {
  string id = 1;

  repeated string name_servers = 2 [json_name = "name_servers"];

  string reference_name = 3 [json_name = "reference_name"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsRoute53HealthCheck version is 0
message AwsRoute53HealthCheck {
  int64 child_health_threshold = 1 [json_name = "child_health_threshold"];

  repeated string child_healthchecks = 2 [json_name = "child_healthchecks"];

  string cloudwatch_alarm_name = 3 [json_name = "cloudwatch_alarm_name"];

  string cloudwatch_alarm_region = 4 [json_name = "cloudwatch_alarm_region"];

  bool enable_sni = 5 [json_name = "enable_sni"];

  int64 failure_threshold = 6 [json_name = "failure_threshold"];

  string fqdn = 7;

  string id = 8;

  string insufficient_data_health_status = 9 [json_name = "insufficient_data_health_status"];

  bool invert_healthcheck = 10 [json_name = "invert_healthcheck"];

  string ip_address = 11 [json_name = "ip_address"];

  bool measure_latency = 12 [json_name = "measure_latency"];

  int64 port = 13;

  string reference_name = 14 [json_name = "reference_name"];

  repeated string regions = 15;

  int64 request_interval = 16 [json_name = "request_interval"];

  string resource_path = 17 [json_name = "resource_path"];

  string search_string = 18 [json_name = "search_string"];

  map<string, string> tags = 19;

  string type = 20;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 21;

  int32 count = 22;

  terraform.meta.MetaFields.ForEachEntry for_each = 23;

  string provider = 24;

  terraform.meta.Lifecycle lifecycle = 25;
}

//AwsRoute53QueryLog version is 0
message AwsRoute53QueryLog {
  string cloudwatch_log_group_arn = 1 [json_name = "cloudwatch_log_group_arn"];

  string id = 2;

  string zone_id = 3 [json_name = "zone_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsRoute53Record version is 2
message AwsRoute53Record {
  bool allow_overwrite = 1 [json_name = "allow_overwrite"];

  string fqdn = 2;

  string health_check_id = 3 [json_name = "health_check_id"];

  string id = 4;

  bool multivalue_answer_routing_policy = 5 [json_name = "multivalue_answer_routing_policy"];

  string name = 6;

  repeated string records = 7;

  string set_identifier = 8 [json_name = "set_identifier"];

  int64 ttl = 9;

  string type = 10;

  string zone_id = 11 [json_name = "zone_id"];

  LatencyRoutingPolicy latency_routing_policy = 12 [json_name = "latency_routing_policy"];

  WeightedRoutingPolicy weighted_routing_policy = 13 [json_name = "weighted_routing_policy"];

  Alias alias = 14;

  FailoverRoutingPolicy failover_routing_policy = 15 [json_name = "failover_routing_policy"];

  GeolocationRoutingPolicy geolocation_routing_policy = 16 [json_name = "geolocation_routing_policy"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 17;

  int32 count = 18;

  terraform.meta.MetaFields.ForEachEntry for_each = 19;

  string provider = 20;

  terraform.meta.Lifecycle lifecycle = 21;

  message LatencyRoutingPolicy {
    string region = 1;
  }

  message WeightedRoutingPolicy {
    int64 weight = 1;
  }

  message Alias {
    bool evaluate_target_health = 1 [json_name = "evaluate_target_health"];

    string name = 2;

    string zone_id = 3 [json_name = "zone_id"];
  }

  message FailoverRoutingPolicy {
    string type = 1;
  }

  message GeolocationRoutingPolicy {
    string continent = 1;

    string country = 2;

    string subdivision = 3;
  }
}

//AwsRoute53ResolverEndpoint version is 0
message AwsRoute53ResolverEndpoint {
  string arn = 1;

  string direction = 2;

  string host_vpc_id = 3 [json_name = "host_vpc_id"];

  string id = 4;

  string name = 5;

  repeated string security_group_ids = 6 [json_name = "security_group_ids"];

  map<string, string> tags = 7;

  IpAddress ip_address = 8 [json_name = "ip_address"];

  Timeouts timeouts = 9;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 10;

  int32 count = 11;

  terraform.meta.MetaFields.ForEachEntry for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message IpAddress {
    string ip = 1;

    string ip_id = 2 [json_name = "ip_id"];

    string subnet_id = 3 [json_name = "subnet_id"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsRoute53ResolverRule version is 0
message AwsRoute53ResolverRule {
  string arn = 1;

  string domain_name = 2 [json_name = "domain_name"];

  string id = 3;

  string name = 4;

  string owner_id = 5 [json_name = "owner_id"];

  string resolver_endpoint_id = 6 [json_name = "resolver_endpoint_id"];

  string rule_type = 7 [json_name = "rule_type"];

  string share_status = 8 [json_name = "share_status"];

  map<string, string> tags = 9;

  TargetIp target_ip = 10 [json_name = "target_ip"];

  Timeouts timeouts = 11;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 12;

  int32 count = 13;

  terraform.meta.MetaFields.ForEachEntry for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message TargetIp {
    string ip = 1;

    int64 port = 2;
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsRoute53ResolverRuleAssociation version is 0
message AwsRoute53ResolverRuleAssociation {
  string id = 1;

  string name = 2;

  string resolver_rule_id = 3 [json_name = "resolver_rule_id"];

  string vpc_id = 4 [json_name = "vpc_id"];

  Timeouts timeouts = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsRoute53Zone version is 0
message AwsRoute53Zone {
  string comment = 1;

  string delegation_set_id = 2 [json_name = "delegation_set_id"];

  bool force_destroy = 3 [json_name = "force_destroy"];

  string id = 4;

  string name = 5;

  repeated string name_servers = 6 [json_name = "name_servers"];

  map<string, string> tags = 7;

  string vpc_id = 8 [json_name = "vpc_id"];

  string vpc_region = 9 [json_name = "vpc_region"];

  string zone_id = 10 [json_name = "zone_id"];

  Vpc vpc = 11;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 12;

  int32 count = 13;

  terraform.meta.MetaFields.ForEachEntry for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message Vpc {
    string vpc_id = 1 [json_name = "vpc_id"];

    string vpc_region = 2 [json_name = "vpc_region"];
  }
}

//AwsRoute53ZoneAssociation version is 0
message AwsRoute53ZoneAssociation {
  string id = 1;

  string vpc_id = 2 [json_name = "vpc_id"];

  string vpc_region = 3 [json_name = "vpc_region"];

  string zone_id = 4 [json_name = "zone_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsRouteTable version is 0
message AwsRouteTable {
  string id = 1;

  string owner_id = 2 [json_name = "owner_id"];

  repeated string propagating_vgws = 3 [json_name = "propagating_vgws"];

  repeated Route route = 4;

  map<string, string> tags = 5;

  string vpc_id = 6 [json_name = "vpc_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message Route {
    //cidr_block: string
    string cidr_block = 1 [json_name = "cidr_block"];

    //egress_only_gateway_id: string
    string egress_only_gateway_id = 2 [json_name = "egress_only_gateway_id"];

    //gateway_id: string
    string gateway_id = 3 [json_name = "gateway_id"];

    //instance_id: string
    string instance_id = 4 [json_name = "instance_id"];

    //ipv6_cidr_block: string
    string ipv6_cidr_block = 5 [json_name = "ipv6_cidr_block"];

    //nat_gateway_id: string
    string nat_gateway_id = 6 [json_name = "nat_gateway_id"];

    //network_interface_id: string
    string network_interface_id = 7 [json_name = "network_interface_id"];

    //transit_gateway_id: string
    string transit_gateway_id = 8 [json_name = "transit_gateway_id"];

    //vpc_peering_connection_id: string
    string vpc_peering_connection_id = 9 [json_name = "vpc_peering_connection_id"];
  }
}

//AwsRouteTableAssociation version is 0
message AwsRouteTableAssociation {
  string gateway_id = 1 [json_name = "gateway_id"];

  string id = 2;

  string route_table_id = 3 [json_name = "route_table_id"];

  string subnet_id = 4 [json_name = "subnet_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsS3AccessPoint version is 0
message AwsS3AccessPoint {
  string account_id = 1 [json_name = "account_id"];

  string arn = 2;

  string bucket = 3;

  string domain_name = 4 [json_name = "domain_name"];

  bool has_public_access_policy = 5 [json_name = "has_public_access_policy"];

  string id = 6;

  string name = 7;

  string network_origin = 8 [json_name = "network_origin"];

  string policy = 9;

  PublicAccessBlockConfiguration public_access_block_configuration = 10 [json_name = "public_access_block_configuration"];

  VpcConfiguration vpc_configuration = 11 [json_name = "vpc_configuration"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 12;

  int32 count = 13;

  terraform.meta.MetaFields.ForEachEntry for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message PublicAccessBlockConfiguration {
    bool block_public_acls = 1 [json_name = "block_public_acls"];

    bool block_public_policy = 2 [json_name = "block_public_policy"];

    bool ignore_public_acls = 3 [json_name = "ignore_public_acls"];

    bool restrict_public_buckets = 4 [json_name = "restrict_public_buckets"];
  }

  message VpcConfiguration {
    string vpc_id = 1 [json_name = "vpc_id"];
  }
}

//AwsS3AccountPublicAccessBlock version is 0
message AwsS3AccountPublicAccessBlock {
  string account_id = 1 [json_name = "account_id"];

  bool block_public_acls = 2 [json_name = "block_public_acls"];

  bool block_public_policy = 3 [json_name = "block_public_policy"];

  string id = 4;

  bool ignore_public_acls = 5 [json_name = "ignore_public_acls"];

  bool restrict_public_buckets = 6 [json_name = "restrict_public_buckets"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsS3Bucket version is 0
message AwsS3Bucket {
  string acceleration_status = 1 [json_name = "acceleration_status"];

  string acl = 2;

  string arn = 3;

  string bucket = 4;

  string bucket_domain_name = 5 [json_name = "bucket_domain_name"];

  string bucket_prefix = 6 [json_name = "bucket_prefix"];

  string bucket_regional_domain_name = 7 [json_name = "bucket_regional_domain_name"];

  bool force_destroy = 8 [json_name = "force_destroy"];

  string hosted_zone_id = 9 [json_name = "hosted_zone_id"];

  string id = 10;

  string policy = 11;

  string region = 12;

  string request_payer = 13 [json_name = "request_payer"];

  map<string, string> tags = 14;

  string website_domain = 15 [json_name = "website_domain"];

  string website_endpoint = 16 [json_name = "website_endpoint"];

  Website website = 17;

  Grant grant = 18;

  ServerSideEncryptionConfiguration server_side_encryption_configuration = 19 [json_name = "server_side_encryption_configuration"];

  Versioning versioning = 20;

  ObjectLockConfiguration object_lock_configuration = 21 [json_name = "object_lock_configuration"];

  ReplicationConfiguration replication_configuration = 22 [json_name = "replication_configuration"];

  CorsRule cors_rule = 23 [json_name = "cors_rule"];

  LifecycleRule lifecycle_rule = 24 [json_name = "lifecycle_rule"];

  Logging logging = 25;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 26;

  int32 count = 27;

  terraform.meta.MetaFields.ForEachEntry for_each = 28;

  string provider = 29;

  terraform.meta.Lifecycle lifecycle = 30;

  message Website {
    string error_document = 1 [json_name = "error_document"];

    string index_document = 2 [json_name = "index_document"];

    string redirect_all_requests_to = 3 [json_name = "redirect_all_requests_to"];

    string routing_rules = 4 [json_name = "routing_rules"];
  }

  message Grant {
    string id = 1;

    repeated string permissions = 2;

    string type = 3;

    string uri = 4;
  }

  message ServerSideEncryptionConfiguration {
    Rule rule = 1;

    message Rule {
      ApplyServerSideEncryptionByDefault apply_server_side_encryption_by_default = 1 [json_name = "apply_server_side_encryption_by_default"];

      message ApplyServerSideEncryptionByDefault {
        string kms_master_key_id = 1 [json_name = "kms_master_key_id"];

        string sse_algorithm = 2 [json_name = "sse_algorithm"];
      }
    }
  }

  message Versioning {
    bool enabled = 1;

    bool mfa_delete = 2 [json_name = "mfa_delete"];
  }

  message ObjectLockConfiguration {
    string object_lock_enabled = 1 [json_name = "object_lock_enabled"];

    Rule rule = 2;

    message Rule {
      DefaultRetention default_retention = 1 [json_name = "default_retention"];

      message DefaultRetention {
        int64 days = 1;

        string mode = 2;

        int64 years = 3;
      }
    }
  }

  message ReplicationConfiguration {
    string role = 1;

    Rules rules = 2;

    message Rules {
      string id = 1;

      string prefix = 2;

      int64 priority = 3;

      string status = 4;

      SourceSelectionCriteria source_selection_criteria = 5 [json_name = "source_selection_criteria"];

      Destination destination = 6;

      Filter filter = 7;

      message SourceSelectionCriteria {
        SseKmsEncryptedObjects sse_kms_encrypted_objects = 1 [json_name = "sse_kms_encrypted_objects"];

        message SseKmsEncryptedObjects {
          bool enabled = 1;
        }
      }

      message Destination {
        string account_id = 1 [json_name = "account_id"];

        string bucket = 2;

        string replica_kms_key_id = 3 [json_name = "replica_kms_key_id"];

        string storage_class = 4 [json_name = "storage_class"];

        AccessControlTranslation access_control_translation = 5 [json_name = "access_control_translation"];

        message AccessControlTranslation {
          string owner = 1;
        }
      }

      message Filter {
        string prefix = 1;

        map<string, string> tags = 2;
      }
    }
  }

  message CorsRule {
    repeated string allowed_headers = 1 [json_name = "allowed_headers"];

    repeated string allowed_methods = 2 [json_name = "allowed_methods"];

    repeated string allowed_origins = 3 [json_name = "allowed_origins"];

    repeated string expose_headers = 4 [json_name = "expose_headers"];

    int64 max_age_seconds = 5 [json_name = "max_age_seconds"];
  }

  message LifecycleRule {
    int64 abort_incomplete_multipart_upload_days = 1 [json_name = "abort_incomplete_multipart_upload_days"];

    bool enabled = 2;

    string id = 3;

    string prefix = 4;

    map<string, string> tags = 5;

    NoncurrentVersionTransition noncurrent_version_transition = 6 [json_name = "noncurrent_version_transition"];

    Transition transition = 7;

    Expiration expiration = 8;

    NoncurrentVersionExpiration noncurrent_version_expiration = 9 [json_name = "noncurrent_version_expiration"];

    message NoncurrentVersionTransition {
      int64 days = 1;

      string storage_class = 2 [json_name = "storage_class"];
    }

    message Transition {
      string date = 1;

      int64 days = 2;

      string storage_class = 3 [json_name = "storage_class"];
    }

    message Expiration {
      string date = 1;

      int64 days = 2;

      bool expired_object_delete_marker = 3 [json_name = "expired_object_delete_marker"];
    }

    message NoncurrentVersionExpiration {
      int64 days = 1;
    }
  }

  message Logging {
    string target_bucket = 1 [json_name = "target_bucket"];

    string target_prefix = 2 [json_name = "target_prefix"];
  }
}

//AwsS3BucketAnalyticsConfiguration version is 0
message AwsS3BucketAnalyticsConfiguration {
  string bucket = 1;

  string id = 2;

  string name = 3;

  Filter filter = 4;

  StorageClassAnalysis storage_class_analysis = 5 [json_name = "storage_class_analysis"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message Filter {
    string prefix = 1;

    map<string, string> tags = 2;
  }

  message StorageClassAnalysis {
    DataExport data_export = 1 [json_name = "data_export"];

    message DataExport {
      string output_schema_version = 1 [json_name = "output_schema_version"];

      Destination destination = 2;

      message Destination {
        S3BucketDestination s3_bucket_destination = 1 [json_name = "s3_bucket_destination"];

        message S3BucketDestination {
          string bucket_account_id = 1 [json_name = "bucket_account_id"];

          string bucket_arn = 2 [json_name = "bucket_arn"];

          string format = 3;

          string prefix = 4;
        }
      }
    }
  }
}

//AwsS3BucketInventory version is 0
message AwsS3BucketInventory {
  string bucket = 1;

  bool enabled = 2;

  string id = 3;

  string included_object_versions = 4 [json_name = "included_object_versions"];

  string name = 5;

  repeated string optional_fields = 6 [json_name = "optional_fields"];

  Destination destination = 7;

  Filter filter = 8;

  Schedule schedule = 9;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 10;

  int32 count = 11;

  terraform.meta.MetaFields.ForEachEntry for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message Destination {
    Bucket bucket = 1;

    message Bucket {
      string account_id = 1 [json_name = "account_id"];

      string bucket_arn = 2 [json_name = "bucket_arn"];

      string format = 3;

      string prefix = 4;

      Encryption encryption = 5;

      message Encryption {
        SseS3 sse_s3 = 1 [json_name = "sse_s3"];

        SseKms sse_kms = 2 [json_name = "sse_kms"];

        message SseS3 {
        }

        message SseKms {
          string key_id = 1 [json_name = "key_id"];
        }
      }
    }
  }

  message Filter {
    string prefix = 1;
  }

  message Schedule {
    string frequency = 1;
  }
}

//AwsS3BucketMetric version is 0
message AwsS3BucketMetric {
  string bucket = 1;

  string id = 2;

  string name = 3;

  Filter filter = 4;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message Filter {
    string prefix = 1;

    map<string, string> tags = 2;
  }
}

//AwsS3BucketNotification version is 0
message AwsS3BucketNotification {
  string bucket = 1;

  string id = 2;

  LambdaFunction lambda_function = 3 [json_name = "lambda_function"];

  Queue queue = 4;

  Topic topic = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message LambdaFunction {
    repeated string events = 1;

    string filter_prefix = 2 [json_name = "filter_prefix"];

    string filter_suffix = 3 [json_name = "filter_suffix"];

    string id = 4;

    string lambda_function_arn = 5 [json_name = "lambda_function_arn"];
  }

  message Queue {
    repeated string events = 1;

    string filter_prefix = 2 [json_name = "filter_prefix"];

    string filter_suffix = 3 [json_name = "filter_suffix"];

    string id = 4;

    string queue_arn = 5 [json_name = "queue_arn"];
  }

  message Topic {
    repeated string events = 1;

    string filter_prefix = 2 [json_name = "filter_prefix"];

    string filter_suffix = 3 [json_name = "filter_suffix"];

    string id = 4;

    string topic_arn = 5 [json_name = "topic_arn"];
  }
}

//AwsS3BucketObject version is 0
message AwsS3BucketObject {
  string acl = 1;

  string bucket = 2;

  string cache_control = 3 [json_name = "cache_control"];

  string content = 4;

  string content_base64 = 5 [json_name = "content_base64"];

  string content_disposition = 6 [json_name = "content_disposition"];

  string content_encoding = 7 [json_name = "content_encoding"];

  string content_language = 8 [json_name = "content_language"];

  string content_type = 9 [json_name = "content_type"];

  string etag = 10;

  bool force_destroy = 11 [json_name = "force_destroy"];

  string id = 12;

  string key = 13;

  string kms_key_id = 14 [json_name = "kms_key_id"];

  map<string, string> metadata = 15;

  string object_lock_legal_hold_status = 16 [json_name = "object_lock_legal_hold_status"];

  string object_lock_mode = 17 [json_name = "object_lock_mode"];

  string object_lock_retain_until_date = 18 [json_name = "object_lock_retain_until_date"];

  string server_side_encryption = 19 [json_name = "server_side_encryption"];

  string source = 20;

  string storage_class = 21 [json_name = "storage_class"];

  map<string, string> tags = 22;

  string version_id = 23 [json_name = "version_id"];

  string website_redirect = 24 [json_name = "website_redirect"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 25;

  int32 count = 26;

  terraform.meta.MetaFields.ForEachEntry for_each = 27;

  string provider = 28;

  terraform.meta.Lifecycle lifecycle = 29;
}

//AwsS3BucketPolicy version is 0
message AwsS3BucketPolicy {
  string bucket = 1;

  string id = 2;

  string policy = 3;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsS3BucketPublicAccessBlock version is 0
message AwsS3BucketPublicAccessBlock {
  bool block_public_acls = 1 [json_name = "block_public_acls"];

  bool block_public_policy = 2 [json_name = "block_public_policy"];

  string bucket = 3;

  string id = 4;

  bool ignore_public_acls = 5 [json_name = "ignore_public_acls"];

  bool restrict_public_buckets = 6 [json_name = "restrict_public_buckets"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsSagemakerEndpoint version is 0
message AwsSagemakerEndpoint {
  string arn = 1;

  string endpoint_config_name = 2 [json_name = "endpoint_config_name"];

  string id = 3;

  string name = 4;

  map<string, string> tags = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsSagemakerEndpointConfiguration version is 0
message AwsSagemakerEndpointConfiguration {
  string arn = 1;

  string id = 2;

  string kms_key_arn = 3 [json_name = "kms_key_arn"];

  string name = 4;

  map<string, string> tags = 5;

  ProductionVariants production_variants = 6 [json_name = "production_variants"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message ProductionVariants {
    string accelerator_type = 1 [json_name = "accelerator_type"];

    int64 initial_instance_count = 2 [json_name = "initial_instance_count"];

    int64 initial_variant_weight = 3 [json_name = "initial_variant_weight"];

    string instance_type = 4 [json_name = "instance_type"];

    string model_name = 5 [json_name = "model_name"];

    string variant_name = 6 [json_name = "variant_name"];
  }
}

//AwsSagemakerModel version is 0
message AwsSagemakerModel {
  string arn = 1;

  bool enable_network_isolation = 2 [json_name = "enable_network_isolation"];

  string execution_role_arn = 3 [json_name = "execution_role_arn"];

  string id = 4;

  string name = 5;

  map<string, string> tags = 6;

  PrimaryContainer primary_container = 7 [json_name = "primary_container"];

  VpcConfig vpc_config = 8 [json_name = "vpc_config"];

  Container container = 9;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 10;

  int32 count = 11;

  terraform.meta.MetaFields.ForEachEntry for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message PrimaryContainer {
    string container_hostname = 1 [json_name = "container_hostname"];

    map<string, string> environment = 2;

    string image = 3;

    string model_data_url = 4 [json_name = "model_data_url"];
  }

  message VpcConfig {
    repeated string security_group_ids = 1 [json_name = "security_group_ids"];

    repeated string subnets = 2;
  }

  message Container {
    string container_hostname = 1 [json_name = "container_hostname"];

    map<string, string> environment = 2;

    string image = 3;

    string model_data_url = 4 [json_name = "model_data_url"];
  }
}

//AwsSagemakerNotebookInstance version is 0
message AwsSagemakerNotebookInstance {
  string arn = 1;

  string direct_internet_access = 2 [json_name = "direct_internet_access"];

  string id = 3;

  string instance_type = 4 [json_name = "instance_type"];

  string kms_key_id = 5 [json_name = "kms_key_id"];

  string lifecycle_config_name = 6 [json_name = "lifecycle_config_name"];

  string name = 7;

  string role_arn = 8 [json_name = "role_arn"];

  repeated string security_groups = 9 [json_name = "security_groups"];

  string subnet_id = 10 [json_name = "subnet_id"];

  map<string, string> tags = 11;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 12;

  int32 count = 13;

  terraform.meta.MetaFields.ForEachEntry for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;
}

//AwsSagemakerNotebookInstanceLifecycleConfiguration version is 0
message AwsSagemakerNotebookInstanceLifecycleConfiguration {
  string arn = 1;

  string id = 2;

  string name = 3;

  string on_create = 4 [json_name = "on_create"];

  string on_start = 5 [json_name = "on_start"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsSecretsmanagerSecret version is 0
message AwsSecretsmanagerSecret {
  string arn = 1;

  string description = 2;

  string id = 3;

  string kms_key_id = 4 [json_name = "kms_key_id"];

  string name = 5;

  string name_prefix = 6 [json_name = "name_prefix"];

  string policy = 7;

  int64 recovery_window_in_days = 8 [json_name = "recovery_window_in_days"];

  bool rotation_enabled = 9 [json_name = "rotation_enabled"];

  string rotation_lambda_arn = 10 [json_name = "rotation_lambda_arn"];

  map<string, string> tags = 11;

  RotationRules rotation_rules = 12 [json_name = "rotation_rules"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 13;

  int32 count = 14;

  terraform.meta.MetaFields.ForEachEntry for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message RotationRules {
    int64 automatically_after_days = 1 [json_name = "automatically_after_days"];
  }
}

//AwsSecretsmanagerSecretVersion version is 0
message AwsSecretsmanagerSecretVersion {
  string arn = 1;

  string id = 2;

  string secret_binary = 3 [json_name = "secret_binary"];

  string secret_id = 4 [json_name = "secret_id"];

  string secret_string = 5 [json_name = "secret_string"];

  string version_id = 6 [json_name = "version_id"];

  repeated string version_stages = 7 [json_name = "version_stages"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsSecurityGroup version is 1
message AwsSecurityGroup {
  string arn = 1;

  string description = 2;

  repeated Egress egress = 3;

  string id = 4;

  repeated Ingress ingress = 5;

  string name = 6;

  string name_prefix = 7 [json_name = "name_prefix"];

  string owner_id = 8 [json_name = "owner_id"];

  bool revoke_rules_on_delete = 9 [json_name = "revoke_rules_on_delete"];

  map<string, string> tags = 10;

  string vpc_id = 11 [json_name = "vpc_id"];

  Timeouts timeouts = 12;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 13;

  int32 count = 14;

  terraform.meta.MetaFields.ForEachEntry for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message Egress {
    //cidr_blocks: list of string
    repeated string cidr_blocks = 1 [json_name = "cidr_blocks"];

    //description: string
    string description = 2;

    //from_port: number
    int64 from_port = 3 [json_name = "from_port"];

    //ipv6_cidr_blocks: list of string
    repeated string ipv6_cidr_blocks = 4 [json_name = "ipv6_cidr_blocks"];

    //prefix_list_ids: list of string
    repeated string prefix_list_ids = 5 [json_name = "prefix_list_ids"];

    //protocol: string
    string protocol = 6;

    //security_groups: set of string
    repeated string security_groups = 7 [json_name = "security_groups"];

    //self: bool
    bool self = 8;

    //to_port: number
    int64 to_port = 9 [json_name = "to_port"];
  }

  message Ingress {
    //cidr_blocks: list of string
    repeated string cidr_blocks = 1 [json_name = "cidr_blocks"];

    //description: string
    string description = 2;

    //from_port: number
    int64 from_port = 3 [json_name = "from_port"];

    //ipv6_cidr_blocks: list of string
    repeated string ipv6_cidr_blocks = 4 [json_name = "ipv6_cidr_blocks"];

    //prefix_list_ids: list of string
    repeated string prefix_list_ids = 5 [json_name = "prefix_list_ids"];

    //protocol: string
    string protocol = 6;

    //security_groups: set of string
    repeated string security_groups = 7 [json_name = "security_groups"];

    //self: bool
    bool self = 8;

    //to_port: number
    int64 to_port = 9 [json_name = "to_port"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsSecurityGroupRule version is 2
message AwsSecurityGroupRule {
  repeated string cidr_blocks = 1 [json_name = "cidr_blocks"];

  string description = 2;

  int64 from_port = 3 [json_name = "from_port"];

  string id = 4;

  repeated string ipv6_cidr_blocks = 5 [json_name = "ipv6_cidr_blocks"];

  repeated string prefix_list_ids = 6 [json_name = "prefix_list_ids"];

  string protocol = 7;

  string security_group_id = 8 [json_name = "security_group_id"];

  bool self = 9;

  string source_security_group_id = 10 [json_name = "source_security_group_id"];

  int64 to_port = 11 [json_name = "to_port"];

  //Type of rule, ingress (inbound) or egress (outbound).
  string type = 12;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 13;

  int32 count = 14;

  terraform.meta.MetaFields.ForEachEntry for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;
}

//AwsSecurityhubAccount version is 0
message AwsSecurityhubAccount {
  string id = 1;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 2;

  int32 count = 3;

  terraform.meta.MetaFields.ForEachEntry for_each = 4;

  string provider = 5;

  terraform.meta.Lifecycle lifecycle = 6;
}

//AwsSecurityhubMember version is 0
message AwsSecurityhubMember {
  string account_id = 1 [json_name = "account_id"];

  string email = 2;

  string id = 3;

  bool invite = 4;

  string master_id = 5 [json_name = "master_id"];

  string member_status = 6 [json_name = "member_status"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsSecurityhubProductSubscription version is 0
message AwsSecurityhubProductSubscription {
  string arn = 1;

  string id = 2;

  string product_arn = 3 [json_name = "product_arn"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsSecurityhubStandardsSubscription version is 0
message AwsSecurityhubStandardsSubscription {
  string id = 1;

  string standards_arn = 2 [json_name = "standards_arn"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 3;

  int32 count = 4;

  terraform.meta.MetaFields.ForEachEntry for_each = 5;

  string provider = 6;

  terraform.meta.Lifecycle lifecycle = 7;
}

//AwsServiceDiscoveryHttpNamespace version is 0
message AwsServiceDiscoveryHttpNamespace {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsServiceDiscoveryPrivateDnsNamespace version is 0
message AwsServiceDiscoveryPrivateDnsNamespace {
  string arn = 1;

  string description = 2;

  string hosted_zone = 3 [json_name = "hosted_zone"];

  string id = 4;

  string name = 5;

  string vpc = 6;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsServiceDiscoveryPublicDnsNamespace version is 0
message AwsServiceDiscoveryPublicDnsNamespace {
  string arn = 1;

  string description = 2;

  string hosted_zone = 3 [json_name = "hosted_zone"];

  string id = 4;

  string name = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsServiceDiscoveryService version is 0
message AwsServiceDiscoveryService {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  string namespace_id = 5 [json_name = "namespace_id"];

  HealthCheckConfig health_check_config = 6 [json_name = "health_check_config"];

  HealthCheckCustomConfig health_check_custom_config = 7 [json_name = "health_check_custom_config"];

  DnsConfig dns_config = 8 [json_name = "dns_config"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message HealthCheckConfig {
    int64 failure_threshold = 1 [json_name = "failure_threshold"];

    string resource_path = 2 [json_name = "resource_path"];

    string type = 3;
  }

  message HealthCheckCustomConfig {
    int64 failure_threshold = 1 [json_name = "failure_threshold"];
  }

  message DnsConfig {
    string namespace_id = 1 [json_name = "namespace_id"];

    string routing_policy = 2 [json_name = "routing_policy"];

    DnsRecords dns_records = 3 [json_name = "dns_records"];

    message DnsRecords {
      int64 ttl = 1;

      string type = 2;
    }
  }
}

//AwsServicecatalogPortfolio version is 0
message AwsServicecatalogPortfolio {
  string arn = 1;

  string created_time = 2 [json_name = "created_time"];

  string description = 3;

  string id = 4;

  string name = 5;

  string provider_name = 6 [json_name = "provider_name"];

  map<string, string> tags = 7;

  Timeouts timeouts = 8;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsServicequotasServiceQuota version is 0
message AwsServicequotasServiceQuota {
  bool adjustable = 1;

  string arn = 2;

  int64 default_value = 3 [json_name = "default_value"];

  string id = 4;

  string quota_code = 5 [json_name = "quota_code"];

  string quota_name = 6 [json_name = "quota_name"];

  string request_id = 7 [json_name = "request_id"];

  string request_status = 8 [json_name = "request_status"];

  string service_code = 9 [json_name = "service_code"];

  string service_name = 10 [json_name = "service_name"];

  int64 value = 11;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 12;

  int32 count = 13;

  terraform.meta.MetaFields.ForEachEntry for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;
}

//AwsSesActiveReceiptRuleSet version is 0
message AwsSesActiveReceiptRuleSet {
  string id = 1;

  string rule_set_name = 2 [json_name = "rule_set_name"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 3;

  int32 count = 4;

  terraform.meta.MetaFields.ForEachEntry for_each = 5;

  string provider = 6;

  terraform.meta.Lifecycle lifecycle = 7;
}

//AwsSesConfigurationSet version is 0
message AwsSesConfigurationSet {
  string id = 1;

  string name = 2;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 3;

  int32 count = 4;

  terraform.meta.MetaFields.ForEachEntry for_each = 5;

  string provider = 6;

  terraform.meta.Lifecycle lifecycle = 7;
}

//AwsSesDomainDkim version is 0
message AwsSesDomainDkim {
  repeated string dkim_tokens = 1 [json_name = "dkim_tokens"];

  string domain = 2;

  string id = 3;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsSesDomainIdentity version is 0
message AwsSesDomainIdentity {
  string arn = 1;

  string domain = 2;

  string id = 3;

  string verification_token = 4 [json_name = "verification_token"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsSesDomainIdentityVerification version is 0
message AwsSesDomainIdentityVerification {
  string arn = 1;

  string domain = 2;

  string id = 3;

  Timeouts timeouts = 4;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message Timeouts {
    string create = 1;
  }
}

//AwsSesDomainMailFrom version is 0
message AwsSesDomainMailFrom {
  string behavior_on_mx_failure = 1 [json_name = "behavior_on_mx_failure"];

  string domain = 2;

  string id = 3;

  string mail_from_domain = 4 [json_name = "mail_from_domain"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsSesEmailIdentity version is 0
message AwsSesEmailIdentity {
  string arn = 1;

  string email = 2;

  string id = 3;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsSesEventDestination version is 0
message AwsSesEventDestination {
  string configuration_set_name = 1 [json_name = "configuration_set_name"];

  bool enabled = 2;

  string id = 3;

  repeated string matching_types = 4 [json_name = "matching_types"];

  string name = 5;

  KinesisDestination kinesis_destination = 6 [json_name = "kinesis_destination"];

  SnsDestination sns_destination = 7 [json_name = "sns_destination"];

  CloudwatchDestination cloudwatch_destination = 8 [json_name = "cloudwatch_destination"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message KinesisDestination {
    string role_arn = 1 [json_name = "role_arn"];

    string stream_arn = 2 [json_name = "stream_arn"];
  }

  message SnsDestination {
    string topic_arn = 1 [json_name = "topic_arn"];
  }

  message CloudwatchDestination {
    string default_value = 1 [json_name = "default_value"];

    string dimension_name = 2 [json_name = "dimension_name"];

    string value_source = 3 [json_name = "value_source"];
  }
}

//AwsSesIdentityNotificationTopic version is 0
message AwsSesIdentityNotificationTopic {
  string id = 1;

  string identity = 2;

  bool include_original_headers = 3 [json_name = "include_original_headers"];

  string notification_type = 4 [json_name = "notification_type"];

  string topic_arn = 5 [json_name = "topic_arn"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsSesIdentityPolicy version is 0
message AwsSesIdentityPolicy {
  string id = 1;

  string identity = 2;

  string name = 3;

  string policy = 4;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsSesReceiptFilter version is 0
message AwsSesReceiptFilter {
  string cidr = 1;

  string id = 2;

  string name = 3;

  string policy = 4;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsSesReceiptRule version is 0
message AwsSesReceiptRule {
  string after = 1;

  bool enabled = 2;

  string id = 3;

  string name = 4;

  repeated string recipients = 5;

  string rule_set_name = 6 [json_name = "rule_set_name"];

  bool scan_enabled = 7 [json_name = "scan_enabled"];

  string tls_policy = 8 [json_name = "tls_policy"];

  LambdaAction lambda_action = 9 [json_name = "lambda_action"];

  S3Action s3_action = 10 [json_name = "s3_action"];

  SnsAction sns_action = 11 [json_name = "sns_action"];

  StopAction stop_action = 12 [json_name = "stop_action"];

  WorkmailAction workmail_action = 13 [json_name = "workmail_action"];

  AddHeaderAction add_header_action = 14 [json_name = "add_header_action"];

  BounceAction bounce_action = 15 [json_name = "bounce_action"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 16;

  int32 count = 17;

  terraform.meta.MetaFields.ForEachEntry for_each = 18;

  string provider = 19;

  terraform.meta.Lifecycle lifecycle = 20;

  message LambdaAction {
    string function_arn = 1 [json_name = "function_arn"];

    string invocation_type = 2 [json_name = "invocation_type"];

    int64 position = 3;

    string topic_arn = 4 [json_name = "topic_arn"];
  }

  message S3Action {
    string bucket_name = 1 [json_name = "bucket_name"];

    string kms_key_arn = 2 [json_name = "kms_key_arn"];

    string object_key_prefix = 3 [json_name = "object_key_prefix"];

    int64 position = 4;

    string topic_arn = 5 [json_name = "topic_arn"];
  }

  message SnsAction {
    int64 position = 1;

    string topic_arn = 2 [json_name = "topic_arn"];
  }

  message StopAction {
    int64 position = 1;

    string scope = 2;

    string topic_arn = 3 [json_name = "topic_arn"];
  }

  message WorkmailAction {
    string organization_arn = 1 [json_name = "organization_arn"];

    int64 position = 2;

    string topic_arn = 3 [json_name = "topic_arn"];
  }

  message AddHeaderAction {
    string header_name = 1 [json_name = "header_name"];

    string header_value = 2 [json_name = "header_value"];

    int64 position = 3;
  }

  message BounceAction {
    string message = 1;

    int64 position = 2;

    string sender = 3;

    string smtp_reply_code = 4 [json_name = "smtp_reply_code"];

    string status_code = 5 [json_name = "status_code"];

    string topic_arn = 6 [json_name = "topic_arn"];
  }
}

//AwsSesReceiptRuleSet version is 0
message AwsSesReceiptRuleSet {
  string id = 1;

  string rule_set_name = 2 [json_name = "rule_set_name"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 3;

  int32 count = 4;

  terraform.meta.MetaFields.ForEachEntry for_each = 5;

  string provider = 6;

  terraform.meta.Lifecycle lifecycle = 7;
}

//AwsSesTemplate version is 0
message AwsSesTemplate {
  string html = 1;

  string id = 2;

  string name = 3;

  string subject = 4;

  string text = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsSfnActivity version is 0
message AwsSfnActivity {
  string creation_date = 1 [json_name = "creation_date"];

  string id = 2;

  string name = 3;

  map<string, string> tags = 4;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsSfnStateMachine version is 0
message AwsSfnStateMachine {
  string creation_date = 1 [json_name = "creation_date"];

  string definition = 2;

  string id = 3;

  string name = 4;

  string role_arn = 5 [json_name = "role_arn"];

  string status = 6;

  map<string, string> tags = 7;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsShieldProtection version is 0
message AwsShieldProtection {
  string id = 1;

  string name = 2;

  string resource_arn = 3 [json_name = "resource_arn"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsSimpledbDomain version is 0
message AwsSimpledbDomain {
  string id = 1;

  string name = 2;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 3;

  int32 count = 4;

  terraform.meta.MetaFields.ForEachEntry for_each = 5;

  string provider = 6;

  terraform.meta.Lifecycle lifecycle = 7;
}

//AwsSnapshotCreateVolumePermission version is 0
message AwsSnapshotCreateVolumePermission {
  string account_id = 1 [json_name = "account_id"];

  string id = 2;

  string snapshot_id = 3 [json_name = "snapshot_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsSnsPlatformApplication version is 0
message AwsSnsPlatformApplication {
  string arn = 1;

  string event_delivery_failure_topic_arn = 2 [json_name = "event_delivery_failure_topic_arn"];

  string event_endpoint_created_topic_arn = 3 [json_name = "event_endpoint_created_topic_arn"];

  string event_endpoint_deleted_topic_arn = 4 [json_name = "event_endpoint_deleted_topic_arn"];

  string event_endpoint_updated_topic_arn = 5 [json_name = "event_endpoint_updated_topic_arn"];

  string failure_feedback_role_arn = 6 [json_name = "failure_feedback_role_arn"];

  string id = 7;

  string name = 8;

  string platform = 9;

  string platform_credential = 10 [json_name = "platform_credential"];

  string platform_principal = 11 [json_name = "platform_principal"];

  string success_feedback_role_arn = 12 [json_name = "success_feedback_role_arn"];

  string success_feedback_sample_rate = 13 [json_name = "success_feedback_sample_rate"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 14;

  int32 count = 15;

  terraform.meta.MetaFields.ForEachEntry for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;
}

//AwsSnsSmsPreferences version is 0
message AwsSnsSmsPreferences {
  string default_sender_id = 1 [json_name = "default_sender_id"];

  string default_sms_type = 2 [json_name = "default_sms_type"];

  string delivery_status_iam_role_arn = 3 [json_name = "delivery_status_iam_role_arn"];

  string delivery_status_success_sampling_rate = 4 [json_name = "delivery_status_success_sampling_rate"];

  string id = 5;

  string monthly_spend_limit = 6 [json_name = "monthly_spend_limit"];

  string usage_report_s3_bucket = 7 [json_name = "usage_report_s3_bucket"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsSnsTopic version is 0
message AwsSnsTopic {
  string application_failure_feedback_role_arn = 1 [json_name = "application_failure_feedback_role_arn"];

  string application_success_feedback_role_arn = 2 [json_name = "application_success_feedback_role_arn"];

  int64 application_success_feedback_sample_rate = 3 [json_name = "application_success_feedback_sample_rate"];

  string arn = 4;

  string delivery_policy = 5 [json_name = "delivery_policy"];

  string display_name = 6 [json_name = "display_name"];

  string http_failure_feedback_role_arn = 7 [json_name = "http_failure_feedback_role_arn"];

  string http_success_feedback_role_arn = 8 [json_name = "http_success_feedback_role_arn"];

  int64 http_success_feedback_sample_rate = 9 [json_name = "http_success_feedback_sample_rate"];

  string id = 10;

  string kms_master_key_id = 11 [json_name = "kms_master_key_id"];

  string lambda_failure_feedback_role_arn = 12 [json_name = "lambda_failure_feedback_role_arn"];

  string lambda_success_feedback_role_arn = 13 [json_name = "lambda_success_feedback_role_arn"];

  int64 lambda_success_feedback_sample_rate = 14 [json_name = "lambda_success_feedback_sample_rate"];

  string name = 15;

  string name_prefix = 16 [json_name = "name_prefix"];

  string policy = 17;

  string sqs_failure_feedback_role_arn = 18 [json_name = "sqs_failure_feedback_role_arn"];

  string sqs_success_feedback_role_arn = 19 [json_name = "sqs_success_feedback_role_arn"];

  int64 sqs_success_feedback_sample_rate = 20 [json_name = "sqs_success_feedback_sample_rate"];

  map<string, string> tags = 21;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 22;

  int32 count = 23;

  terraform.meta.MetaFields.ForEachEntry for_each = 24;

  string provider = 25;

  terraform.meta.Lifecycle lifecycle = 26;
}

//AwsSnsTopicPolicy version is 0
message AwsSnsTopicPolicy {
  string arn = 1;

  string id = 2;

  string policy = 3;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsSnsTopicSubscription version is 0
message AwsSnsTopicSubscription {
  string arn = 1;

  int64 confirmation_timeout_in_minutes = 2 [json_name = "confirmation_timeout_in_minutes"];

  string delivery_policy = 3 [json_name = "delivery_policy"];

  string endpoint = 4;

  bool endpoint_auto_confirms = 5 [json_name = "endpoint_auto_confirms"];

  string filter_policy = 6 [json_name = "filter_policy"];

  string id = 7;

  string protocol = 8;

  bool raw_message_delivery = 9 [json_name = "raw_message_delivery"];

  string topic_arn = 10 [json_name = "topic_arn"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 11;

  int32 count = 12;

  terraform.meta.MetaFields.ForEachEntry for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsSpotDatafeedSubscription version is 0
message AwsSpotDatafeedSubscription {
  string bucket = 1;

  string id = 2;

  string prefix = 3;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsSpotFleetRequest version is 1
message AwsSpotFleetRequest {
  string allocation_strategy = 1 [json_name = "allocation_strategy"];

  string client_token = 2 [json_name = "client_token"];

  string excess_capacity_termination_policy = 3 [json_name = "excess_capacity_termination_policy"];

  string fleet_type = 4 [json_name = "fleet_type"];

  string iam_fleet_role = 5 [json_name = "iam_fleet_role"];

  string id = 6;

  string instance_interruption_behaviour = 7 [json_name = "instance_interruption_behaviour"];

  int64 instance_pools_to_use_count = 8 [json_name = "instance_pools_to_use_count"];

  repeated string load_balancers = 9 [json_name = "load_balancers"];

  bool replace_unhealthy_instances = 10 [json_name = "replace_unhealthy_instances"];

  string spot_price = 11 [json_name = "spot_price"];

  string spot_request_state = 12 [json_name = "spot_request_state"];

  map<string, string> tags = 13;

  int64 target_capacity = 14 [json_name = "target_capacity"];

  repeated string target_group_arns = 15 [json_name = "target_group_arns"];

  bool terminate_instances_with_expiration = 16 [json_name = "terminate_instances_with_expiration"];

  string valid_from = 17 [json_name = "valid_from"];

  string valid_until = 18 [json_name = "valid_until"];

  bool wait_for_fulfillment = 19 [json_name = "wait_for_fulfillment"];

  LaunchSpecification launch_specification = 20 [json_name = "launch_specification"];

  Timeouts timeouts = 21;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 22;

  int32 count = 23;

  terraform.meta.MetaFields.ForEachEntry for_each = 24;

  string provider = 25;

  terraform.meta.Lifecycle lifecycle = 26;

  message LaunchSpecification {
    string ami = 1;

    bool associate_public_ip_address = 2 [json_name = "associate_public_ip_address"];

    string availability_zone = 3 [json_name = "availability_zone"];

    bool ebs_optimized = 4 [json_name = "ebs_optimized"];

    string iam_instance_profile = 5 [json_name = "iam_instance_profile"];

    string iam_instance_profile_arn = 6 [json_name = "iam_instance_profile_arn"];

    string instance_type = 7 [json_name = "instance_type"];

    string key_name = 8 [json_name = "key_name"];

    bool monitoring = 9;

    string placement_group = 10 [json_name = "placement_group"];

    string placement_tenancy = 11 [json_name = "placement_tenancy"];

    string spot_price = 12 [json_name = "spot_price"];

    string subnet_id = 13 [json_name = "subnet_id"];

    map<string, string> tags = 14;

    string user_data = 15 [json_name = "user_data"];

    repeated string vpc_security_group_ids = 16 [json_name = "vpc_security_group_ids"];

    string weighted_capacity = 17 [json_name = "weighted_capacity"];

    EbsBlockDevice ebs_block_device = 18 [json_name = "ebs_block_device"];

    EphemeralBlockDevice ephemeral_block_device = 19 [json_name = "ephemeral_block_device"];

    RootBlockDevice root_block_device = 20 [json_name = "root_block_device"];

    message EbsBlockDevice {
      bool delete_on_termination = 1 [json_name = "delete_on_termination"];

      string device_name = 2 [json_name = "device_name"];

      bool encrypted = 3;

      int64 iops = 4;

      string kms_key_id = 5 [json_name = "kms_key_id"];

      string snapshot_id = 6 [json_name = "snapshot_id"];

      int64 volume_size = 7 [json_name = "volume_size"];

      string volume_type = 8 [json_name = "volume_type"];
    }

    message EphemeralBlockDevice {
      string device_name = 1 [json_name = "device_name"];

      string virtual_name = 2 [json_name = "virtual_name"];
    }

    message RootBlockDevice {
      bool delete_on_termination = 1 [json_name = "delete_on_termination"];

      bool encrypted = 2;

      int64 iops = 3;

      string kms_key_id = 4 [json_name = "kms_key_id"];

      int64 volume_size = 5 [json_name = "volume_size"];

      string volume_type = 6 [json_name = "volume_type"];
    }
  }

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsSpotInstanceRequest version is 0
message AwsSpotInstanceRequest {
  string ami = 1;

  string arn = 2;

  bool associate_public_ip_address = 3 [json_name = "associate_public_ip_address"];

  string availability_zone = 4 [json_name = "availability_zone"];

  int64 block_duration_minutes = 5 [json_name = "block_duration_minutes"];

  int64 cpu_core_count = 6 [json_name = "cpu_core_count"];

  int64 cpu_threads_per_core = 7 [json_name = "cpu_threads_per_core"];

  bool disable_api_termination = 8 [json_name = "disable_api_termination"];

  bool ebs_optimized = 9 [json_name = "ebs_optimized"];

  bool get_password_data = 10 [json_name = "get_password_data"];

  bool hibernation = 11;

  string host_id = 12 [json_name = "host_id"];

  string iam_instance_profile = 13 [json_name = "iam_instance_profile"];

  string id = 14;

  string instance_initiated_shutdown_behavior = 15 [json_name = "instance_initiated_shutdown_behavior"];

  string instance_interruption_behaviour = 16 [json_name = "instance_interruption_behaviour"];

  string instance_state = 17 [json_name = "instance_state"];

  string instance_type = 18 [json_name = "instance_type"];

  int64 ipv6_address_count = 19 [json_name = "ipv6_address_count"];

  repeated string ipv6_addresses = 20 [json_name = "ipv6_addresses"];

  string key_name = 21 [json_name = "key_name"];

  string launch_group = 22 [json_name = "launch_group"];

  bool monitoring = 23;

  string network_interface_id = 24 [json_name = "network_interface_id"];

  string password_data = 25 [json_name = "password_data"];

  string placement_group = 26 [json_name = "placement_group"];

  string primary_network_interface_id = 27 [json_name = "primary_network_interface_id"];

  string private_dns = 28 [json_name = "private_dns"];

  string private_ip = 29 [json_name = "private_ip"];

  string public_dns = 30 [json_name = "public_dns"];

  string public_ip = 31 [json_name = "public_ip"];

  repeated string security_groups = 32 [json_name = "security_groups"];

  bool source_dest_check = 33 [json_name = "source_dest_check"];

  string spot_bid_status = 34 [json_name = "spot_bid_status"];

  string spot_instance_id = 35 [json_name = "spot_instance_id"];

  string spot_price = 36 [json_name = "spot_price"];

  string spot_request_state = 37 [json_name = "spot_request_state"];

  string spot_type = 38 [json_name = "spot_type"];

  string subnet_id = 39 [json_name = "subnet_id"];

  map<string, string> tags = 40;

  string tenancy = 41;

  string user_data = 42 [json_name = "user_data"];

  string user_data_base64 = 43 [json_name = "user_data_base64"];

  string valid_from = 44 [json_name = "valid_from"];

  string valid_until = 45 [json_name = "valid_until"];

  map<string, string> volume_tags = 46;

  repeated string vpc_security_group_ids = 47 [json_name = "vpc_security_group_ids"];

  bool wait_for_fulfillment = 48 [json_name = "wait_for_fulfillment"];

  MetadataOptions metadata_options = 49 [json_name = "metadata_options"];

  NetworkInterface network_interface = 50 [json_name = "network_interface"];

  RootBlockDevice root_block_device = 51 [json_name = "root_block_device"];

  Timeouts timeouts = 52;

  CreditSpecification credit_specification = 53 [json_name = "credit_specification"];

  EbsBlockDevice ebs_block_device = 54 [json_name = "ebs_block_device"];

  EphemeralBlockDevice ephemeral_block_device = 55 [json_name = "ephemeral_block_device"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 56;

  int32 count = 57;

  terraform.meta.MetaFields.ForEachEntry for_each = 58;

  string provider = 59;

  terraform.meta.Lifecycle lifecycle = 60;

  message MetadataOptions {
    string http_endpoint = 1 [json_name = "http_endpoint"];

    int64 http_put_response_hop_limit = 2 [json_name = "http_put_response_hop_limit"];

    string http_tokens = 3 [json_name = "http_tokens"];
  }

  message NetworkInterface {
    bool delete_on_termination = 1 [json_name = "delete_on_termination"];

    int64 device_index = 2 [json_name = "device_index"];

    string network_interface_id = 3 [json_name = "network_interface_id"];
  }

  message RootBlockDevice {
    bool delete_on_termination = 1 [json_name = "delete_on_termination"];

    string device_name = 2 [json_name = "device_name"];

    bool encrypted = 3;

    int64 iops = 4;

    string kms_key_id = 5 [json_name = "kms_key_id"];

    string volume_id = 6 [json_name = "volume_id"];

    int64 volume_size = 7 [json_name = "volume_size"];

    string volume_type = 8 [json_name = "volume_type"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;
  }

  message CreditSpecification {
    string cpu_credits = 1 [json_name = "cpu_credits"];
  }

  message EbsBlockDevice {
    bool delete_on_termination = 1 [json_name = "delete_on_termination"];

    string device_name = 2 [json_name = "device_name"];

    bool encrypted = 3;

    int64 iops = 4;

    string kms_key_id = 5 [json_name = "kms_key_id"];

    string snapshot_id = 6 [json_name = "snapshot_id"];

    string volume_id = 7 [json_name = "volume_id"];

    int64 volume_size = 8 [json_name = "volume_size"];

    string volume_type = 9 [json_name = "volume_type"];
  }

  message EphemeralBlockDevice {
    string device_name = 1 [json_name = "device_name"];

    bool no_device = 2 [json_name = "no_device"];

    string virtual_name = 3 [json_name = "virtual_name"];
  }
}

//AwsSqsQueue version is 0
message AwsSqsQueue {
  string arn = 1;

  bool content_based_deduplication = 2 [json_name = "content_based_deduplication"];

  int64 delay_seconds = 3 [json_name = "delay_seconds"];

  bool fifo_queue = 4 [json_name = "fifo_queue"];

  string id = 5;

  int64 kms_data_key_reuse_period_seconds = 6 [json_name = "kms_data_key_reuse_period_seconds"];

  string kms_master_key_id = 7 [json_name = "kms_master_key_id"];

  int64 max_message_size = 8 [json_name = "max_message_size"];

  int64 message_retention_seconds = 9 [json_name = "message_retention_seconds"];

  string name = 10;

  string name_prefix = 11 [json_name = "name_prefix"];

  string policy = 12;

  int64 receive_wait_time_seconds = 13 [json_name = "receive_wait_time_seconds"];

  string redrive_policy = 14 [json_name = "redrive_policy"];

  map<string, string> tags = 15;

  int64 visibility_timeout_seconds = 16 [json_name = "visibility_timeout_seconds"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 17;

  int32 count = 18;

  terraform.meta.MetaFields.ForEachEntry for_each = 19;

  string provider = 20;

  terraform.meta.Lifecycle lifecycle = 21;
}

//AwsSqsQueuePolicy version is 1
message AwsSqsQueuePolicy {
  string id = 1;

  string policy = 2;

  string queue_url = 3 [json_name = "queue_url"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsSsmActivation version is 0
message AwsSsmActivation {
  string activation_code = 1 [json_name = "activation_code"];

  string description = 2;

  string expiration_date = 3 [json_name = "expiration_date"];

  string expired = 4;

  string iam_role = 5 [json_name = "iam_role"];

  string id = 6;

  string name = 7;

  int64 registration_count = 8 [json_name = "registration_count"];

  int64 registration_limit = 9 [json_name = "registration_limit"];

  map<string, string> tags = 10;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 11;

  int32 count = 12;

  terraform.meta.MetaFields.ForEachEntry for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsSsmAssociation version is 1
message AwsSsmAssociation {
  string association_id = 1 [json_name = "association_id"];

  string association_name = 2 [json_name = "association_name"];

  string automation_target_parameter_name = 3 [json_name = "automation_target_parameter_name"];

  string compliance_severity = 4 [json_name = "compliance_severity"];

  string document_version = 5 [json_name = "document_version"];

  string id = 6;

  string instance_id = 7 [json_name = "instance_id"];

  string max_concurrency = 8 [json_name = "max_concurrency"];

  string max_errors = 9 [json_name = "max_errors"];

  string name = 10;

  map<string, string> parameters = 11;

  string schedule_expression = 12 [json_name = "schedule_expression"];

  Targets targets = 13;

  OutputLocation output_location = 14 [json_name = "output_location"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 15;

  int32 count = 16;

  terraform.meta.MetaFields.ForEachEntry for_each = 17;

  string provider = 18;

  terraform.meta.Lifecycle lifecycle = 19;

  message Targets {
    string key = 1;

    repeated string values = 2;
  }

  message OutputLocation {
    string s3_bucket_name = 1 [json_name = "s3_bucket_name"];

    string s3_key_prefix = 2 [json_name = "s3_key_prefix"];
  }
}

//AwsSsmDocument version is 0
message AwsSsmDocument {
  string arn = 1;

  string content = 2;

  string created_date = 3 [json_name = "created_date"];

  string default_version = 4 [json_name = "default_version"];

  string description = 5;

  string document_format = 6 [json_name = "document_format"];

  string document_type = 7 [json_name = "document_type"];

  string hash = 8;

  string hash_type = 9 [json_name = "hash_type"];

  string id = 10;

  string latest_version = 11 [json_name = "latest_version"];

  string name = 12;

  string owner = 13;

  repeated Parameter parameter = 14;

  map<string, string> permissions = 15;

  repeated string platform_types = 16 [json_name = "platform_types"];

  string schema_version = 17 [json_name = "schema_version"];

  string status = 18;

  map<string, string> tags = 19;

  string target_type = 20 [json_name = "target_type"];

  AttachmentsSource attachments_source = 21 [json_name = "attachments_source"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 22;

  int32 count = 23;

  terraform.meta.MetaFields.ForEachEntry for_each = 24;

  string provider = 25;

  terraform.meta.Lifecycle lifecycle = 26;

  message Parameter {
    //default_value: string
    string default_value = 1 [json_name = "default_value"];

    //description: string
    string description = 2;

    //name: string
    string name = 3;

    //type: string
    string type = 4;
  }

  message AttachmentsSource {
    string key = 1;

    string name = 2;

    repeated string values = 3;
  }
}

//AwsSsmMaintenanceWindow version is 0
message AwsSsmMaintenanceWindow {
  bool allow_unassociated_targets = 1 [json_name = "allow_unassociated_targets"];

  int64 cutoff = 2;

  string description = 3;

  int64 duration = 4;

  bool enabled = 5;

  string end_date = 6 [json_name = "end_date"];

  string id = 7;

  string name = 8;

  string schedule = 9;

  string schedule_timezone = 10 [json_name = "schedule_timezone"];

  string start_date = 11 [json_name = "start_date"];

  map<string, string> tags = 12;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 13;

  int32 count = 14;

  terraform.meta.MetaFields.ForEachEntry for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;
}

//AwsSsmMaintenanceWindowTarget version is 0
message AwsSsmMaintenanceWindowTarget {
  string description = 1;

  string id = 2;

  string name = 3;

  string owner_information = 4 [json_name = "owner_information"];

  string resource_type = 5 [json_name = "resource_type"];

  string window_id = 6 [json_name = "window_id"];

  Targets targets = 7;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message Targets {
    string key = 1;

    repeated string values = 2;
  }
}

//AwsSsmMaintenanceWindowTask version is 0
message AwsSsmMaintenanceWindowTask {
  string description = 1;

  string id = 2;

  string max_concurrency = 3 [json_name = "max_concurrency"];

  string max_errors = 4 [json_name = "max_errors"];

  string name = 5;

  int64 priority = 6;

  string service_role_arn = 7 [json_name = "service_role_arn"];

  string task_arn = 8 [json_name = "task_arn"];

  string task_type = 9 [json_name = "task_type"];

  string window_id = 10 [json_name = "window_id"];

  LoggingInfo logging_info = 11 [json_name = "logging_info"];

  Targets targets = 12;

  TaskInvocationParameters task_invocation_parameters = 13 [json_name = "task_invocation_parameters"];

  TaskParameters task_parameters = 14 [json_name = "task_parameters"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 15;

  int32 count = 16;

  terraform.meta.MetaFields.ForEachEntry for_each = 17;

  string provider = 18;

  terraform.meta.Lifecycle lifecycle = 19;

  message LoggingInfo {
    string s3_bucket_name = 1 [json_name = "s3_bucket_name"];

    string s3_bucket_prefix = 2 [json_name = "s3_bucket_prefix"];

    string s3_region = 3 [json_name = "s3_region"];
  }

  message Targets {
    string key = 1;

    repeated string values = 2;
  }

  message TaskInvocationParameters {
    AutomationParameters automation_parameters = 1 [json_name = "automation_parameters"];

    LambdaParameters lambda_parameters = 2 [json_name = "lambda_parameters"];

    RunCommandParameters run_command_parameters = 3 [json_name = "run_command_parameters"];

    StepFunctionsParameters step_functions_parameters = 4 [json_name = "step_functions_parameters"];

    message AutomationParameters {
      string document_version = 1 [json_name = "document_version"];

      Parameter parameter = 2;

      message Parameter {
        string name = 1;

        repeated string values = 2;
      }
    }

    message LambdaParameters {
      string client_context = 1 [json_name = "client_context"];

      string payload = 2;

      string qualifier = 3;
    }

    message RunCommandParameters {
      string comment = 1;

      string document_hash = 2 [json_name = "document_hash"];

      string document_hash_type = 3 [json_name = "document_hash_type"];

      string output_s3_bucket = 4 [json_name = "output_s3_bucket"];

      string output_s3_key_prefix = 5 [json_name = "output_s3_key_prefix"];

      string service_role_arn = 6 [json_name = "service_role_arn"];

      int64 timeout_seconds = 7 [json_name = "timeout_seconds"];

      Parameter parameter = 8;

      NotificationConfig notification_config = 9 [json_name = "notification_config"];

      message Parameter {
        string name = 1;

        repeated string values = 2;
      }

      message NotificationConfig {
        string notification_arn = 1 [json_name = "notification_arn"];

        repeated string notification_events = 2 [json_name = "notification_events"];

        string notification_type = 3 [json_name = "notification_type"];
      }
    }

    message StepFunctionsParameters {
      string input = 1;

      string name = 2;
    }
  }

  message TaskParameters {
    string name = 1;

    repeated string values = 2;
  }
}

//AwsSsmParameter version is 0
message AwsSsmParameter {
  string allowed_pattern = 1 [json_name = "allowed_pattern"];

  string arn = 2;

  string description = 3;

  string id = 4;

  string key_id = 5 [json_name = "key_id"];

  string name = 6;

  bool overwrite = 7;

  map<string, string> tags = 8;

  string tier = 9;

  string type = 10;

  string value = 11;

  int64 version = 12;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 13;

  int32 count = 14;

  terraform.meta.MetaFields.ForEachEntry for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;
}

//AwsSsmPatchBaseline version is 0
message AwsSsmPatchBaseline {
  repeated string approved_patches = 1 [json_name = "approved_patches"];

  string approved_patches_compliance_level = 2 [json_name = "approved_patches_compliance_level"];

  string description = 3;

  string id = 4;

  string name = 5;

  string operating_system = 6 [json_name = "operating_system"];

  repeated string rejected_patches = 7 [json_name = "rejected_patches"];

  map<string, string> tags = 8;

  ApprovalRule approval_rule = 9 [json_name = "approval_rule"];

  GlobalFilter global_filter = 10 [json_name = "global_filter"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 11;

  int32 count = 12;

  terraform.meta.MetaFields.ForEachEntry for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message ApprovalRule {
    int64 approve_after_days = 1 [json_name = "approve_after_days"];

    string compliance_level = 2 [json_name = "compliance_level"];

    bool enable_non_security = 3 [json_name = "enable_non_security"];

    PatchFilter patch_filter = 4 [json_name = "patch_filter"];

    message PatchFilter {
      string key = 1;

      repeated string values = 2;
    }
  }

  message GlobalFilter {
    string key = 1;

    repeated string values = 2;
  }
}

//AwsSsmPatchGroup version is 0
message AwsSsmPatchGroup {
  string baseline_id = 1 [json_name = "baseline_id"];

  string id = 2;

  string patch_group = 3 [json_name = "patch_group"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsSsmResourceDataSync version is 0
message AwsSsmResourceDataSync {
  string id = 1;

  string name = 2;

  S3Destination s3_destination = 3 [json_name = "s3_destination"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message S3Destination {
    string bucket_name = 1 [json_name = "bucket_name"];

    string kms_key_arn = 2 [json_name = "kms_key_arn"];

    string prefix = 3;

    string region = 4;

    string sync_format = 5 [json_name = "sync_format"];
  }
}

//AwsStoragegatewayCache version is 0
message AwsStoragegatewayCache {
  string disk_id = 1 [json_name = "disk_id"];

  string gateway_arn = 2 [json_name = "gateway_arn"];

  string id = 3;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsStoragegatewayCachedIscsiVolume version is 0
message AwsStoragegatewayCachedIscsiVolume {
  string arn = 1;

  bool chap_enabled = 2 [json_name = "chap_enabled"];

  string gateway_arn = 3 [json_name = "gateway_arn"];

  string id = 4;

  int64 lun_number = 5 [json_name = "lun_number"];

  string network_interface_id = 6 [json_name = "network_interface_id"];

  int64 network_interface_port = 7 [json_name = "network_interface_port"];

  string snapshot_id = 8 [json_name = "snapshot_id"];

  string source_volume_arn = 9 [json_name = "source_volume_arn"];

  map<string, string> tags = 10;

  string target_arn = 11 [json_name = "target_arn"];

  string target_name = 12 [json_name = "target_name"];

  string volume_arn = 13 [json_name = "volume_arn"];

  string volume_id = 14 [json_name = "volume_id"];

  int64 volume_size_in_bytes = 15 [json_name = "volume_size_in_bytes"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 16;

  int32 count = 17;

  terraform.meta.MetaFields.ForEachEntry for_each = 18;

  string provider = 19;

  terraform.meta.Lifecycle lifecycle = 20;
}

//AwsStoragegatewayGateway version is 0
message AwsStoragegatewayGateway {
  string activation_key = 1 [json_name = "activation_key"];

  string arn = 2;

  string cloudwatch_log_group_arn = 3 [json_name = "cloudwatch_log_group_arn"];

  string gateway_id = 4 [json_name = "gateway_id"];

  string gateway_ip_address = 5 [json_name = "gateway_ip_address"];

  string gateway_name = 6 [json_name = "gateway_name"];

  string gateway_timezone = 7 [json_name = "gateway_timezone"];

  string gateway_type = 8 [json_name = "gateway_type"];

  string id = 9;

  string medium_changer_type = 10 [json_name = "medium_changer_type"];

  string smb_guest_password = 11 [json_name = "smb_guest_password"];

  map<string, string> tags = 12;

  string tape_drive_type = 13 [json_name = "tape_drive_type"];

  SmbActiveDirectorySettings smb_active_directory_settings = 14 [json_name = "smb_active_directory_settings"];

  Timeouts timeouts = 15;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 16;

  int32 count = 17;

  terraform.meta.MetaFields.ForEachEntry for_each = 18;

  string provider = 19;

  terraform.meta.Lifecycle lifecycle = 20;

  message SmbActiveDirectorySettings {
    string domain_name = 1 [json_name = "domain_name"];

    string password = 2;

    string username = 3;
  }

  message Timeouts {
    string create = 1;
  }
}

//AwsStoragegatewayNfsFileShare version is 0
message AwsStoragegatewayNfsFileShare {
  string arn = 1;

  repeated string client_list = 2 [json_name = "client_list"];

  string default_storage_class = 3 [json_name = "default_storage_class"];

  string fileshare_id = 4 [json_name = "fileshare_id"];

  string gateway_arn = 5 [json_name = "gateway_arn"];

  bool guess_mime_type_enabled = 6 [json_name = "guess_mime_type_enabled"];

  string id = 7;

  bool kms_encrypted = 8 [json_name = "kms_encrypted"];

  string kms_key_arn = 9 [json_name = "kms_key_arn"];

  string location_arn = 10 [json_name = "location_arn"];

  string object_acl = 11 [json_name = "object_acl"];

  string path = 12;

  bool read_only = 13 [json_name = "read_only"];

  bool requester_pays = 14 [json_name = "requester_pays"];

  string role_arn = 15 [json_name = "role_arn"];

  string squash = 16;

  map<string, string> tags = 17;

  NfsFileShareDefaults nfs_file_share_defaults = 18 [json_name = "nfs_file_share_defaults"];

  Timeouts timeouts = 19;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 20;

  int32 count = 21;

  terraform.meta.MetaFields.ForEachEntry for_each = 22;

  string provider = 23;

  terraform.meta.Lifecycle lifecycle = 24;

  message NfsFileShareDefaults {
    string directory_mode = 1 [json_name = "directory_mode"];

    string file_mode = 2 [json_name = "file_mode"];

    int64 group_id = 3 [json_name = "group_id"];

    int64 owner_id = 4 [json_name = "owner_id"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsStoragegatewaySmbFileShare version is 0
message AwsStoragegatewaySmbFileShare {
  string arn = 1;

  string authentication = 2;

  string default_storage_class = 3 [json_name = "default_storage_class"];

  string fileshare_id = 4 [json_name = "fileshare_id"];

  string gateway_arn = 5 [json_name = "gateway_arn"];

  bool guess_mime_type_enabled = 6 [json_name = "guess_mime_type_enabled"];

  string id = 7;

  repeated string invalid_user_list = 8 [json_name = "invalid_user_list"];

  bool kms_encrypted = 9 [json_name = "kms_encrypted"];

  string kms_key_arn = 10 [json_name = "kms_key_arn"];

  string location_arn = 11 [json_name = "location_arn"];

  string object_acl = 12 [json_name = "object_acl"];

  bool read_only = 13 [json_name = "read_only"];

  bool requester_pays = 14 [json_name = "requester_pays"];

  string role_arn = 15 [json_name = "role_arn"];

  map<string, string> tags = 16;

  repeated string valid_user_list = 17 [json_name = "valid_user_list"];

  Timeouts timeouts = 18;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 19;

  int32 count = 20;

  terraform.meta.MetaFields.ForEachEntry for_each = 21;

  string provider = 22;

  terraform.meta.Lifecycle lifecycle = 23;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsStoragegatewayUploadBuffer version is 0
message AwsStoragegatewayUploadBuffer {
  string disk_id = 1 [json_name = "disk_id"];

  string gateway_arn = 2 [json_name = "gateway_arn"];

  string id = 3;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsStoragegatewayWorkingStorage version is 0
message AwsStoragegatewayWorkingStorage {
  string disk_id = 1 [json_name = "disk_id"];

  string gateway_arn = 2 [json_name = "gateway_arn"];

  string id = 3;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsSubnet version is 1
message AwsSubnet {
  string arn = 1;

  bool assign_ipv6_address_on_creation = 2 [json_name = "assign_ipv6_address_on_creation"];

  string availability_zone = 3 [json_name = "availability_zone"];

  string availability_zone_id = 4 [json_name = "availability_zone_id"];

  string cidr_block = 5 [json_name = "cidr_block"];

  string id = 6;

  string ipv6_cidr_block = 7 [json_name = "ipv6_cidr_block"];

  string ipv6_cidr_block_association_id = 8 [json_name = "ipv6_cidr_block_association_id"];

  bool map_public_ip_on_launch = 9 [json_name = "map_public_ip_on_launch"];

  string owner_id = 10 [json_name = "owner_id"];

  map<string, string> tags = 11;

  string vpc_id = 12 [json_name = "vpc_id"];

  Timeouts timeouts = 13;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 14;

  int32 count = 15;

  terraform.meta.MetaFields.ForEachEntry for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsSwfDomain version is 0
message AwsSwfDomain {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  string name_prefix = 5 [json_name = "name_prefix"];

  map<string, string> tags = 6;

  string workflow_execution_retention_period_in_days = 7 [json_name = "workflow_execution_retention_period_in_days"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsTransferServer version is 0
message AwsTransferServer {
  string arn = 1;

  string endpoint = 2;

  string endpoint_type = 3 [json_name = "endpoint_type"];

  bool force_destroy = 4 [json_name = "force_destroy"];

  string host_key = 5 [json_name = "host_key"];

  string host_key_fingerprint = 6 [json_name = "host_key_fingerprint"];

  string id = 7;

  string identity_provider_type = 8 [json_name = "identity_provider_type"];

  string invocation_role = 9 [json_name = "invocation_role"];

  string logging_role = 10 [json_name = "logging_role"];

  map<string, string> tags = 11;

  string url = 12;

  EndpointDetails endpoint_details = 13 [json_name = "endpoint_details"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 14;

  int32 count = 15;

  terraform.meta.MetaFields.ForEachEntry for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;

  message EndpointDetails {
    string vpc_endpoint_id = 1 [json_name = "vpc_endpoint_id"];
  }
}

//AwsTransferSshKey version is 0
message AwsTransferSshKey {
  string body = 1;

  string id = 2;

  string server_id = 3 [json_name = "server_id"];

  string user_name = 4 [json_name = "user_name"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsTransferUser version is 0
message AwsTransferUser {
  string arn = 1;

  string home_directory = 2 [json_name = "home_directory"];

  string id = 3;

  string policy = 4;

  string role = 5;

  string server_id = 6 [json_name = "server_id"];

  map<string, string> tags = 7;

  string user_name = 8 [json_name = "user_name"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsVolumeAttachment version is 0
message AwsVolumeAttachment {
  string device_name = 1 [json_name = "device_name"];

  bool force_detach = 2 [json_name = "force_detach"];

  string id = 3;

  string instance_id = 4 [json_name = "instance_id"];

  bool skip_destroy = 5 [json_name = "skip_destroy"];

  string volume_id = 6 [json_name = "volume_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsVpc version is 1
message AwsVpc {
  string arn = 1;

  bool assign_generated_ipv6_cidr_block = 2 [json_name = "assign_generated_ipv6_cidr_block"];

  string cidr_block = 3 [json_name = "cidr_block"];

  string default_network_acl_id = 4 [json_name = "default_network_acl_id"];

  string default_route_table_id = 5 [json_name = "default_route_table_id"];

  string default_security_group_id = 6 [json_name = "default_security_group_id"];

  string dhcp_options_id = 7 [json_name = "dhcp_options_id"];

  bool enable_classiclink = 8 [json_name = "enable_classiclink"];

  bool enable_classiclink_dns_support = 9 [json_name = "enable_classiclink_dns_support"];

  bool enable_dns_hostnames = 10 [json_name = "enable_dns_hostnames"];

  bool enable_dns_support = 11 [json_name = "enable_dns_support"];

  string id = 12;

  string instance_tenancy = 13 [json_name = "instance_tenancy"];

  string ipv6_association_id = 14 [json_name = "ipv6_association_id"];

  string ipv6_cidr_block = 15 [json_name = "ipv6_cidr_block"];

  string main_route_table_id = 16 [json_name = "main_route_table_id"];

  string owner_id = 17 [json_name = "owner_id"];

  map<string, string> tags = 18;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 19;

  int32 count = 20;

  terraform.meta.MetaFields.ForEachEntry for_each = 21;

  string provider = 22;

  terraform.meta.Lifecycle lifecycle = 23;
}

//AwsVpcDhcpOptions version is 0
message AwsVpcDhcpOptions {
  string domain_name = 1 [json_name = "domain_name"];

  repeated string domain_name_servers = 2 [json_name = "domain_name_servers"];

  string id = 3;

  repeated string netbios_name_servers = 4 [json_name = "netbios_name_servers"];

  string netbios_node_type = 5 [json_name = "netbios_node_type"];

  repeated string ntp_servers = 6 [json_name = "ntp_servers"];

  string owner_id = 7 [json_name = "owner_id"];

  map<string, string> tags = 8;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsVpcDhcpOptionsAssociation version is 0
message AwsVpcDhcpOptionsAssociation {
  string dhcp_options_id = 1 [json_name = "dhcp_options_id"];

  string id = 2;

  string vpc_id = 3 [json_name = "vpc_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsVpcEndpoint version is 0
message AwsVpcEndpoint {
  bool auto_accept = 1 [json_name = "auto_accept"];

  repeated string cidr_blocks = 2 [json_name = "cidr_blocks"];

  repeated DnsEntry dns_entry = 3 [json_name = "dns_entry"];

  string id = 4;

  repeated string network_interface_ids = 5 [json_name = "network_interface_ids"];

  string owner_id = 6 [json_name = "owner_id"];

  string policy = 7;

  string prefix_list_id = 8 [json_name = "prefix_list_id"];

  bool private_dns_enabled = 9 [json_name = "private_dns_enabled"];

  bool requester_managed = 10 [json_name = "requester_managed"];

  repeated string route_table_ids = 11 [json_name = "route_table_ids"];

  repeated string security_group_ids = 12 [json_name = "security_group_ids"];

  string service_name = 13 [json_name = "service_name"];

  string state = 14;

  repeated string subnet_ids = 15 [json_name = "subnet_ids"];

  map<string, string> tags = 16;

  string vpc_endpoint_type = 17 [json_name = "vpc_endpoint_type"];

  string vpc_id = 18 [json_name = "vpc_id"];

  Timeouts timeouts = 19;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 20;

  int32 count = 21;

  terraform.meta.MetaFields.ForEachEntry for_each = 22;

  string provider = 23;

  terraform.meta.Lifecycle lifecycle = 24;

  message DnsEntry {
    //dns_name: string
    string dns_name = 1 [json_name = "dns_name"];

    //hosted_zone_id: string
    string hosted_zone_id = 2 [json_name = "hosted_zone_id"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsVpcEndpointConnectionNotification version is 0
message AwsVpcEndpointConnectionNotification {
  repeated string connection_events = 1 [json_name = "connection_events"];

  string connection_notification_arn = 2 [json_name = "connection_notification_arn"];

  string id = 3;

  string notification_type = 4 [json_name = "notification_type"];

  string state = 5;

  string vpc_endpoint_id = 6 [json_name = "vpc_endpoint_id"];

  string vpc_endpoint_service_id = 7 [json_name = "vpc_endpoint_service_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 8;

  int32 count = 9;

  terraform.meta.MetaFields.ForEachEntry for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsVpcEndpointRouteTableAssociation version is 0
message AwsVpcEndpointRouteTableAssociation {
  string id = 1;

  string route_table_id = 2 [json_name = "route_table_id"];

  string vpc_endpoint_id = 3 [json_name = "vpc_endpoint_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsVpcEndpointService version is 0
message AwsVpcEndpointService {
  bool acceptance_required = 1 [json_name = "acceptance_required"];

  repeated string allowed_principals = 2 [json_name = "allowed_principals"];

  repeated string availability_zones = 3 [json_name = "availability_zones"];

  repeated string base_endpoint_dns_names = 4 [json_name = "base_endpoint_dns_names"];

  string id = 5;

  bool manages_vpc_endpoints = 6 [json_name = "manages_vpc_endpoints"];

  repeated string network_load_balancer_arns = 7 [json_name = "network_load_balancer_arns"];

  string private_dns_name = 8 [json_name = "private_dns_name"];

  string service_name = 9 [json_name = "service_name"];

  string service_type = 10 [json_name = "service_type"];

  string state = 11;

  map<string, string> tags = 12;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 13;

  int32 count = 14;

  terraform.meta.MetaFields.ForEachEntry for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;
}

//AwsVpcEndpointServiceAllowedPrincipal version is 0
message AwsVpcEndpointServiceAllowedPrincipal {
  string id = 1;

  string principal_arn = 2 [json_name = "principal_arn"];

  string vpc_endpoint_service_id = 3 [json_name = "vpc_endpoint_service_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsVpcEndpointSubnetAssociation version is 0
message AwsVpcEndpointSubnetAssociation {
  string id = 1;

  string subnet_id = 2 [json_name = "subnet_id"];

  string vpc_endpoint_id = 3 [json_name = "vpc_endpoint_id"];

  Timeouts timeouts = 4;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsVpcIpv4CidrBlockAssociation version is 0
message AwsVpcIpv4CidrBlockAssociation {
  string cidr_block = 1 [json_name = "cidr_block"];

  string id = 2;

  string vpc_id = 3 [json_name = "vpc_id"];

  Timeouts timeouts = 4;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsVpcPeeringConnection version is 0
message AwsVpcPeeringConnection {
  string accept_status = 1 [json_name = "accept_status"];

  bool auto_accept = 2 [json_name = "auto_accept"];

  string id = 3;

  string peer_owner_id = 4 [json_name = "peer_owner_id"];

  string peer_region = 5 [json_name = "peer_region"];

  string peer_vpc_id = 6 [json_name = "peer_vpc_id"];

  map<string, string> tags = 7;

  string vpc_id = 8 [json_name = "vpc_id"];

  Accepter accepter = 9;

  Requester requester = 10;

  Timeouts timeouts = 11;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 12;

  int32 count = 13;

  terraform.meta.MetaFields.ForEachEntry for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message Accepter {
    bool allow_classic_link_to_remote_vpc = 1 [json_name = "allow_classic_link_to_remote_vpc"];

    bool allow_remote_vpc_dns_resolution = 2 [json_name = "allow_remote_vpc_dns_resolution"];

    bool allow_vpc_to_remote_classic_link = 3 [json_name = "allow_vpc_to_remote_classic_link"];
  }

  message Requester {
    bool allow_classic_link_to_remote_vpc = 1 [json_name = "allow_classic_link_to_remote_vpc"];

    bool allow_remote_vpc_dns_resolution = 2 [json_name = "allow_remote_vpc_dns_resolution"];

    bool allow_vpc_to_remote_classic_link = 3 [json_name = "allow_vpc_to_remote_classic_link"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsVpcPeeringConnectionAccepter version is 0
message AwsVpcPeeringConnectionAccepter {
  string accept_status = 1 [json_name = "accept_status"];

  bool auto_accept = 2 [json_name = "auto_accept"];

  string id = 3;

  string peer_owner_id = 4 [json_name = "peer_owner_id"];

  string peer_region = 5 [json_name = "peer_region"];

  string peer_vpc_id = 6 [json_name = "peer_vpc_id"];

  map<string, string> tags = 7;

  string vpc_id = 8 [json_name = "vpc_id"];

  string vpc_peering_connection_id = 9 [json_name = "vpc_peering_connection_id"];

  Accepter accepter = 10;

  Requester requester = 11;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 12;

  int32 count = 13;

  terraform.meta.MetaFields.ForEachEntry for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message Accepter {
    bool allow_classic_link_to_remote_vpc = 1 [json_name = "allow_classic_link_to_remote_vpc"];

    bool allow_remote_vpc_dns_resolution = 2 [json_name = "allow_remote_vpc_dns_resolution"];

    bool allow_vpc_to_remote_classic_link = 3 [json_name = "allow_vpc_to_remote_classic_link"];
  }

  message Requester {
    bool allow_classic_link_to_remote_vpc = 1 [json_name = "allow_classic_link_to_remote_vpc"];

    bool allow_remote_vpc_dns_resolution = 2 [json_name = "allow_remote_vpc_dns_resolution"];

    bool allow_vpc_to_remote_classic_link = 3 [json_name = "allow_vpc_to_remote_classic_link"];
  }
}

//AwsVpcPeeringConnectionOptions version is 0
message AwsVpcPeeringConnectionOptions {
  string id = 1;

  string vpc_peering_connection_id = 2 [json_name = "vpc_peering_connection_id"];

  Accepter accepter = 3;

  Requester requester = 4;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message Accepter {
    bool allow_classic_link_to_remote_vpc = 1 [json_name = "allow_classic_link_to_remote_vpc"];

    bool allow_remote_vpc_dns_resolution = 2 [json_name = "allow_remote_vpc_dns_resolution"];

    bool allow_vpc_to_remote_classic_link = 3 [json_name = "allow_vpc_to_remote_classic_link"];
  }

  message Requester {
    bool allow_classic_link_to_remote_vpc = 1 [json_name = "allow_classic_link_to_remote_vpc"];

    bool allow_remote_vpc_dns_resolution = 2 [json_name = "allow_remote_vpc_dns_resolution"];

    bool allow_vpc_to_remote_classic_link = 3 [json_name = "allow_vpc_to_remote_classic_link"];
  }
}

//AwsVpnConnection version is 0
message AwsVpnConnection {
  string customer_gateway_configuration = 1 [json_name = "customer_gateway_configuration"];

  string customer_gateway_id = 2 [json_name = "customer_gateway_id"];

  string id = 3;

  repeated Routes routes = 4;

  bool static_routes_only = 5 [json_name = "static_routes_only"];

  map<string, string> tags = 6;

  string transit_gateway_attachment_id = 7 [json_name = "transit_gateway_attachment_id"];

  string transit_gateway_id = 8 [json_name = "transit_gateway_id"];

  string tunnel1_address = 9 [json_name = "tunnel1_address"];

  string tunnel1_bgp_asn = 10 [json_name = "tunnel1_bgp_asn"];

  int64 tunnel1_bgp_holdtime = 11 [json_name = "tunnel1_bgp_holdtime"];

  string tunnel1_cgw_inside_address = 12 [json_name = "tunnel1_cgw_inside_address"];

  string tunnel1_inside_cidr = 13 [json_name = "tunnel1_inside_cidr"];

  string tunnel1_preshared_key = 14 [json_name = "tunnel1_preshared_key"];

  string tunnel1_vgw_inside_address = 15 [json_name = "tunnel1_vgw_inside_address"];

  string tunnel2_address = 16 [json_name = "tunnel2_address"];

  string tunnel2_bgp_asn = 17 [json_name = "tunnel2_bgp_asn"];

  int64 tunnel2_bgp_holdtime = 18 [json_name = "tunnel2_bgp_holdtime"];

  string tunnel2_cgw_inside_address = 19 [json_name = "tunnel2_cgw_inside_address"];

  string tunnel2_inside_cidr = 20 [json_name = "tunnel2_inside_cidr"];

  string tunnel2_preshared_key = 21 [json_name = "tunnel2_preshared_key"];

  string tunnel2_vgw_inside_address = 22 [json_name = "tunnel2_vgw_inside_address"];

  string type = 23;

  repeated VgwTelemetry vgw_telemetry = 24 [json_name = "vgw_telemetry"];

  string vpn_gateway_id = 25 [json_name = "vpn_gateway_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 26;

  int32 count = 27;

  terraform.meta.MetaFields.ForEachEntry for_each = 28;

  string provider = 29;

  terraform.meta.Lifecycle lifecycle = 30;

  message Routes {
    //destination_cidr_block: string
    string destination_cidr_block = 1 [json_name = "destination_cidr_block"];

    //source: string
    string source = 2;

    //state: string
    string state = 3;
  }

  message VgwTelemetry {
    //accepted_route_count: number
    int64 accepted_route_count = 1 [json_name = "accepted_route_count"];

    //last_status_change: string
    string last_status_change = 2 [json_name = "last_status_change"];

    //outside_ip_address: string
    string outside_ip_address = 3 [json_name = "outside_ip_address"];

    //status: string
    string status = 4;

    //status_message: string
    string status_message = 5 [json_name = "status_message"];
  }
}

//AwsVpnConnectionRoute version is 0
message AwsVpnConnectionRoute {
  string destination_cidr_block = 1 [json_name = "destination_cidr_block"];

  string id = 2;

  string vpn_connection_id = 3 [json_name = "vpn_connection_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsVpnGateway version is 0
message AwsVpnGateway {
  string amazon_side_asn = 1 [json_name = "amazon_side_asn"];

  string availability_zone = 2 [json_name = "availability_zone"];

  string id = 3;

  map<string, string> tags = 4;

  string vpc_id = 5 [json_name = "vpc_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsVpnGatewayAttachment version is 0
message AwsVpnGatewayAttachment {
  string id = 1;

  string vpc_id = 2 [json_name = "vpc_id"];

  string vpn_gateway_id = 3 [json_name = "vpn_gateway_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsVpnGatewayRoutePropagation version is 0
message AwsVpnGatewayRoutePropagation {
  string id = 1;

  string route_table_id = 2 [json_name = "route_table_id"];

  string vpn_gateway_id = 3 [json_name = "vpn_gateway_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsWafByteMatchSet version is 0
message AwsWafByteMatchSet {
  string id = 1;

  string name = 2;

  ByteMatchTuples byte_match_tuples = 3 [json_name = "byte_match_tuples"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message ByteMatchTuples {
    string positional_constraint = 1 [json_name = "positional_constraint"];

    string target_string = 2 [json_name = "target_string"];

    string text_transformation = 3 [json_name = "text_transformation"];

    FieldToMatch field_to_match = 4 [json_name = "field_to_match"];

    message FieldToMatch {
      string data = 1;

      string type = 2;
    }
  }
}

//AwsWafGeoMatchSet version is 0
message AwsWafGeoMatchSet {
  string arn = 1;

  string id = 2;

  string name = 3;

  GeoMatchConstraint geo_match_constraint = 4 [json_name = "geo_match_constraint"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message GeoMatchConstraint {
    string type = 1;

    string value = 2;
  }
}

//AwsWafIpset version is 0
message AwsWafIpset {
  string arn = 1;

  string id = 2;

  string name = 3;

  IpSetDescriptors ip_set_descriptors = 4 [json_name = "ip_set_descriptors"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message IpSetDescriptors {
    string type = 1;

    string value = 2;
  }
}

//AwsWafRateBasedRule version is 0
message AwsWafRateBasedRule {
  string arn = 1;

  string id = 2;

  string metric_name = 3 [json_name = "metric_name"];

  string name = 4;

  string rate_key = 5 [json_name = "rate_key"];

  int64 rate_limit = 6 [json_name = "rate_limit"];

  map<string, string> tags = 7;

  Predicates predicates = 8;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message Predicates {
    string data_id = 1 [json_name = "data_id"];

    bool negated = 2;

    string type = 3;
  }
}

//AwsWafRegexMatchSet version is 0
message AwsWafRegexMatchSet {
  string arn = 1;

  string id = 2;

  string name = 3;

  RegexMatchTuple regex_match_tuple = 4 [json_name = "regex_match_tuple"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message RegexMatchTuple {
    string regex_pattern_set_id = 1 [json_name = "regex_pattern_set_id"];

    string text_transformation = 2 [json_name = "text_transformation"];

    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

    message FieldToMatch {
      string data = 1;

      string type = 2;
    }
  }
}

//AwsWafRegexPatternSet version is 0
message AwsWafRegexPatternSet {
  string arn = 1;

  string id = 2;

  string name = 3;

  repeated string regex_pattern_strings = 4 [json_name = "regex_pattern_strings"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsWafRule version is 0
message AwsWafRule {
  string arn = 1;

  string id = 2;

  string metric_name = 3 [json_name = "metric_name"];

  string name = 4;

  map<string, string> tags = 5;

  Predicates predicates = 6;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message Predicates {
    string data_id = 1 [json_name = "data_id"];

    bool negated = 2;

    string type = 3;
  }
}

//AwsWafRuleGroup version is 0
message AwsWafRuleGroup {
  string arn = 1;

  string id = 2;

  string metric_name = 3 [json_name = "metric_name"];

  string name = 4;

  map<string, string> tags = 5;

  ActivatedRule activated_rule = 6 [json_name = "activated_rule"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message ActivatedRule {
    int64 priority = 1;

    string rule_id = 2 [json_name = "rule_id"];

    string type = 3;

    Action action = 4;

    message Action {
      string type = 1;
    }
  }
}

//AwsWafSizeConstraintSet version is 0
message AwsWafSizeConstraintSet {
  string arn = 1;

  string id = 2;

  string name = 3;

  SizeConstraints size_constraints = 4 [json_name = "size_constraints"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message SizeConstraints {
    string comparison_operator = 1 [json_name = "comparison_operator"];

    int64 size = 2;

    string text_transformation = 3 [json_name = "text_transformation"];

    FieldToMatch field_to_match = 4 [json_name = "field_to_match"];

    message FieldToMatch {
      string data = 1;

      string type = 2;
    }
  }
}

//AwsWafSqlInjectionMatchSet version is 0
message AwsWafSqlInjectionMatchSet {
  string id = 1;

  string name = 2;

  SqlInjectionMatchTuples sql_injection_match_tuples = 3 [json_name = "sql_injection_match_tuples"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message SqlInjectionMatchTuples {
    string text_transformation = 1 [json_name = "text_transformation"];

    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

    message FieldToMatch {
      string data = 1;

      string type = 2;
    }
  }
}

//AwsWafWebAcl version is 0
message AwsWafWebAcl {
  string arn = 1;

  string id = 2;

  string metric_name = 3 [json_name = "metric_name"];

  string name = 4;

  map<string, string> tags = 5;

  DefaultAction default_action = 6 [json_name = "default_action"];

  LoggingConfiguration logging_configuration = 7 [json_name = "logging_configuration"];

  Rules rules = 8;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message DefaultAction {
    string type = 1;
  }

  message LoggingConfiguration {
    string log_destination = 1 [json_name = "log_destination"];

    RedactedFields redacted_fields = 2 [json_name = "redacted_fields"];

    message RedactedFields {
      FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

      message FieldToMatch {
        string data = 1;

        string type = 2;
      }
    }
  }

  message Rules {
    int64 priority = 1;

    string rule_id = 2 [json_name = "rule_id"];

    string type = 3;

    Action action = 4;

    OverrideAction override_action = 5 [json_name = "override_action"];

    message Action {
      string type = 1;
    }

    message OverrideAction {
      string type = 1;
    }
  }
}

//AwsWafXssMatchSet version is 0
message AwsWafXssMatchSet {
  string arn = 1;

  string id = 2;

  string name = 3;

  XssMatchTuples xss_match_tuples = 4 [json_name = "xss_match_tuples"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message XssMatchTuples {
    string text_transformation = 1 [json_name = "text_transformation"];

    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

    message FieldToMatch {
      string data = 1;

      string type = 2;
    }
  }
}

//AwsWafregionalByteMatchSet version is 0
message AwsWafregionalByteMatchSet {
  string id = 1;

  string name = 2;

  ByteMatchTuple byte_match_tuple = 3 [json_name = "byte_match_tuple"];

  ByteMatchTuples byte_match_tuples = 4 [json_name = "byte_match_tuples"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message ByteMatchTuple {
    string positional_constraint = 1 [json_name = "positional_constraint"];

    string target_string = 2 [json_name = "target_string"];

    string text_transformation = 3 [json_name = "text_transformation"];

    FieldToMatch field_to_match = 4 [json_name = "field_to_match"];

    message FieldToMatch {
      string data = 1;

      string type = 2;
    }
  }

  message ByteMatchTuples {
    string positional_constraint = 1 [json_name = "positional_constraint"];

    string target_string = 2 [json_name = "target_string"];

    string text_transformation = 3 [json_name = "text_transformation"];

    FieldToMatch field_to_match = 4 [json_name = "field_to_match"];

    message FieldToMatch {
      string data = 1;

      string type = 2;
    }
  }
}

//AwsWafregionalGeoMatchSet version is 0
message AwsWafregionalGeoMatchSet {
  string id = 1;

  string name = 2;

  GeoMatchConstraint geo_match_constraint = 3 [json_name = "geo_match_constraint"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message GeoMatchConstraint {
    string type = 1;

    string value = 2;
  }
}

//AwsWafregionalIpset version is 0
message AwsWafregionalIpset {
  string arn = 1;

  string id = 2;

  string name = 3;

  IpSetDescriptor ip_set_descriptor = 4 [json_name = "ip_set_descriptor"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message IpSetDescriptor {
    string type = 1;

    string value = 2;
  }
}

//AwsWafregionalRateBasedRule version is 0
message AwsWafregionalRateBasedRule {
  string arn = 1;

  string id = 2;

  string metric_name = 3 [json_name = "metric_name"];

  string name = 4;

  string rate_key = 5 [json_name = "rate_key"];

  int64 rate_limit = 6 [json_name = "rate_limit"];

  map<string, string> tags = 7;

  Predicate predicate = 8;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message Predicate {
    string data_id = 1 [json_name = "data_id"];

    bool negated = 2;

    string type = 3;
  }
}

//AwsWafregionalRegexMatchSet version is 0
message AwsWafregionalRegexMatchSet {
  string id = 1;

  string name = 2;

  RegexMatchTuple regex_match_tuple = 3 [json_name = "regex_match_tuple"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message RegexMatchTuple {
    string regex_pattern_set_id = 1 [json_name = "regex_pattern_set_id"];

    string text_transformation = 2 [json_name = "text_transformation"];

    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

    message FieldToMatch {
      string data = 1;

      string type = 2;
    }
  }
}

//AwsWafregionalRegexPatternSet version is 0
message AwsWafregionalRegexPatternSet {
  string id = 1;

  string name = 2;

  repeated string regex_pattern_strings = 3 [json_name = "regex_pattern_strings"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsWafregionalRule version is 0
message AwsWafregionalRule {
  string arn = 1;

  string id = 2;

  string metric_name = 3 [json_name = "metric_name"];

  string name = 4;

  map<string, string> tags = 5;

  Predicate predicate = 6;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message Predicate {
    string data_id = 1 [json_name = "data_id"];

    bool negated = 2;

    string type = 3;
  }
}

//AwsWafregionalRuleGroup version is 0
message AwsWafregionalRuleGroup {
  string arn = 1;

  string id = 2;

  string metric_name = 3 [json_name = "metric_name"];

  string name = 4;

  map<string, string> tags = 5;

  ActivatedRule activated_rule = 6 [json_name = "activated_rule"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 7;

  int32 count = 8;

  terraform.meta.MetaFields.ForEachEntry for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message ActivatedRule {
    int64 priority = 1;

    string rule_id = 2 [json_name = "rule_id"];

    string type = 3;

    Action action = 4;

    message Action {
      string type = 1;
    }
  }
}

//AwsWafregionalSizeConstraintSet version is 0
message AwsWafregionalSizeConstraintSet {
  string arn = 1;

  string id = 2;

  string name = 3;

  SizeConstraints size_constraints = 4 [json_name = "size_constraints"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 5;

  int32 count = 6;

  terraform.meta.MetaFields.ForEachEntry for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message SizeConstraints {
    string comparison_operator = 1 [json_name = "comparison_operator"];

    int64 size = 2;

    string text_transformation = 3 [json_name = "text_transformation"];

    FieldToMatch field_to_match = 4 [json_name = "field_to_match"];

    message FieldToMatch {
      string data = 1;

      string type = 2;
    }
  }
}

//AwsWafregionalSqlInjectionMatchSet version is 0
message AwsWafregionalSqlInjectionMatchSet {
  string id = 1;

  string name = 2;

  SqlInjectionMatchTuple sql_injection_match_tuple = 3 [json_name = "sql_injection_match_tuple"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message SqlInjectionMatchTuple {
    string text_transformation = 1 [json_name = "text_transformation"];

    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

    message FieldToMatch {
      string data = 1;

      string type = 2;
    }
  }
}

//AwsWafregionalWebAcl version is 0
message AwsWafregionalWebAcl {
  string arn = 1;

  string id = 2;

  string metric_name = 3 [json_name = "metric_name"];

  string name = 4;

  map<string, string> tags = 5;

  LoggingConfiguration logging_configuration = 6 [json_name = "logging_configuration"];

  Rule rule = 7;

  DefaultAction default_action = 8 [json_name = "default_action"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 9;

  int32 count = 10;

  terraform.meta.MetaFields.ForEachEntry for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message LoggingConfiguration {
    string log_destination = 1 [json_name = "log_destination"];

    RedactedFields redacted_fields = 2 [json_name = "redacted_fields"];

    message RedactedFields {
      FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

      message FieldToMatch {
        string data = 1;

        string type = 2;
      }
    }
  }

  message Rule {
    int64 priority = 1;

    string rule_id = 2 [json_name = "rule_id"];

    string type = 3;

    Action action = 4;

    OverrideAction override_action = 5 [json_name = "override_action"];

    message Action {
      string type = 1;
    }

    message OverrideAction {
      string type = 1;
    }
  }

  message DefaultAction {
    string type = 1;
  }
}

//AwsWafregionalWebAclAssociation version is 0
message AwsWafregionalWebAclAssociation {
  string id = 1;

  string resource_arn = 2 [json_name = "resource_arn"];

  string web_acl_id = 3 [json_name = "web_acl_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsWafregionalXssMatchSet version is 0
message AwsWafregionalXssMatchSet {
  string id = 1;

  string name = 2;

  XssMatchTuple xss_match_tuple = 3 [json_name = "xss_match_tuple"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 4;

  int32 count = 5;

  terraform.meta.MetaFields.ForEachEntry for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message XssMatchTuple {
    string text_transformation = 1 [json_name = "text_transformation"];

    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

    message FieldToMatch {
      string data = 1;

      string type = 2;
    }
  }
}

//AwsWorklinkFleet version is 0
message AwsWorklinkFleet {
  string arn = 1;

  string audit_stream_arn = 2 [json_name = "audit_stream_arn"];

  string company_code = 3 [json_name = "company_code"];

  string created_time = 4 [json_name = "created_time"];

  string device_ca_certificate = 5 [json_name = "device_ca_certificate"];

  string display_name = 6 [json_name = "display_name"];

  string id = 7;

  string last_updated_time = 8 [json_name = "last_updated_time"];

  string name = 9;

  bool optimize_for_end_user_location = 10 [json_name = "optimize_for_end_user_location"];

  IdentityProvider identity_provider = 11 [json_name = "identity_provider"];

  Network network = 12;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 13;

  int32 count = 14;

  terraform.meta.MetaFields.ForEachEntry for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message IdentityProvider {
    string saml_metadata = 1 [json_name = "saml_metadata"];

    string type = 2;
  }

  message Network {
    repeated string security_group_ids = 1 [json_name = "security_group_ids"];

    repeated string subnet_ids = 2 [json_name = "subnet_ids"];

    string vpc_id = 3 [json_name = "vpc_id"];
  }
}

//AwsWorklinkWebsiteCertificateAuthorityAssociation version is 0
message AwsWorklinkWebsiteCertificateAuthorityAssociation {
  string certificate = 1;

  string display_name = 2 [json_name = "display_name"];

  string fleet_arn = 3 [json_name = "fleet_arn"];

  string id = 4;

  string website_ca_id = 5 [json_name = "website_ca_id"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsWorkspacesDirectory version is 0
message AwsWorkspacesDirectory {
  string directory_id = 1 [json_name = "directory_id"];

  string id = 2;

  repeated string subnet_ids = 3 [json_name = "subnet_ids"];

  map<string, string> tags = 4;

  SelfServicePermissions self_service_permissions = 5 [json_name = "self_service_permissions"];

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message SelfServicePermissions {
    bool change_compute_type = 1 [json_name = "change_compute_type"];

    bool increase_volume_size = 2 [json_name = "increase_volume_size"];

    bool rebuild_workspace = 3 [json_name = "rebuild_workspace"];

    bool restart_workspace = 4 [json_name = "restart_workspace"];

    bool switch_running_mode = 5 [json_name = "switch_running_mode"];
  }
}

//AwsWorkspacesIpGroup version is 0
message AwsWorkspacesIpGroup {
  string description = 1;

  string id = 2;

  string name = 3;

  map<string, string> tags = 4;

  Rules rules = 5;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 6;

  int32 count = 7;

  terraform.meta.MetaFields.ForEachEntry for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message Rules {
    string description = 1;

    string source = 2;
  }
}

//AwsXraySamplingRule version is 0
message AwsXraySamplingRule {
  string arn = 1;

  map<string, string> attributes = 2;

  int64 fixed_rate = 3 [json_name = "fixed_rate"];

  string host = 4;

  string http_method = 5 [json_name = "http_method"];

  string id = 6;

  int64 priority = 7;

  int64 reservoir_size = 8 [json_name = "reservoir_size"];

  string resource_arn = 9 [json_name = "resource_arn"];

  string rule_name = 10 [json_name = "rule_name"];

  string service_name = 11 [json_name = "service_name"];

  string service_type = 12 [json_name = "service_type"];

  string url_path = 13 [json_name = "url_path"];

  int64 version = 14;

  terraform.meta.MetaFields.DependsOnEntry depends_on = 15;

  int32 count = 16;

  terraform.meta.MetaFields.ForEachEntry for_each = 17;

  string provider = 18;

  terraform.meta.Lifecycle lifecycle = 19;
}
